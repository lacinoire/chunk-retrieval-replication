travis_fold:start:worker_info[0K[33;1mWorker information[0m
hostname: ad8347bb-7cb8-4140-9590-db1cc62e0988@1.worker-org-5dcc948c89-h4btl.gce-production-2
version: v6.2.1 https://github.com/travis-ci/worker/tree/4e3246c044eb4915c2378ffacd0b3d3ed0136bba
instance: travis-job-7313c645-e669-4136-949e-12e767be39ca travis-ci-garnet-trusty-1512502259-986baf0 (via amqp)
startup: 6.653108924s
travis_fold:end:worker_info[0Ktravis_fold:start:system_info[0K[33;1mBuild system information[0m
Build language: scala
Build group: stable
Build dist: trusty
Build id: 565592331
Job id: 565592340
Runtime kernel version: 4.4.0-101-generic
travis-build version: 79e2f0246
[34m[1mBuild image provisioning date and time[0m
Tue Dec  5 19:58:13 UTC 2017
[34m[1mOperating System Details[0m
Distributor ID:	Ubuntu
Description:	Ubuntu 14.04.5 LTS
Release:	14.04
Codename:	trusty
[34m[1mCookbooks Version[0m
7c2c6a6 https://github.com/travis-ci/travis-cookbooks/tree/7c2c6a6
[34m[1mgit version[0m
git version 2.15.1
[34m[1mbash version[0m
GNU bash, version 4.3.11(1)-release (x86_64-pc-linux-gnu)
[34m[1mgcc version[0m
gcc (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

[34m[1mdocker version[0m
Client:
 Version:      17.09.0-ce
 API version:  1.32
 Go version:   go1.8.3
 Git commit:   afdb6d4
 Built:        Tue Sep 26 22:42:38 2017
 OS/Arch:      linux/amd64

Server:
 Version:      17.09.0-ce
 API version:  1.32 (minimum version 1.12)
 Go version:   go1.8.3
 Git commit:   afdb6d4
 Built:        Tue Sep 26 22:41:20 2017
 OS/Arch:      linux/amd64
 Experimental: false
[34m[1mclang version[0m
clang version 5.0.0 (tags/RELEASE_500/final)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /usr/local/clang-5.0.0/bin
[34m[1mjq version[0m
jq-1.5
[34m[1mbats version[0m
Bats 0.4.0
[34m[1mshellcheck version[0m
0.4.6
[34m[1mshfmt version[0m
v2.0.0
[34m[1mccache version[0m
ccache version 3.1.9

Copyright (C) 2002-2007 Andrew Tridgell
Copyright (C) 2009-2011 Joel Rosdahl

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 3 of the License, or (at your option) any later
version.
[34m[1mcmake version[0m
cmake version 3.9.2

CMake suite maintained and supported by Kitware (kitware.com/cmake).
[34m[1mheroku version[0m
heroku-cli/6.14.39-addc925 (linux-x64) node-v9.2.0
[34m[1mimagemagick version[0m
Version: ImageMagick 6.7.7-10 2017-07-31 Q16 http://www.imagemagick.org
[34m[1mmd5deep version[0m
4.2
[34m[1mmercurial version[0m
Mercurial Distributed SCM (version 4.2.2)
(see https://mercurial-scm.org for more information)

Copyright (C) 2005-2017 Matt Mackall and others
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
[34m[1mmysql version[0m
mysql  Ver 14.14 Distrib 5.6.33, for debian-linux-gnu (x86_64) using  EditLine wrapper
[34m[1mopenssl version[0m
OpenSSL 1.0.1f 6 Jan 2014
[34m[1mpacker version[0m
Packer v1.0.2

Your version of Packer is out of date! The latest version
is 1.1.2. You can update by downloading from www.packer.io
[34m[1mpostgresql client version[0m
psql (PostgreSQL) 9.6.6
[34m[1mragel version[0m
Ragel State Machine Compiler version 6.8 Feb 2013
Copyright (c) 2001-2009 by Adrian Thurston
[34m[1msubversion version[0m
svn, version 1.8.8 (r1568071)
   compiled Aug 10 2017, 17:20:39 on x86_64-pc-linux-gnu

Copyright (C) 2013 The Apache Software Foundation.
This software consists of contributions made by many people;
see the NOTICE file for more information.
Subversion is open source software, see http://subversion.apache.org/

The following repository access (RA) modules are available:

* ra_svn : Module for accessing a repository using the svn network protocol.
  - with Cyrus SASL authentication
  - handles 'svn' scheme
* ra_local : Module for accessing a repository on local disk.
  - handles 'file' scheme
* ra_serf : Module for accessing a repository via WebDAV protocol using serf.
  - using serf 1.3.3
  - handles 'http' scheme
  - handles 'https' scheme

[34m[1msudo version[0m
Sudo version 1.8.9p5
Configure options: --prefix=/usr -v --with-all-insults --with-pam --with-fqdn --with-logging=syslog --with-logfac=authpriv --with-env-editor --with-editor=/usr/bin/editor --with-timeout=15 --with-password-timeout=0 --with-passprompt=[sudo] password for %p:  --without-lecture --with-tty-tickets --disable-root-mailer --enable-admin-flag --with-sendmail=/usr/sbin/sendmail --with-timedir=/var/lib/sudo --mandir=/usr/share/man --libexecdir=/usr/lib/sudo --with-sssd --with-sssd-lib=/usr/lib/x86_64-linux-gnu --with-selinux
Sudoers policy plugin version 1.8.9p5
Sudoers file grammar version 43

Sudoers path: /etc/sudoers
Authentication methods: 'pam'
Syslog facility if syslog is being used for logging: authpriv
Syslog priority to use when user authenticates successfully: notice
Syslog priority to use when user authenticates unsuccessfully: alert
Send mail if the user is not in sudoers
Use a separate timestamp for each user/tty combo
Lecture user the first time they run sudo
Root may run sudo
Allow some information gathering to give useful error messages
Require fully-qualified hostnames in the sudoers file
Visudo will honor the EDITOR environment variable
Set the LOGNAME and USER environment variables
Length at which to wrap log file lines (0 for no wrap): 80
Authentication timestamp timeout: 15.0 minutes
Password prompt timeout: 0.0 minutes
Number of tries to enter a password: 3
Umask to use or 0777 to use user's: 022
Path to mail program: /usr/sbin/sendmail
Flags for mail program: -t
Address to send mail to: root
Subject line for mail messages: *** SECURITY information for %h ***
Incorrect password message: Sorry, try again.
Path to authentication timestamp dir: /var/lib/sudo
Default password prompt: [sudo] password for %p: 
Default user to run commands as: root
Value to override user's $PATH with: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin
Path to the editor for use by visudo: /usr/bin/editor
When to require a password for 'list' pseudocommand: any
When to require a password for 'verify' pseudocommand: all
File descriptors >= 3 will be closed before executing a command
Environment variables to check for sanity:
	TZ
	TERM
	LINGUAS
	LC_*
	LANGUAGE
	LANG
	COLORTERM
Environment variables to remove:
	RUBYOPT
	RUBYLIB
	PYTHONUSERBASE
	PYTHONINSPECT
	PYTHONPATH
	PYTHONHOME
	TMPPREFIX
	ZDOTDIR
	READNULLCMD
	NULLCMD
	FPATH
	PERL5DB
	PERL5OPT
	PERL5LIB
	PERLLIB
	PERLIO_DEBUG 
	JAVA_TOOL_OPTIONS
	SHELLOPTS
	GLOBIGNORE
	PS4
	BASH_ENV
	ENV
	TERMCAP
	TERMPATH
	TERMINFO_DIRS
	TERMINFO
	_RLD*
	LD_*
	PATH_LOCALE
	NLSPATH
	HOSTALIASES
	RES_OPTIONS
	LOCALDOMAIN
	CDPATH
	IFS
Environment variables to preserve:
	JAVA_HOME
	TRAVIS
	CI
	DEBIAN_FRONTEND
	XAUTHORIZATION
	XAUTHORITY
	PS2
	PS1
	PATH
	LS_COLORS
	KRB5CCNAME
	HOSTNAME
	HOME
	DISPLAY
	COLORS
Locale to use while parsing sudoers: C
Directory in which to store input/output logs: /var/log/sudo-io
File in which to store the input/output log: %{seq}
Add an entry to the utmp/utmpx file when allocating a pty
PAM service name to use
PAM service name to use for login shells
Create a new PAM session for the command to run in
Maximum I/O log sequence number: 0

Local IP address and netmask pairs:
	10.240.0.28/255.255.255.255
	172.17.0.1/255.255.0.0

Sudoers I/O plugin version 1.8.9p5
[34m[1mgzip version[0m
gzip 1.6
Copyright (C) 2007, 2010, 2011 Free Software Foundation, Inc.
Copyright (C) 1993 Jean-loup Gailly.
This is free software.  You may redistribute copies of it under the terms of
the GNU General Public License <http://www.gnu.org/licenses/gpl.html>.
There is NO WARRANTY, to the extent permitted by law.

Written by Jean-loup Gailly.
[34m[1mzip version[0m
Copyright (c) 1990-2008 Info-ZIP - Type 'zip "-L"' for software license.
This is Zip 3.0 (July 5th 2008), by Info-ZIP.
Currently maintained by E. Gordon.  Please send bug reports to
the authors using the web page at www.info-zip.org; see README for details.

Latest sources and executables are at ftp://ftp.info-zip.org/pub/infozip,
as of above date; see http://www.info-zip.org/ for other sites.

Compiled with gcc 4.8.2 for Unix (Linux ELF) on Oct 21 2013.

Zip special compilation options:
	USE_EF_UT_TIME       (store Universal Time)
	BZIP2_SUPPORT        (bzip2 library version 1.0.6, 6-Sept-2010)
	    bzip2 code and library copyright (c) Julian R Seward
	    (See the bzip2 license for terms of use)
	SYMLINK_SUPPORT      (symbolic links supported)
	LARGE_FILE_SUPPORT   (can read and write large files on file system)
	ZIP64_SUPPORT        (use Zip64 to store large files in archives)
	UNICODE_SUPPORT      (store and read UTF-8 Unicode paths)
	STORE_UNIX_UIDs_GIDs (store UID/GID sizes/values using new extra field)
	UIDGID_NOT_16BIT     (old Unix 16-bit UID/GID extra field not used)
	[encryption, version 2.91 of 05 Jan 2007] (modified for Zip 3)

Encryption notice:
	The encryption code of this program is not copyrighted and is
	put in the public domain.  It was originally written in Europe
	and, to the best of our knowledge, can be freely distributed
	in both source and object forms from any country, including
	the USA under License Exception TSU of the U.S. Export
	Administration Regulations (section 740.13(e)) of 6 June 2002.

Zip environment options:
             ZIP:  [none]
          ZIPOPT:  [none]
[34m[1mvim version[0m
VIM - Vi IMproved 7.4 (2013 Aug 10, compiled Nov 24 2016 16:43:18)
Included patches: 1-52
Extra patches: 8.0.0056
Modified by pkg-vim-maintainers@lists.alioth.debian.org
Compiled by buildd@
Huge version without GUI.  Features included (+) or not (-):
+acl             +farsi           +mouse_netterm   +syntax
+arabic          +file_in_path    +mouse_sgr       +tag_binary
+autocmd         +find_in_path    -mouse_sysmouse  +tag_old_static
-balloon_eval    +float           +mouse_urxvt     -tag_any_white
-browse          +folding         +mouse_xterm     -tcl
++builtin_terms  -footer          +multi_byte      +terminfo
+byte_offset     +fork()          +multi_lang      +termresponse
+cindent         +gettext         -mzscheme        +textobjects
-clientserver    -hangul_input    +netbeans_intg   +title
-clipboard       +iconv           +path_extra      -toolbar
+cmdline_compl   +insert_expand   -perl            +user_commands
+cmdline_hist    +jumplist        +persistent_undo +vertsplit
+cmdline_info    +keymap          +postscript      +virtualedit
+comments        +langmap         +printer         +visual
+conceal         +libcall         +profile         +visualextra
+cryptv          +linebreak       +python          +viminfo
+cscope          +lispindent      -python3         +vreplace
+cursorbind      +listcmds        +quickfix        +wildignore
+cursorshape     +localmap        +reltime         +wildmenu
+dialog_con      -lua             +rightleft       +windows
+diff            +menu            -ruby            +writebackup
+digraphs        +mksession       +scrollbind      -X11
-dnd             +modify_fname    +signs           -xfontset
-ebcdic          +mouse           +smartindent     -xim
+emacs_tags      -mouseshape      -sniff           -xsmp
+eval            +mouse_dec       +startuptime     -xterm_clipboard
+ex_extra        +mouse_gpm       +statusline      -xterm_save
+extra_search    -mouse_jsbterm   -sun_workshop    -xpm
   system vimrc file: "$VIM/vimrc"
     user vimrc file: "$HOME/.vimrc"
 2nd user vimrc file: "~/.vim/vimrc"
      user exrc file: "$HOME/.exrc"
  fall-back for $VIM: "/usr/share/vim"
Compilation: gcc -c -I. -Iproto -DHAVE_CONFIG_H     -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1      
Linking: gcc   -Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,--as-needed -o vim        -lm -ltinfo -lnsl  -lselinux  -lacl -lattr -lgpm -ldl    -L/usr/lib/python2.7/config-x86_64-linux-gnu -lpython2.7 -lpthread -ldl -lutil -lm -Xlinker -export-dynamic -Wl,-O1 -Wl,-Bsymbolic-functions      
[34m[1miptables version[0m
iptables v1.4.21
[34m[1mcurl version[0m
curl 7.35.0 (x86_64-pc-linux-gnu) libcurl/7.35.0 OpenSSL/1.0.1f zlib/1.2.8 libidn/1.28 librtmp/2.3
[34m[1mwget version[0m
GNU Wget 1.15 built on linux-gnu.
[34m[1mrsync version[0m
rsync  version 3.1.0  protocol version 31
[34m[1mgimme version[0m
v1.2.0
[34m[1mnvm version[0m
0.33.6
[34m[1mperlbrew version[0m
/home/travis/perl5/perlbrew/bin/perlbrew  - App::perlbrew/0.80
[34m[1mphpenv version[0m
rbenv 1.1.1-25-g6aa70b6
[34m[1mrvm version[0m
rvm 1.29.3 (latest) by Michal Papis, Piotr Kuczynski, Wayne E. Seguin [https://rvm.io]
[34m[1mdefault ruby version[0m
ruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-linux]
[34m[1mCouchDB version[0m
couchdb 1.6.1
[34m[1mElasticSearch version[0m
5.5.0
[34m[1mInstalled Firefox version[0m
firefox 56.0.2
[34m[1mMongoDB version[0m
MongoDB 3.4.10
[34m[1mPhantomJS version[0m
2.1.1
[34m[1mPre-installed PostgreSQL versions[0m
9.2.24
9.3.20
9.4.15
9.5.10
9.6.6
[34m[1mRabbitMQ Version[0m
3.6.14
[34m[1mRedis version[0m
redis-server 4.0.6
[34m[1mriak version[0m
2.2.3
[34m[1mPre-installed Go versions[0m
1.7.4
[34m[1mant version[0m
Apache Ant(TM) version 1.9.3 compiled on April 8 2014
[34m[1mmvn version[0m
Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z)
Maven home: /usr/local/maven-3.5.2
Java version: 1.8.0_151, vendor: Oracle Corporation
Java home: /usr/lib/jvm/java-8-oracle/jre
Default locale: en_US, platform encoding: UTF-8
OS name: "linux", version: "4.4.0-98-generic", arch: "amd64", family: "unix"
[34m[1mgradle version[0m

------------------------------------------------------------
Gradle 4.0.1
------------------------------------------------------------

Build time:   2017-07-07 14:02:41 UTC
Revision:     38e5dc0f772daecca1d2681885d3d85414eb6826

Groovy:       2.4.11
Ant:          Apache Ant(TM) version 1.9.6 compiled on June 29 2015
JVM:          1.8.0_151 (Oracle Corporation 25.151-b12)
OS:           Linux 4.4.0-98-generic amd64

[34m[1mlein version[0m
Leiningen 2.8.1 on Java 1.8.0_151 Java HotSpot(TM) 64-Bit Server VM
[34m[1mPre-installed Node.js versions[0m
v4.8.6
v6.12.0
v6.12.1
v8.9
v8.9.1
[34m[1mphpenv versions[0m
  system
  5.6
* 5.6.32 (set by /home/travis/.phpenv/version)
  7.0
  7.0.25
  7.1
  7.1.11
  hhvm
  hhvm-stable
[34m[1mcomposer --version[0m
Composer version 1.5.2 2017-09-11 16:59:25
[34m[1mPre-installed Ruby versions[0m
ruby-2.2.7
ruby-2.3.4
ruby-2.4.1
travis_fold:end:system_info[0K
travis_fold:start:docker_mtu[0Kdocker stop/waiting
docker start/running, process 4377
travis_fold:end:docker_mtu[0Ktravis_fold:start:resolvconf[0Kresolvconf stop/waiting
resolvconf start/running
travis_fold:end:resolvconf[0K
travis_fold:start:install_jdk[0K[33;1mInstalling oraclejdk8[0m
$ jdk_switcher use "oraclejdk8"
Switching to Oracle JDK8 (java-8-oracle), JAVA_HOME will be set to /usr/lib/jvm/java-8-oracle
travis_fold:end:install_jdk[0K[32;1mUpdating sbt[0m
travis_fold:start:apt[0Ktravis_fold:end:apt[0K
travis_fold:start:git.checkout[0Ktravis_time:start:07e80998[0K$ git clone --depth=3 --quiet https://github.com/twitter/finagle.git twitter/finagle
travis_time:end:07e80998:start=1564506658717116106,finish=1564506660304958422,duration=1587842316[0K$ cd twitter/finagle
travis_time:start:252a8ccf[0K$ git fetch origin +refs/pull/782/merge: --quiet
travis_time:end:252a8ccf:start=1564506660309250724,finish=1564506660841878871,duration=532628147[0K$ git checkout -qf FETCH_HEAD
travis_fold:end:git.checkout[0K

[33;1mEncrypted environment variables have been removed for security reasons.[0m
[33;1mSee https://docs.travis-ci.com/user/pull-requests/#pull-requests-and-security-restrictions[0m

[33;1mSetting environment variables from .travis.yml[0m
$ export JAVA_OPTS="-DSKIP_FLAKY=1 -DSKIP_FLAKY_TRAVIS=1 -Dsbt.log.noformat=true"
$ export PROJECT=finagle-http

$ export JVM_OPTS=@/etc/sbt/jvmopts
$ export SBT_OPTS=@/etc/sbt/sbtopts
travis_fold:start:cache.1[0KSetting up build cache
$ export CASHER_DIR=${TRAVIS_HOME}/.casher
travis_time:start:11f0ec3e[0K$ Installing caching utilities
travis_time:end:11f0ec3e:start=1564506665563163526,finish=1564506665716306969,duration=153143443[0Ktravis_time:start:00defd64[0Ktravis_time:end:00defd64:start=1564506665724568517,finish=1564506665729476014,duration=4907497[0Ktravis_time:start:036b0cf8[0Kattempting to download cache archive[0m
[32;1mfetching PR.782/cache-linux-trusty-fe50ad31b9e125bdcaf11913edd4b23035cefbe8fbfc153b4a5e047331067305--jdk-oraclejdk8--scala-2.11.12.tgz[0m
[32;1mfetching PR.782/cache--jdk-oraclejdk8--scala-2.11.12.tgz[0m
[32;1mfetching develop/cache-linux-trusty-fe50ad31b9e125bdcaf11913edd4b23035cefbe8fbfc153b4a5e047331067305--jdk-oraclejdk8--scala-2.11.12.tgz[0m
[32;1mfound cache[0m
travis_time:end:036b0cf8:start=1564506665735681131,finish=1564506669402487770,duration=3666806639[0Ktravis_time:start:0fb523a0[0Ktravis_time:end:0fb523a0:start=1564506669409237376,finish=1564506669414822549,duration=5585173[0Ktravis_time:start:0099534c[0Kadding /home/travis/.ivy2/cache to cache[0m
creating directory /home/travis/.ivy2/cache[0m
adding /home/travis/.ivy2/local/com.twitter to cache[0m
creating directory /home/travis/.ivy2/local/com.twitter[0m
adding /home/travis/.sbt to cache[0m
creating directory /home/travis/.sbt[0m
adding /home/travis/.dodo to cache[0m
creating directory /home/travis/.dodo[0m
travis_time:end:0099534c:start=1564506669421351407,finish=1564506675089507707,duration=5668156300[0Ktravis_fold:end:cache.1[0K
$ java -Xmx32m -version
java version "1.8.0_151"
Java(TM) SE Runtime Environment (build 1.8.0_151-b12)
Java HotSpot(TM) 64-Bit Server VM (build 25.151-b12, mixed mode)
$ javac -J-Xmx32m -version
javac 1.8.0_151
Using Scala 2.11.12
travis_fold:start:before_install[0Ktravis_time:start:08b7cec0[0K$ sudo apt-get install -y xmlstarlet
Reading package lists... 0%Reading package lists... 100%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
The following NEW packages will be installed:
  xmlstarlet
0 upgraded, 1 newly installed, 0 to remove and 304 not upgraded.
Need to get 290 kB of archives.
After this operation, 525 kB of additional disk space will be used.
0% [Working]            Get:1 http://archive.ubuntu.com/ubuntu trusty/universe amd64 xmlstarlet amd64 1.5.0-1 [290 kB]
3% [1 xmlstarlet 12.3 kB/290 kB 4%]                                   100% [Working]              Fetched 290 kB in 0s (17.2 MB/s)
Selecting previously unselected package xmlstarlet.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 93695 files and directories currently installed.)
Preparing to unpack .../xmlstarlet_1.5.0-1_amd64.deb ...
Unpacking xmlstarlet (1.5.0-1) ...
Processing triggers for man-db (2.6.7.1-1ubuntu1) ...
Setting up xmlstarlet (1.5.0-1) ...
travis_time:end:08b7cec0:start=1564506675948490912,finish=1564506677876325114,duration=1927834202[0Ktravis_fold:end:before_install[0Ktravis_fold:start:before_script.1[0Ktravis_time:start:0c0f1f39[0K$ unset SBT_OPTS
travis_time:end:0c0f1f39:start=1564506677880765335,finish=1564506677883364008,duration=2598673[0Ktravis_fold:end:before_script.1[0Ktravis_fold:start:before_script.2[0Ktravis_time:start:189df8e1[0K$ curl -s https://raw.githubusercontent.com/twitter/dodo/develop/bin/build | bash -s -- --no-test --scala-version $TRAVIS_SCALA_VERSION finagle
[info] Determining projects...
[info] ------------------------------------------------------------------------
[info] Dodo Build Order:
[info]   util
[info]   scroogecore
[info]  
[info] ------------------------------------------------------------------------
[info] Building util
[info] ------------------------------------------------------------------------
[info]  
[info] --- git-sha @ 0f0bcd44d8a241c8b2e14af568cbe83dec0c7fae ---
[info]  
[info] Using previously built results...
[info]  
[info] --- built-sha @ 0f0bcd44d8a241c8b2e14af568cbe83dec0c7fae ---
[info]  
[info]  
[info] ------------------------------------------------------------------------
[info] Building scroogecore
[info] ------------------------------------------------------------------------
[info]  
[info] --- git-sha @ 14d4b98084551822cda2a50159bab19cd0894338 ---
[info]  
[info] Using previously built results...
[info]  
[info] --- built-sha @ 14d4b98084551822cda2a50159bab19cd0894338 ---
[info]  
[info] ------------------------------------------------------------------------
[info] BUILD SUCCESS
[info] ------------------------------------------------------------------------
[info] Total time: 1 s
[info] Finished at: 2019T17:11:18+0000
[info] Twitter Dodo version v19.7.0
[info] ------------------------------------------------------------------------
travis_time:end:189df8e1:start=1564506677887502191,finish=1564506678791063364,duration=903561173[0Ktravis_fold:end:before_script.2[0Ktravis_fold:start:before_script.3[0Ktravis_time:start:044cf154[0K$ travis_retry ./sbt --error ++$TRAVIS_SCALA_VERSION ci:update finagle-memcached/update
downloading /home/travis/build/twitter/finagle/sbt-launch.jar
[info] Loading settings from build.sbt,unidoc.sbt,plugins.sbt ...
[info] Loading project definition from /home/travis/build/twitter/finagle/project
[info] Updating ProjectRef(uri("file:/home/travis/build/twitter/finagle/project/"), "finagle-build")...
[warn] Choosing local for com.twitter#scrooge-sbt-plugin;19.8.0-SNAPSHOT
[warn] Choosing local for com.twitter#scrooge-generator_2.12;19.8.0-SNAPSHOT
[info] Done updating.
[info] Loading settings from build.sbt ...
[info] Resolving key references (17383 settings) ...
[info] Using Netty SNAPSHOT build mode: false
[info] Netty version: 4.1.35.Final
[info] Netty tcnative version 2.0.25.Final
[info] Set current project to finagle (in build file:/home/travis/build/twitter/finagle/)
[warn] The `-` command is deprecated in favor of `onFailure` and will be removed in a later version
[info] Setting Scala version to 2.11.12 on 30 projects.
[info] Reapplying settings...
[info] Using Netty SNAPSHOT build mode: false
[info] Netty version: 4.1.35.Final
[info] Netty tcnative version 2.0.25.Final
[info] Set current project to finagle (in build file:/home/travis/build/twitter/finagle/)
Downloading https://repo1.maven.org/maven2/com/novocode/junit-interface/0.11/junit-interface-0.11.pom.sha1
Downloading https://repo1.maven.org/maven2/com/novocode/junit-interface/0.11/junit-interface-0.11.pom
Downloading https://repo1.maven.org/maven2/org/mockito/mockito-all/1.9.5/mockito-all-1.9.5.pom
Downloading https://repo1.maven.org/maven2/org/mockito/mockito-all/1.9.5/mockito-all-1.9.5.pom.sha1
Downloading https://repo1.maven.org/maven2/org/scala-lang/scala-library/2.11.12/scala-library-2.11.12.pom
Downloading https://repo1.maven.org/maven2/org/scala-lang/scala-library/2.11.12/scala-library-2.11.12.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/mockito/mockito-all/1.9.5/mockito-all-1.9.5.pom
Downloaded https://repo1.maven.org/maven2/com/novocode/junit-interface/0.11/junit-interface-0.11.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/scala-lang/scala-library/2.11.12/scala-library-2.11.12.pom
Downloaded https://repo1.maven.org/maven2/org/scala-lang/scala-library/2.11.12/scala-library-2.11.12.pom.sha1
Downloaded https://repo1.maven.org/maven2/com/novocode/junit-interface/0.11/junit-interface-0.11.pom
Downloading https://repo1.maven.org/maven2/org/scalacheck/scalacheck_2.11/1.13.4/scalacheck_2.11-1.13.4.pom
Downloading https://repo1.maven.org/maven2/org/scalatest/scalatest_2.11/3.0.0/scalatest_2.11-3.0.0.pom
Downloaded https://repo1.maven.org/maven2/org/mockito/mockito-all/1.9.5/mockito-all-1.9.5.pom.sha1
Downloading https://repo1.maven.org/maven2/org/scalatest/scalatest_2.11/3.0.0/scalatest_2.11-3.0.0.pom.sha1
Downloading https://repo1.maven.org/maven2/org/scalacheck/scalacheck_2.11/1.13.4/scalacheck_2.11-1.13.4.pom.sha1
Downloading https://repo1.maven.org/maven2/org/mockito/mockito-all/1.9.5/
Downloading https://repo1.maven.org/maven2/org/scala-lang/scala-library/2.11.12/
Downloaded https://repo1.maven.org/maven2/org/scalacheck/scalacheck_2.11/1.13.4/scalacheck_2.11-1.13.4.pom
Downloading https://repo1.maven.org/maven2/com/novocode/junit-interface/0.11/
Downloaded https://repo1.maven.org/maven2/org/scalatest/scalatest_2.11/3.0.0/scalatest_2.11-3.0.0.pom
Downloaded https://repo1.maven.org/maven2/org/scalacheck/scalacheck_2.11/1.13.4/scalacheck_2.11-1.13.4.pom.sha1
Downloading https://repo1.maven.org/maven2/org/scalacheck/scalacheck_2.11/1.13.4/
Downloaded https://repo1.maven.org/maven2/org/scalatest/scalatest_2.11/3.0.0/scalatest_2.11-3.0.0.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/scala-lang/scala-library/2.11.12/
Downloading https://repo1.maven.org/maven2/org/scalatest/scalatest_2.11/3.0.0/
Downloaded https://repo1.maven.org/maven2/org/mockito/mockito-all/1.9.5/
Downloaded https://repo1.maven.org/maven2/com/novocode/junit-interface/0.11/
Downloaded https://repo1.maven.org/maven2/org/scalacheck/scalacheck_2.11/1.13.4/
Downloaded https://repo1.maven.org/maven2/org/scalatest/scalatest_2.11/3.0.0/
Downloading https://repo1.maven.org/maven2/org/scala-lang/modules/scala-xml_2.11/1.0.5/scala-xml_2.11-1.0.5.pom
Downloading https://repo1.maven.org/maven2/org/scala-lang/modules/scala-xml_2.11/1.0.5/scala-xml_2.11-1.0.5.pom.sha1
Downloading https://repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.11.12/scala-reflect-2.11.12.pom
Downloading https://repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.11.12/scala-reflect-2.11.12.pom.sha1
Downloading https://repo1.maven.org/maven2/junit/junit/4.11/junit-4.11.pom
Downloading https://repo1.maven.org/maven2/junit/junit/4.11/junit-4.11.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/scala-lang/modules/scala-xml_2.11/1.0.5/scala-xml_2.11-1.0.5.pom.sha1
Downloading https://repo1.maven.org/maven2/org/scala-sbt/test-interface/1.0/test-interface-1.0.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/scala-lang/modules/scala-xml_2.11/1.0.5/scala-xml_2.11-1.0.5.pom
Downloading https://repo1.maven.org/maven2/org/scala-sbt/test-interface/1.0/test-interface-1.0.pom
Downloaded https://repo1.maven.org/maven2/org/scala-sbt/test-interface/1.0/test-interface-1.0.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/scala-sbt/test-interface/1.0/test-interface-1.0.pom
Downloaded https://repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.11.12/scala-reflect-2.11.12.pom
Downloading https://repo1.maven.org/maven2/org/scala-lang/modules/scala-xml_2.11/1.0.5/
Downloading https://repo1.maven.org/maven2/org/scala-sbt/test-interface/1.0/
Downloaded https://repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.11.12/scala-reflect-2.11.12.pom.sha1
Downloading https://repo1.maven.org/maven2/org/scala-lang/modules/scala-parser-combinators_2.11/1.0.4/scala-parser-combinators_2.11-1.0.4.pom
Downloading https://repo1.maven.org/maven2/org/scala-lang/modules/scala-parser-combinators_2.11/1.0.4/scala-parser-combinators_2.11-1.0.4.pom.sha1
Downloaded https://repo1.maven.org/maven2/junit/junit/4.11/junit-4.11.pom.sha1
Downloading https://repo1.maven.org/maven2/org/scalactic/scalactic_2.11/3.0.0/scalactic_2.11-3.0.0.pom
Downloaded https://repo1.maven.org/maven2/junit/junit/4.11/junit-4.11.pom
Downloading https://repo1.maven.org/maven2/org/scalactic/scalactic_2.11/3.0.0/scalactic_2.11-3.0.0.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/scala-lang/modules/scala-xml_2.11/1.0.5/
Downloaded https://repo1.maven.org/maven2/org/scala-sbt/test-interface/1.0/
Downloaded https://repo1.maven.org/maven2/org/scala-lang/modules/scala-parser-combinators_2.11/1.0.4/scala-parser-combinators_2.11-1.0.4.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/scalactic/scalactic_2.11/3.0.0/scalactic_2.11-3.0.0.pom
Downloading https://repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.11.12/
Downloaded https://repo1.maven.org/maven2/org/scala-lang/modules/scala-parser-combinators_2.11/1.0.4/scala-parser-combinators_2.11-1.0.4.pom
Downloading https://repo1.maven.org/maven2/junit/junit/4.11/
Downloading https://repo1.maven.org/maven2/org/scala-lang/modules/scala-parser-combinators_2.11/1.0.4/
Downloaded https://repo1.maven.org/maven2/org/scalactic/scalactic_2.11/3.0.0/scalactic_2.11-3.0.0.pom.sha1
Downloading https://repo1.maven.org/maven2/org/scalactic/scalactic_2.11/3.0.0/
Downloaded https://repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.11.12/
Downloaded https://repo1.maven.org/maven2/org/scala-lang/modules/scala-parser-combinators_2.11/1.0.4/
Downloaded https://repo1.maven.org/maven2/junit/junit/4.11/
Downloaded https://repo1.maven.org/maven2/org/scalactic/scalactic_2.11/3.0.0/
Downloading https://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.pom
Downloading https://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.pom
Downloading https://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/
Downloaded https://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/
Downloading https://repo1.maven.org/maven2/org/hamcrest/hamcrest-parent/1.3/hamcrest-parent-1.3.pom
Downloading https://repo1.maven.org/maven2/org/hamcrest/hamcrest-parent/1.3/hamcrest-parent-1.3.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/hamcrest/hamcrest-parent/1.3/hamcrest-parent-1.3.pom
Downloaded https://repo1.maven.org/maven2/org/hamcrest/hamcrest-parent/1.3/hamcrest-parent-1.3.pom.sha1
Downloading https://repo1.maven.org/maven2/org/hamcrest/hamcrest-parent/1.3/
Downloaded https://repo1.maven.org/maven2/org/hamcrest/hamcrest-parent/1.3/
Downloading https://repo1.maven.org/maven2/org/scala-lang/scala-compiler/2.11.12/scala-compiler-2.11.12.pom.sha1
Downloading https://repo1.maven.org/maven2/org/scala-lang/scala-compiler/2.11.12/scala-compiler-2.11.12.pom
Downloaded https://repo1.maven.org/maven2/org/scala-lang/scala-compiler/2.11.12/scala-compiler-2.11.12.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/scala-lang/scala-compiler/2.11.12/scala-compiler-2.11.12.pom
Downloading https://repo1.maven.org/maven2/org/scala-lang/scala-compiler/2.11.12/
Downloaded https://repo1.maven.org/maven2/org/scala-lang/scala-compiler/2.11.12/
Downloading https://repo1.maven.org/maven2/jline/jline/2.14.3/jline-2.14.3.pom
Downloading https://repo1.maven.org/maven2/jline/jline/2.14.3/jline-2.14.3.pom.sha1
Downloaded https://repo1.maven.org/maven2/jline/jline/2.14.3/jline-2.14.3.pom.sha1
Downloaded https://repo1.maven.org/maven2/jline/jline/2.14.3/jline-2.14.3.pom
Downloading https://repo1.maven.org/maven2/jline/jline/2.14.3/
Downloaded https://repo1.maven.org/maven2/jline/jline/2.14.3/
Downloading https://repo1.maven.org/maven2/org/sonatype/oss/oss-parent/9/oss-parent-9.pom
Downloading https://repo1.maven.org/maven2/org/sonatype/oss/oss-parent/9/oss-parent-9.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/sonatype/oss/oss-parent/9/oss-parent-9.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/sonatype/oss/oss-parent/9/oss-parent-9.pom
Downloading https://repo1.maven.org/maven2/org/sonatype/oss/oss-parent/9/
Downloaded https://repo1.maven.org/maven2/org/sonatype/oss/oss-parent/9/
Downloading https://repo1.maven.org/maven2/io/grpc/grpc-context/1.13.2/grpc-context-1.13.2.pom.sha1
Downloading https://repo1.maven.org/maven2/io/grpc/grpc-context/1.13.2/grpc-context-1.13.2.pom
Downloaded https://repo1.maven.org/maven2/io/grpc/grpc-context/1.13.2/grpc-context-1.13.2.pom.sha1
Downloaded https://repo1.maven.org/maven2/io/grpc/grpc-context/1.13.2/grpc-context-1.13.2.pom
Downloading https://repo1.maven.org/maven2/io/grpc/grpc-context/1.13.2/
Downloaded https://repo1.maven.org/maven2/io/grpc/grpc-context/1.13.2/
Downloading https://repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.11.12/scala-reflect-2.11.12.jar
Downloading https://repo1.maven.org/maven2/org/scala-lang/modules/scala-xml_2.11/1.0.5/scala-xml_2.11-1.0.5.jar
Downloading https://repo1.maven.org/maven2/org/scala-sbt/test-interface/1.0/test-interface-1.0.jar
Downloading https://repo1.maven.org/maven2/com/novocode/junit-interface/0.11/junit-interface-0.11.jar
Downloading https://repo1.maven.org/maven2/org/mockito/mockito-all/1.9.5/mockito-all-1.9.5.jar
Downloading https://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar
Downloaded https://repo1.maven.org/maven2/com/novocode/junit-interface/0.11/junit-interface-0.11.jar
Downloading https://repo1.maven.org/maven2/org/scala-lang/modules/scala-parser-combinators_2.11/1.0.4/scala-parser-combinators_2.11-1.0.4.jar
Downloaded https://repo1.maven.org/maven2/org/scala-sbt/test-interface/1.0/test-interface-1.0.jar
Downloading https://repo1.maven.org/maven2/org/scalactic/scalactic_2.11/3.0.0/scalactic_2.11-3.0.0.jar
Downloaded https://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar
Downloading https://repo1.maven.org/maven2/org/scalatest/scalatest_2.11/3.0.0/scalatest_2.11-3.0.0.jar
Downloaded https://repo1.maven.org/maven2/org/scala-lang/modules/scala-parser-combinators_2.11/1.0.4/scala-parser-combinators_2.11-1.0.4.jar
Downloading https://repo1.maven.org/maven2/junit/junit/4.11/junit-4.11.jar
Downloaded https://repo1.maven.org/maven2/org/scala-lang/modules/scala-xml_2.11/1.0.5/scala-xml_2.11-1.0.5.jar
Downloading https://repo1.maven.org/maven2/org/scala-lang/scala-library/2.11.12/scala-library-2.11.12.jar
Downloaded https://repo1.maven.org/maven2/org/scalactic/scalactic_2.11/3.0.0/scalactic_2.11-3.0.0.jar
Downloading https://repo1.maven.org/maven2/org/scala-lang/scala-compiler/2.11.12/scala-compiler-2.11.12.jar
Downloaded https://repo1.maven.org/maven2/junit/junit/4.11/junit-4.11.jar
Downloading https://repo1.maven.org/maven2/jline/jline/2.14.3/jline-2.14.3.jar
Downloaded https://repo1.maven.org/maven2/jline/jline/2.14.3/jline-2.14.3.jar
Downloading https://repo1.maven.org/maven2/org/scalacheck/scalacheck_2.11/1.13.4/scalacheck_2.11-1.13.4.jar
Downloaded https://repo1.maven.org/maven2/org/mockito/mockito-all/1.9.5/mockito-all-1.9.5.jar
Downloaded https://repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.11.12/scala-reflect-2.11.12.jar
Downloaded https://repo1.maven.org/maven2/org/scalacheck/scalacheck_2.11/1.13.4/scalacheck_2.11-1.13.4.jar
Downloaded https://repo1.maven.org/maven2/org/scala-lang/scala-library/2.11.12/scala-library-2.11.12.jar
Downloaded https://repo1.maven.org/maven2/org/scalatest/scalatest_2.11/3.0.0/scalatest_2.11-3.0.0.jar
Downloaded https://repo1.maven.org/maven2/org/scala-lang/scala-compiler/2.11.12/scala-compiler-2.11.12.jar
Downloading https://repo1.maven.org/maven2/io/grpc/grpc-context/1.13.2/grpc-context-1.13.2.jar
Downloaded https://repo1.maven.org/maven2/io/grpc/grpc-context/1.13.2/grpc-context-1.13.2.jar
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-scala_2.11/2.9.9/jackson-module-scala_2.11-2.9.9.pom.sha1
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-scala_2.11/2.9.9/jackson-module-scala_2.11-2.9.9.pom
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-scala_2.11/2.9.9/jackson-module-scala_2.11-2.9.9.pom.sha1
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.9.9/jackson-core-2.9.9.pom
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.9.9/jackson-databind-2.9.9.pom.sha1
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.9.9/jackson-core-2.9.9.pom.sha1
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.9.9/jackson-databind-2.9.9.pom
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-scala_2.11/2.9.9/jackson-module-scala_2.11-2.9.9.pom
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.9.9/jackson-databind-2.9.9.pom
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.9.9/jackson-core-2.9.9.pom
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.9.9/jackson-databind-2.9.9.pom.sha1
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-scala_2.11/2.9.9/
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.9.9/
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.9.9/jackson-core-2.9.9.pom.sha1
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.9.9/
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-scala_2.11/2.9.9/
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.9.9/
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.9.9/
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/jackson-base/2.9.9/jackson-base-2.9.9.pom
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/jackson-base/2.9.9/jackson-base-2.9.9.pom.sha1
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/jackson-base/2.9.9/jackson-base-2.9.9.pom.sha1
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/jackson-base/2.9.9/jackson-base-2.9.9.pom
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/jackson-base/2.9.9/
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/jackson-base/2.9.9/
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/jackson-bom/2.9.9/jackson-bom-2.9.9.pom
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/jackson-bom/2.9.9/jackson-bom-2.9.9.pom.sha1
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/jackson-bom/2.9.9/jackson-bom-2.9.9.pom
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/jackson-bom/2.9.9/jackson-bom-2.9.9.pom.sha1
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/jackson-bom/2.9.9/
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/jackson-bom/2.9.9/
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/jackson-parent/2.9.1.2/jackson-parent-2.9.1.2.pom
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/jackson-parent/2.9.1.2/jackson-parent-2.9.1.2.pom.sha1
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/jackson-parent/2.9.1.2/jackson-parent-2.9.1.2.pom.sha1
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/jackson-parent/2.9.1.2/jackson-parent-2.9.1.2.pom
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/jackson-parent/2.9.1.2/
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/jackson-parent/2.9.1.2/
Downloading https://repo1.maven.org/maven2/com/fasterxml/oss-parent/34/oss-parent-34.pom
Downloading https://repo1.maven.org/maven2/com/fasterxml/oss-parent/34/oss-parent-34.pom.sha1
Downloaded https://repo1.maven.org/maven2/com/fasterxml/oss-parent/34/oss-parent-34.pom.sha1
Downloaded https://repo1.maven.org/maven2/com/fasterxml/oss-parent/34/oss-parent-34.pom
Downloading https://repo1.maven.org/maven2/com/fasterxml/oss-parent/34/
Downloaded https://repo1.maven.org/maven2/com/fasterxml/oss-parent/34/
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-paranamer/2.9.9/jackson-module-paranamer-2.9.9.pom
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-paranamer/2.9.9/jackson-module-paranamer-2.9.9.pom.sha1
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-paranamer/2.9.9/jackson-module-paranamer-2.9.9.pom.sha1
Downloading https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/2.0.1/jsr305-2.0.1.pom
Downloading https://repo1.maven.org/maven2/com/github/ben-manes/caffeine/caffeine/2.3.4/caffeine-2.3.4.pom
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-paranamer/2.9.9/jackson-module-paranamer-2.9.9.pom
Downloading https://repo1.maven.org/maven2/com/github/ben-manes/caffeine/caffeine/2.3.4/caffeine-2.3.4.pom.sha1
Downloading https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/2.0.1/jsr305-2.0.1.pom.sha1
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.9.9/jackson-annotations-2.9.9.pom
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.9.9/jackson-annotations-2.9.9.pom.sha1
Downloaded https://repo1.maven.org/maven2/com/github/ben-manes/caffeine/caffeine/2.3.4/caffeine-2.3.4.pom.sha1
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-paranamer/2.9.9/
Downloaded https://repo1.maven.org/maven2/com/github/ben-manes/caffeine/caffeine/2.3.4/caffeine-2.3.4.pom
Downloaded https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/2.0.1/jsr305-2.0.1.pom
Downloaded https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/2.0.1/jsr305-2.0.1.pom.sha1
Downloading https://repo1.maven.org/maven2/com/github/ben-manes/caffeine/caffeine/2.3.4/
Downloading https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/2.0.1/
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.9.9/jackson-annotations-2.9.9.pom
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-paranamer/2.9.9/
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.9.9/jackson-annotations-2.9.9.pom.sha1
Downloaded https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/2.0.1/
Downloaded https://repo1.maven.org/maven2/com/github/ben-manes/caffeine/caffeine/2.3.4/
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.9.9/
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.9.9/
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-modules-base/2.9.9/jackson-modules-base-2.9.9.pom
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-modules-base/2.9.9/jackson-modules-base-2.9.9.pom.sha1
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-modules-base/2.9.9/jackson-modules-base-2.9.9.pom
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-modules-base/2.9.9/jackson-modules-base-2.9.9.pom.sha1
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-modules-base/2.9.9/
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-modules-base/2.9.9/
Downloading https://repo1.maven.org/maven2/com/thoughtworks/paranamer/paranamer/2.8/paranamer-2.8.pom
Downloading https://repo1.maven.org/maven2/com/thoughtworks/paranamer/paranamer/2.8/paranamer-2.8.pom.sha1
Downloaded https://repo1.maven.org/maven2/com/thoughtworks/paranamer/paranamer/2.8/paranamer-2.8.pom.sha1
Downloaded https://repo1.maven.org/maven2/com/thoughtworks/paranamer/paranamer/2.8/paranamer-2.8.pom
Downloading https://repo1.maven.org/maven2/com/thoughtworks/paranamer/paranamer/2.8/
Downloaded https://repo1.maven.org/maven2/com/thoughtworks/paranamer/paranamer/2.8/
Downloading https://repo1.maven.org/maven2/com/thoughtworks/paranamer/paranamer-parent/2.8/paranamer-parent-2.8.pom
Downloading https://repo1.maven.org/maven2/com/thoughtworks/paranamer/paranamer-parent/2.8/paranamer-parent-2.8.pom.sha1
Downloaded https://repo1.maven.org/maven2/com/thoughtworks/paranamer/paranamer-parent/2.8/paranamer-parent-2.8.pom.sha1
Downloaded https://repo1.maven.org/maven2/com/thoughtworks/paranamer/paranamer-parent/2.8/paranamer-parent-2.8.pom
Downloading https://repo1.maven.org/maven2/com/thoughtworks/paranamer/paranamer-parent/2.8/
Downloaded https://repo1.maven.org/maven2/com/thoughtworks/paranamer/paranamer-parent/2.8/
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-scala_2.11/2.9.9/jackson-module-scala_2.11-2.9.9.jar
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.9.9/jackson-core-2.9.9.jar
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.9.9/jackson-annotations-2.9.9.jar
Downloading https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/2.0.1/jsr305-2.0.1.jar
Downloading https://repo1.maven.org/maven2/com/github/ben-manes/caffeine/caffeine/2.3.4/caffeine-2.3.4.jar
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.9.9/jackson-databind-2.9.9.jar
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.9.9/jackson-annotations-2.9.9.jar
Downloading https://repo1.maven.org/maven2/com/thoughtworks/paranamer/paranamer/2.8/paranamer-2.8.jar
Downloaded https://repo1.maven.org/maven2/com/thoughtworks/paranamer/paranamer/2.8/paranamer-2.8.jar
Downloading https://repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-paranamer/2.9.9/jackson-module-paranamer-2.9.9.jar
Downloaded https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/2.0.1/jsr305-2.0.1.jar
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-scala_2.11/2.9.9/jackson-module-scala_2.11-2.9.9.jar
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.9.9/jackson-core-2.9.9.jar
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-paranamer/2.9.9/jackson-module-paranamer-2.9.9.jar
Downloaded https://repo1.maven.org/maven2/com/github/ben-manes/caffeine/caffeine/2.3.4/caffeine-2.3.4.jar
Downloaded https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.9.9/jackson-databind-2.9.9.jar
Downloading https://repo1.maven.org/maven2/org/hdrhistogram/HdrHistogram/2.1.11/HdrHistogram-2.1.11.pom.sha1
Downloading https://repo1.maven.org/maven2/org/hdrhistogram/HdrHistogram/2.1.11/HdrHistogram-2.1.11.pom
Downloaded https://repo1.maven.org/maven2/org/hdrhistogram/HdrHistogram/2.1.11/HdrHistogram-2.1.11.pom.sha1
Downloading https://repo1.maven.org/maven2/io/netty/netty-transport/4.1.35.Final/netty-transport-4.1.35.Final.pom.sha1
Downloading https://repo1.maven.org/maven2/io/netty/netty-handler-proxy/4.1.35.Final/netty-handler-proxy-4.1.35.Final.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty-transport/4.1.35.Final/netty-transport-4.1.35.Final.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty-handler-proxy/4.1.35.Final/netty-handler-proxy-4.1.35.Final.pom.sha1
Downloading https://repo1.maven.org/maven2/io/netty/netty-handler/4.1.35.Final/netty-handler-4.1.35.Final.pom
Downloaded https://repo1.maven.org/maven2/io/netty/netty-transport/4.1.35.Final/netty-transport-4.1.35.Final.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty-handler/4.1.35.Final/netty-handler-4.1.35.Final.pom.sha1
Downloaded https://repo1.maven.org/maven2/io/netty/netty-handler-proxy/4.1.35.Final/netty-handler-proxy-4.1.35.Final.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/hdrhistogram/HdrHistogram/2.1.11/HdrHistogram-2.1.11.pom
Downloaded https://repo1.maven.org/maven2/io/netty/netty-handler-proxy/4.1.35.Final/netty-handler-proxy-4.1.35.Final.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty-transport-native-epoll/4.1.35.Final/netty-transport-native-epoll-4.1.35.Final.pom
Downloaded https://repo1.maven.org/maven2/io/netty/netty-transport/4.1.35.Final/netty-transport-4.1.35.Final.pom.sha1
Downloading https://repo1.maven.org/maven2/io/netty/netty-transport-native-epoll/4.1.35.Final/netty-transport-native-epoll-4.1.35.Final.pom.sha1
Downloading https://repo1.maven.org/maven2/io/netty/netty-transport-native-unix-common/4.1.35.Final/netty-transport-native-unix-common-4.1.35.Final.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty-transport-native-unix-common/4.1.35.Final/netty-transport-native-unix-common-4.1.35.Final.pom.sha1
Downloaded https://repo1.maven.org/maven2/io/netty/netty-transport-native-epoll/4.1.35.Final/netty-transport-native-epoll-4.1.35.Final.pom.sha1
Downloading https://repo1.maven.org/maven2/org/hdrhistogram/HdrHistogram/2.1.11/
Downloaded https://repo1.maven.org/maven2/io/netty/netty-handler/4.1.35.Final/netty-handler-4.1.35.Final.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty-transport/4.1.35.Final/
Downloaded https://repo1.maven.org/maven2/io/netty/netty-transport-native-unix-common/4.1.35.Final/netty-transport-native-unix-common-4.1.35.Final.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty-handler-proxy/4.1.35.Final/
Downloaded https://repo1.maven.org/maven2/io/netty/netty-transport-native-unix-common/4.1.35.Final/netty-transport-native-unix-common-4.1.35.Final.pom.sha1
Downloading https://repo1.maven.org/maven2/io/netty/netty-transport-native-unix-common/4.1.35.Final/
Downloaded https://repo1.maven.org/maven2/io/netty/netty-handler/4.1.35.Final/netty-handler-4.1.35.Final.pom.sha1
Downloading https://repo1.maven.org/maven2/io/netty/netty-handler/4.1.35.Final/
Downloaded https://repo1.maven.org/maven2/io/netty/netty-transport-native-epoll/4.1.35.Final/netty-transport-native-epoll-4.1.35.Final.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty-transport-native-epoll/4.1.35.Final/
Downloaded https://repo1.maven.org/maven2/io/netty/netty-transport-native-epoll/4.1.35.Final/
Downloaded https://repo1.maven.org/maven2/io/netty/netty-transport-native-unix-common/4.1.35.Final/
Downloaded https://repo1.maven.org/maven2/io/netty/netty-transport/4.1.35.Final/
Downloaded https://repo1.maven.org/maven2/org/hdrhistogram/HdrHistogram/2.1.11/
Downloaded https://repo1.maven.org/maven2/io/netty/netty-handler/4.1.35.Final/
Downloaded https://repo1.maven.org/maven2/io/netty/netty-handler-proxy/4.1.35.Final/
Downloading https://repo1.maven.org/maven2/io/netty/netty-parent/4.1.35.Final/netty-parent-4.1.35.Final.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty-parent/4.1.35.Final/netty-parent-4.1.35.Final.pom.sha1
Downloaded https://repo1.maven.org/maven2/io/netty/netty-parent/4.1.35.Final/netty-parent-4.1.35.Final.pom.sha1
Downloaded https://repo1.maven.org/maven2/io/netty/netty-parent/4.1.35.Final/netty-parent-4.1.35.Final.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty-parent/4.1.35.Final/
Downloaded https://repo1.maven.org/maven2/io/netty/netty-parent/4.1.35.Final/
Downloading https://repo1.maven.org/maven2/io/netty/netty-buffer/4.1.35.Final/netty-buffer-4.1.35.Final.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty-buffer/4.1.35.Final/netty-buffer-4.1.35.Final.pom.sha1
Downloading https://repo1.maven.org/maven2/io/netty/netty-common/4.1.35.Final/netty-common-4.1.35.Final.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty-common/4.1.35.Final/netty-common-4.1.35.Final.pom.sha1
Downloading https://repo1.maven.org/maven2/io/netty/netty-codec/4.1.35.Final/netty-codec-4.1.35.Final.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty-codec/4.1.35.Final/netty-codec-4.1.35.Final.pom.sha1
Downloaded https://repo1.maven.org/maven2/io/netty/netty-buffer/4.1.35.Final/netty-buffer-4.1.35.Final.pom
Downloaded https://repo1.maven.org/maven2/io/netty/netty-buffer/4.1.35.Final/netty-buffer-4.1.35.Final.pom.sha1
Downloading https://repo1.maven.org/maven2/io/netty/netty-buffer/4.1.35.Final/
Downloaded https://repo1.maven.org/maven2/io/netty/netty-common/4.1.35.Final/netty-common-4.1.35.Final.pom.sha1
Downloading https://repo1.maven.org/maven2/io/netty/netty-resolver/4.1.35.Final/netty-resolver-4.1.35.Final.pom
Downloaded https://repo1.maven.org/maven2/io/netty/netty-common/4.1.35.Final/netty-common-4.1.35.Final.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty-resolver/4.1.35.Final/netty-resolver-4.1.35.Final.pom.sha1
Downloading https://repo1.maven.org/maven2/io/netty/netty-codec-socks/4.1.35.Final/netty-codec-socks-4.1.35.Final.pom
Downloaded https://repo1.maven.org/maven2/io/netty/netty-codec/4.1.35.Final/netty-codec-4.1.35.Final.pom.sha1
Downloading https://repo1.maven.org/maven2/io/netty/netty-codec-socks/4.1.35.Final/netty-codec-socks-4.1.35.Final.pom.sha1
Downloaded https://repo1.maven.org/maven2/io/netty/netty-codec/4.1.35.Final/netty-codec-4.1.35.Final.pom
Downloaded https://repo1.maven.org/maven2/io/netty/netty-resolver/4.1.35.Final/netty-resolver-4.1.35.Final.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty-codec/4.1.35.Final/
Downloading https://repo1.maven.org/maven2/io/netty/netty-common/4.1.35.Final/
Downloaded https://repo1.maven.org/maven2/io/netty/netty-buffer/4.1.35.Final/
Downloaded https://repo1.maven.org/maven2/io/netty/netty-resolver/4.1.35.Final/netty-resolver-4.1.35.Final.pom.sha1
Downloading https://repo1.maven.org/maven2/io/netty/netty-codec-http/4.1.35.Final/netty-codec-http-4.1.35.Final.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty-codec-http/4.1.35.Final/netty-codec-http-4.1.35.Final.pom.sha1
Downloaded https://repo1.maven.org/maven2/io/netty/netty-codec-socks/4.1.35.Final/netty-codec-socks-4.1.35.Final.pom.sha1
Downloading https://repo1.maven.org/maven2/io/netty/netty-resolver/4.1.35.Final/
Downloaded https://repo1.maven.org/maven2/io/netty/netty-codec-socks/4.1.35.Final/netty-codec-socks-4.1.35.Final.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty-codec-socks/4.1.35.Final/
Downloaded https://repo1.maven.org/maven2/io/netty/netty-common/4.1.35.Final/
Downloaded https://repo1.maven.org/maven2/io/netty/netty-codec-http/4.1.35.Final/netty-codec-http-4.1.35.Final.pom.sha1
Downloaded https://repo1.maven.org/maven2/io/netty/netty-resolver/4.1.35.Final/
Downloaded https://repo1.maven.org/maven2/io/netty/netty-codec-socks/4.1.35.Final/
Downloaded https://repo1.maven.org/maven2/io/netty/netty-codec-http/4.1.35.Final/netty-codec-http-4.1.35.Final.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty-codec-http/4.1.35.Final/
Downloaded https://repo1.maven.org/maven2/io/netty/netty-codec/4.1.35.Final/
Downloaded https://repo1.maven.org/maven2/io/netty/netty-codec-http/4.1.35.Final/
Downloading https://repo1.maven.org/maven2/io/netty/netty-codec-socks/4.1.35.Final/netty-codec-socks-4.1.35.Final.jar
Downloading https://repo1.maven.org/maven2/io/netty/netty-transport-native-unix-common/4.1.35.Final/netty-transport-native-unix-common-4.1.35.Final.jar
Downloading https://repo1.maven.org/maven2/io/netty/netty-transport/4.1.35.Final/netty-transport-4.1.35.Final.jar
Downloading https://repo1.maven.org/maven2/io/netty/netty-resolver/4.1.35.Final/netty-resolver-4.1.35.Final.jar
Downloading https://repo1.maven.org/maven2/io/netty/netty-buffer/4.1.35.Final/netty-buffer-4.1.35.Final.jar
Downloading https://repo1.maven.org/maven2/io/netty/netty-codec/4.1.35.Final/netty-codec-4.1.35.Final.jar
Downloaded https://repo1.maven.org/maven2/io/netty/netty-resolver/4.1.35.Final/netty-resolver-4.1.35.Final.jar
Downloaded https://repo1.maven.org/maven2/io/netty/netty-transport-native-unix-common/4.1.35.Final/netty-transport-native-unix-common-4.1.35.Final.jar
Downloading https://repo1.maven.org/maven2/org/hdrhistogram/HdrHistogram/2.1.11/HdrHistogram-2.1.11.jar
Downloading https://repo1.maven.org/maven2/io/netty/netty-common/4.1.35.Final/netty-common-4.1.35.Final.jar
Downloaded https://repo1.maven.org/maven2/io/netty/netty-codec/4.1.35.Final/netty-codec-4.1.35.Final.jar
Downloading https://repo1.maven.org/maven2/io/netty/netty-codec-http/4.1.35.Final/netty-codec-http-4.1.35.Final.jar
Downloaded https://repo1.maven.org/maven2/io/netty/netty-buffer/4.1.35.Final/netty-buffer-4.1.35.Final.jar
Downloading https://repo1.maven.org/maven2/io/netty/netty-handler-proxy/4.1.35.Final/netty-handler-proxy-4.1.35.Final.jar
Downloaded https://repo1.maven.org/maven2/io/netty/netty-transport/4.1.35.Final/netty-transport-4.1.35.Final.jar
Downloading https://repo1.maven.org/maven2/io/netty/netty-transport-native-epoll/4.1.35.Final/netty-transport-native-epoll-4.1.35.Final-linux-x86_64.jar
Downloaded https://repo1.maven.org/maven2/io/netty/netty-codec-socks/4.1.35.Final/netty-codec-socks-4.1.35.Final.jar
Downloading https://repo1.maven.org/maven2/io/netty/netty-handler/4.1.35.Final/netty-handler-4.1.35.Final.jar
Downloaded https://repo1.maven.org/maven2/org/hdrhistogram/HdrHistogram/2.1.11/HdrHistogram-2.1.11.jar
Downloaded https://repo1.maven.org/maven2/io/netty/netty-handler-proxy/4.1.35.Final/netty-handler-proxy-4.1.35.Final.jar
Downloaded https://repo1.maven.org/maven2/io/netty/netty-transport-native-epoll/4.1.35.Final/netty-transport-native-epoll-4.1.35.Final-linux-x86_64.jar
Downloaded https://repo1.maven.org/maven2/io/netty/netty-common/4.1.35.Final/netty-common-4.1.35.Final.jar
Downloaded https://repo1.maven.org/maven2/io/netty/netty-handler/4.1.35.Final/netty-handler-4.1.35.Final.jar
Downloaded https://repo1.maven.org/maven2/io/netty/netty-codec-http/4.1.35.Final/netty-codec-http-4.1.35.Final.jar
Downloading https://repo1.maven.org/maven2/org/apache/zookeeper/zookeeper/3.5.0-alpha/zookeeper-3.5.0-alpha.pom
Downloading https://repo1.maven.org/maven2/com/google/code/gson/gson/2.3.1/gson-2.3.1.pom
Downloading https://repo1.maven.org/maven2/commons-lang/commons-lang/2.6/commons-lang-2.6.pom.sha1
Downloading https://repo1.maven.org/maven2/org/apache/zookeeper/zookeeper/3.5.0-alpha/zookeeper-3.5.0-alpha.pom.sha1
Downloading https://repo1.maven.org/maven2/commons-lang/commons-lang/2.6/commons-lang-2.6.pom
Downloading https://repo1.maven.org/maven2/com/google/code/gson/gson/2.3.1/gson-2.3.1.pom.sha1
Downloaded https://repo1.maven.org/maven2/com/google/code/gson/gson/2.3.1/gson-2.3.1.pom.sha1
Downloading https://repo1.maven.org/maven2/org/apache/thrift/libthrift/0.10.0/libthrift-0.10.0.pom
Downloaded https://repo1.maven.org/maven2/org/apache/zookeeper/zookeeper/3.5.0-alpha/zookeeper-3.5.0-alpha.pom.sha1
Downloading https://repo1.maven.org/maven2/org/apache/thrift/libthrift/0.10.0/libthrift-0.10.0.pom.sha1
Downloaded https://repo1.maven.org/maven2/com/google/code/gson/gson/2.3.1/gson-2.3.1.pom
Downloading https://repo1.maven.org/maven2/com/google/code/gson/gson/2.3.1/
Downloaded https://repo1.maven.org/maven2/commons-lang/commons-lang/2.6/commons-lang-2.6.pom.sha1
Downloaded https://repo1.maven.org/maven2/commons-lang/commons-lang/2.6/commons-lang-2.6.pom
Downloading https://repo1.maven.org/maven2/commons-lang/commons-lang/2.6/
Downloaded https://repo1.maven.org/maven2/org/apache/thrift/libthrift/0.10.0/libthrift-0.10.0.pom.sha1
Downloaded https://repo1.maven.org/maven2/com/google/code/gson/gson/2.3.1/
Downloaded https://repo1.maven.org/maven2/org/apache/zookeeper/zookeeper/3.5.0-alpha/zookeeper-3.5.0-alpha.pom
Downloading https://repo1.maven.org/maven2/org/apache/zookeeper/zookeeper/3.5.0-alpha/
Downloaded https://repo1.maven.org/maven2/org/apache/thrift/libthrift/0.10.0/libthrift-0.10.0.pom
Downloading https://repo1.maven.org/maven2/org/apache/thrift/libthrift/0.10.0/
Downloaded https://repo1.maven.org/maven2/commons-lang/commons-lang/2.6/
Downloaded https://repo1.maven.org/maven2/org/apache/thrift/libthrift/0.10.0/
Downloaded https://repo1.maven.org/maven2/org/apache/zookeeper/zookeeper/3.5.0-alpha/
Downloading https://repo1.maven.org/maven2/org/apache/commons/commons-parent/17/commons-parent-17.pom
Downloading https://repo1.maven.org/maven2/org/apache/commons/commons-parent/17/commons-parent-17.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/apache/commons/commons-parent/17/commons-parent-17.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/apache/commons/commons-parent/17/commons-parent-17.pom
Downloading https://repo1.maven.org/maven2/org/apache/commons/commons-parent/17/
Downloaded https://repo1.maven.org/maven2/org/apache/commons/commons-parent/17/
Downloading https://repo1.maven.org/maven2/org/apache/apache/7/apache-7.pom
Downloading https://repo1.maven.org/maven2/org/apache/apache/7/apache-7.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/apache/apache/7/apache-7.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/apache/apache/7/apache-7.pom
Downloading https://repo1.maven.org/maven2/org/apache/apache/7/
Downloaded https://repo1.maven.org/maven2/org/apache/apache/7/
Downloading https://repo1.maven.org/maven2/net/java/dev/javacc/javacc/5.0/javacc-5.0.pom
Downloading https://repo1.maven.org/maven2/net/java/dev/javacc/javacc/5.0/javacc-5.0.pom.sha1
Downloaded https://repo1.maven.org/maven2/net/java/dev/javacc/javacc/5.0/javacc-5.0.pom
Downloaded https://repo1.maven.org/maven2/net/java/dev/javacc/javacc/5.0/javacc-5.0.pom.sha1
Downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.pom.sha1
Downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.pom
Downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-log4j12/1.7.5/slf4j-log4j12-1.7.5.pom.sha1
Downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-log4j12/1.7.5/slf4j-log4j12-1.7.5.pom
Downloading https://repo1.maven.org/maven2/log4j/log4j/1.2.16/log4j-1.2.16.pom.sha1
Downloading https://repo1.maven.org/maven2/log4j/log4j/1.2.16/log4j-1.2.16.pom
Downloaded https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.pom.sha1
Downloading https://repo1.maven.org/maven2/commons-cli/commons-cli/1.2/commons-cli-1.2.pom
Downloaded https://repo1.maven.org/maven2/org/slf4j/slf4j-log4j12/1.7.5/slf4j-log4j12-1.7.5.pom.sha1
Downloading https://repo1.maven.org/maven2/commons-cli/commons-cli/1.2/commons-cli-1.2.pom.sha1
Downloaded https://repo1.maven.org/maven2/log4j/log4j/1.2.16/log4j-1.2.16.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.pom
Downloaded https://repo1.maven.org/maven2/org/slf4j/slf4j-log4j12/1.7.5/slf4j-log4j12-1.7.5.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty/3.7.0.Final/netty-3.7.0.Final.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty/3.7.0.Final/netty-3.7.0.Final.pom.sha1
Downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.5/
Downloaded https://repo1.maven.org/maven2/log4j/log4j/1.2.16/log4j-1.2.16.pom
Downloading https://repo1.maven.org/maven2/net/java/dev/javacc/javacc/5.0/
Downloaded https://repo1.maven.org/maven2/commons-cli/commons-cli/1.2/commons-cli-1.2.pom.sha1
Downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-log4j12/1.7.5/
Downloaded https://repo1.maven.org/maven2/commons-cli/commons-cli/1.2/commons-cli-1.2.pom
Downloaded https://repo1.maven.org/maven2/io/netty/netty/3.7.0.Final/netty-3.7.0.Final.pom.sha1
Downloading https://repo1.maven.org/maven2/log4j/log4j/1.2.16/
Downloaded https://repo1.maven.org/maven2/io/netty/netty/3.7.0.Final/netty-3.7.0.Final.pom
Downloading https://repo1.maven.org/maven2/commons-cli/commons-cli/1.2/
Downloading https://repo1.maven.org/maven2/io/netty/netty/3.7.0.Final/
Downloaded https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.5/
Downloaded https://repo1.maven.org/maven2/org/slf4j/slf4j-log4j12/1.7.5/
Downloaded https://repo1.maven.org/maven2/commons-cli/commons-cli/1.2/
Downloaded https://repo1.maven.org/maven2/log4j/log4j/1.2.16/
Downloaded https://repo1.maven.org/maven2/io/netty/netty/3.7.0.Final/
Downloaded https://repo1.maven.org/maven2/net/java/dev/javacc/javacc/5.0/
Downloading https://repo1.maven.org/maven2/org/sonatype/oss/oss-parent/7/oss-parent-7.pom
Downloading https://repo1.maven.org/maven2/org/sonatype/oss/oss-parent/7/oss-parent-7.pom.sha1
Downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-parent/1.7.5/slf4j-parent-1.7.5.pom
Downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-parent/1.7.5/slf4j-parent-1.7.5.pom.sha1
Downloading https://repo1.maven.org/maven2/org/apache/commons/commons-parent/11/commons-parent-11.pom
Downloading https://repo1.maven.org/maven2/org/apache/commons/commons-parent/11/commons-parent-11.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/sonatype/oss/oss-parent/7/oss-parent-7.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/slf4j/slf4j-parent/1.7.5/slf4j-parent-1.7.5.pom
Downloaded https://repo1.maven.org/maven2/org/slf4j/slf4j-parent/1.7.5/slf4j-parent-1.7.5.pom.sha1
Downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-parent/1.7.5/
Downloaded https://repo1.maven.org/maven2/org/apache/commons/commons-parent/11/commons-parent-11.pom
Downloaded https://repo1.maven.org/maven2/org/sonatype/oss/oss-parent/7/oss-parent-7.pom
Downloading https://repo1.maven.org/maven2/org/sonatype/oss/oss-parent/7/
Downloaded https://repo1.maven.org/maven2/org/slf4j/slf4j-parent/1.7.5/
Downloaded https://repo1.maven.org/maven2/org/sonatype/oss/oss-parent/7/
Downloaded https://repo1.maven.org/maven2/org/apache/commons/commons-parent/11/commons-parent-11.pom.sha1
Downloading https://repo1.maven.org/maven2/org/apache/commons/commons-parent/11/
Downloaded https://repo1.maven.org/maven2/org/apache/commons/commons-parent/11/
Downloading https://repo1.maven.org/maven2/org/apache/apache/4/apache-4.pom
Downloading https://repo1.maven.org/maven2/org/apache/apache/4/apache-4.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/apache/apache/4/apache-4.pom
Downloaded https://repo1.maven.org/maven2/org/apache/apache/4/apache-4.pom.sha1
Downloading https://repo1.maven.org/maven2/org/apache/apache/4/
Downloaded https://repo1.maven.org/maven2/org/apache/apache/4/
Downloading https://repo1.maven.org/maven2/log4j/log4j/1.2.17/log4j-1.2.17.pom
Downloading https://repo1.maven.org/maven2/log4j/log4j/1.2.17/log4j-1.2.17.pom.sha1
Downloaded https://repo1.maven.org/maven2/log4j/log4j/1.2.17/log4j-1.2.17.pom
Downloaded https://repo1.maven.org/maven2/log4j/log4j/1.2.17/log4j-1.2.17.pom.sha1
Downloading https://repo1.maven.org/maven2/log4j/log4j/1.2.17/
Downloaded https://repo1.maven.org/maven2/log4j/log4j/1.2.17/
Downloading https://repo1.maven.org/maven2/commons-lang/commons-lang/2.6/commons-lang-2.6.jar
Downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.jar
Downloading https://repo1.maven.org/maven2/net/java/dev/javacc/javacc/5.0/javacc-5.0.jar
Downloading https://repo1.maven.org/maven2/log4j/log4j/1.2.17/log4j-1.2.17.zip
Downloading https://repo1.maven.org/maven2/log4j/log4j/1.2.17/log4j-1.2.17.jar
Downloading https://repo1.maven.org/maven2/log4j/log4j/1.2.17/log4j-1.2.17.tar.gz
Downloaded https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.jar
Downloading https://repo1.maven.org/maven2/org/apache/thrift/libthrift/0.10.0/libthrift-0.10.0.jar
Downloaded https://repo1.maven.org/maven2/commons-lang/commons-lang/2.6/commons-lang-2.6.jar
Downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-log4j12/1.7.5/slf4j-log4j12-1.7.5.jar
Downloaded https://repo1.maven.org/maven2/net/java/dev/javacc/javacc/5.0/javacc-5.0.jar
Downloading https://repo1.maven.org/maven2/commons-cli/commons-cli/1.2/commons-cli-1.2.jar
Downloaded https://repo1.maven.org/maven2/org/slf4j/slf4j-log4j12/1.7.5/slf4j-log4j12-1.7.5.jar
Downloading https://repo1.maven.org/maven2/org/apache/zookeeper/zookeeper/3.5.0-alpha/zookeeper-3.5.0-alpha.jar
Downloaded https://repo1.maven.org/maven2/commons-cli/commons-cli/1.2/commons-cli-1.2.jar
Downloading https://repo1.maven.org/maven2/com/google/code/gson/gson/2.3.1/gson-2.3.1.jar
Downloaded https://repo1.maven.org/maven2/log4j/log4j/1.2.17/log4j-1.2.17.jar
Downloading https://repo1.maven.org/maven2/io/netty/netty/3.7.0.Final/netty-3.7.0.Final.jar
Downloaded https://repo1.maven.org/maven2/org/apache/thrift/libthrift/0.10.0/libthrift-0.10.0.jar
Downloaded https://repo1.maven.org/maven2/com/google/code/gson/gson/2.3.1/gson-2.3.1.jar
Downloaded https://repo1.maven.org/maven2/org/apache/zookeeper/zookeeper/3.5.0-alpha/zookeeper-3.5.0-alpha.jar
Downloaded https://repo1.maven.org/maven2/io/netty/netty/3.7.0.Final/netty-3.7.0.Final.jar
Downloaded https://repo1.maven.org/maven2/log4j/log4j/1.2.17/log4j-1.2.17.tar.gz
Downloaded https://repo1.maven.org/maven2/log4j/log4j/1.2.17/log4j-1.2.17.zip
Downloading https://repo1.maven.org/maven2/com/netflix/concurrency-limits/concurrency-limits-core/0.3.0/concurrency-limits-core-0.3.0.pom
Downloading https://repo1.maven.org/maven2/com/netflix/concurrency-limits/concurrency-limits-core/0.3.0/concurrency-limits-core-0.3.0.pom.sha1
Downloaded https://repo1.maven.org/maven2/com/netflix/concurrency-limits/concurrency-limits-core/0.3.0/concurrency-limits-core-0.3.0.pom.sha1
Downloaded https://repo1.maven.org/maven2/com/netflix/concurrency-limits/concurrency-limits-core/0.3.0/concurrency-limits-core-0.3.0.pom
Downloading https://repo1.maven.org/maven2/com/netflix/concurrency-limits/concurrency-limits-core/0.3.0/
Downloaded https://repo1.maven.org/maven2/com/netflix/concurrency-limits/concurrency-limits-core/0.3.0/
Downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.26/slf4j-api-1.7.26.pom
Downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.26/slf4j-api-1.7.26.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.26/slf4j-api-1.7.26.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.26/slf4j-api-1.7.26.pom
Downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.26/
Downloaded https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.26/
Downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-parent/1.7.26/slf4j-parent-1.7.26.pom
Downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-parent/1.7.26/slf4j-parent-1.7.26.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/slf4j/slf4j-parent/1.7.26/slf4j-parent-1.7.26.pom
Downloaded https://repo1.maven.org/maven2/org/slf4j/slf4j-parent/1.7.26/slf4j-parent-1.7.26.pom.sha1
Downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-parent/1.7.26/
Downloaded https://repo1.maven.org/maven2/org/slf4j/slf4j-parent/1.7.26/
Downloading https://repo1.maven.org/maven2/io/netty/netty-codec-http2/4.1.35.Final/netty-codec-http2-4.1.35.Final.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty-tcnative-boringssl-static/2.0.25.Final/netty-tcnative-boringssl-static-2.0.25.Final.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty-codec-http2/4.1.35.Final/netty-codec-http2-4.1.35.Final.pom.sha1
Downloading https://repo1.maven.org/maven2/io/netty/netty-tcnative-boringssl-static/2.0.25.Final/netty-tcnative-boringssl-static-2.0.25.Final.pom.sha1
Downloaded https://repo1.maven.org/maven2/io/netty/netty-codec-http2/4.1.35.Final/netty-codec-http2-4.1.35.Final.pom.sha1
Downloaded https://repo1.maven.org/maven2/io/netty/netty-tcnative-boringssl-static/2.0.25.Final/netty-tcnative-boringssl-static-2.0.25.Final.pom.sha1
Downloaded https://repo1.maven.org/maven2/io/netty/netty-codec-http2/4.1.35.Final/netty-codec-http2-4.1.35.Final.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty-codec-http2/4.1.35.Final/
Downloaded https://repo1.maven.org/maven2/io/netty/netty-tcnative-boringssl-static/2.0.25.Final/netty-tcnative-boringssl-static-2.0.25.Final.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty-tcnative-boringssl-static/2.0.25.Final/
Downloaded https://repo1.maven.org/maven2/io/netty/netty-codec-http2/4.1.35.Final/
Downloaded https://repo1.maven.org/maven2/io/netty/netty-tcnative-boringssl-static/2.0.25.Final/
Downloading https://repo1.maven.org/maven2/io/netty/netty-tcnative-parent/2.0.25.Final/netty-tcnative-parent-2.0.25.Final.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty-tcnative-parent/2.0.25.Final/netty-tcnative-parent-2.0.25.Final.pom.sha1
Downloaded https://repo1.maven.org/maven2/io/netty/netty-tcnative-parent/2.0.25.Final/netty-tcnative-parent-2.0.25.Final.pom.sha1
Downloaded https://repo1.maven.org/maven2/io/netty/netty-tcnative-parent/2.0.25.Final/netty-tcnative-parent-2.0.25.Final.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty-tcnative-parent/2.0.25.Final/
Downloaded https://repo1.maven.org/maven2/io/netty/netty-tcnative-parent/2.0.25.Final/
Downloading https://repo1.maven.org/maven2/io/netty/netty-parent/4.0.29.Final/netty-parent-4.0.29.Final.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty-parent/4.0.29.Final/netty-parent-4.0.29.Final.pom.sha1
Downloaded https://repo1.maven.org/maven2/io/netty/netty-parent/4.0.29.Final/netty-parent-4.0.29.Final.pom.sha1
Downloaded https://repo1.maven.org/maven2/io/netty/netty-parent/4.0.29.Final/netty-parent-4.0.29.Final.pom
Downloading https://repo1.maven.org/maven2/io/netty/netty-parent/4.0.29.Final/
Downloaded https://repo1.maven.org/maven2/io/netty/netty-parent/4.0.29.Final/
Downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.26/slf4j-api-1.7.26.jar
Downloading https://repo1.maven.org/maven2/com/netflix/concurrency-limits/concurrency-limits-core/0.3.0/concurrency-limits-core-0.3.0.jar
Downloaded https://repo1.maven.org/maven2/com/netflix/concurrency-limits/concurrency-limits-core/0.3.0/concurrency-limits-core-0.3.0.jar
Downloaded https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.26/slf4j-api-1.7.26.jar
Downloading https://repo1.maven.org/maven2/io/netty/netty-tcnative-boringssl-static/2.0.25.Final/netty-tcnative-boringssl-static-2.0.25.Final.jar
Downloading https://repo1.maven.org/maven2/io/netty/netty-codec-http2/4.1.35.Final/netty-codec-http2-4.1.35.Final.jar
Downloaded https://repo1.maven.org/maven2/io/netty/netty-codec-http2/4.1.35.Final/netty-codec-http2-4.1.35.Final.jar
Downloaded https://repo1.maven.org/maven2/io/netty/netty-tcnative-boringssl-static/2.0.25.Final/netty-tcnative-boringssl-static-2.0.25.Final.jar
Downloading https://repo1.maven.org/maven2/io/opencensus/opencensus-api/0.19.1/opencensus-api-0.19.1.pom
Downloading https://repo1.maven.org/maven2/io/opencensus/opencensus-impl/0.19.1/opencensus-impl-0.19.1.pom
Downloading https://repo1.maven.org/maven2/io/opencensus/opencensus-impl/0.19.1/opencensus-impl-0.19.1.pom.sha1
Downloading https://repo1.maven.org/maven2/io/opencensus/opencensus-api/0.19.1/opencensus-api-0.19.1.pom.sha1
Downloaded https://repo1.maven.org/maven2/io/opencensus/opencensus-impl/0.19.1/opencensus-impl-0.19.1.pom.sha1
Downloaded https://repo1.maven.org/maven2/io/opencensus/opencensus-impl/0.19.1/opencensus-impl-0.19.1.pom
Downloading https://repo1.maven.org/maven2/io/opencensus/opencensus-impl/0.19.1/
Downloaded https://repo1.maven.org/maven2/io/opencensus/opencensus-api/0.19.1/opencensus-api-0.19.1.pom
Downloaded https://repo1.maven.org/maven2/io/opencensus/opencensus-api/0.19.1/opencensus-api-0.19.1.pom.sha1
Downloading https://repo1.maven.org/maven2/io/opencensus/opencensus-api/0.19.1/
Downloaded https://repo1.maven.org/maven2/io/opencensus/opencensus-impl/0.19.1/
Downloaded https://repo1.maven.org/maven2/io/opencensus/opencensus-api/0.19.1/
Downloading https://repo1.maven.org/maven2/io/grpc/grpc-context/1.18.0/grpc-context-1.18.0.pom
Downloading https://repo1.maven.org/maven2/io/grpc/grpc-context/1.18.0/grpc-context-1.18.0.pom.sha1
Downloading https://repo1.maven.org/maven2/io/opencensus/opencensus-impl-core/0.19.1/opencensus-impl-core-0.19.1.pom
Downloaded https://repo1.maven.org/maven2/io/grpc/grpc-context/1.18.0/grpc-context-1.18.0.pom.sha1
Downloading https://repo1.maven.org/maven2/com/lmax/disruptor/3.4.2/disruptor-3.4.2.pom.sha1
Downloading https://repo1.maven.org/maven2/io/opencensus/opencensus-impl-core/0.19.1/opencensus-impl-core-0.19.1.pom.sha1
Downloaded https://repo1.maven.org/maven2/io/grpc/grpc-context/1.18.0/grpc-context-1.18.0.pom
Downloading https://repo1.maven.org/maven2/com/lmax/disruptor/3.4.2/disruptor-3.4.2.pom
Downloading https://repo1.maven.org/maven2/io/grpc/grpc-context/1.18.0/
Downloaded https://repo1.maven.org/maven2/com/lmax/disruptor/3.4.2/disruptor-3.4.2.pom.sha1
Downloaded https://repo1.maven.org/maven2/io/opencensus/opencensus-impl-core/0.19.1/opencensus-impl-core-0.19.1.pom
Downloaded https://repo1.maven.org/maven2/io/opencensus/opencensus-impl-core/0.19.1/opencensus-impl-core-0.19.1.pom.sha1
Downloading https://repo1.maven.org/maven2/io/opencensus/opencensus-impl-core/0.19.1/
Downloaded https://repo1.maven.org/maven2/com/lmax/disruptor/3.4.2/disruptor-3.4.2.pom
Downloading https://repo1.maven.org/maven2/com/lmax/disruptor/3.4.2/
Downloaded https://repo1.maven.org/maven2/com/lmax/disruptor/3.4.2/
Downloaded https://repo1.maven.org/maven2/io/grpc/grpc-context/1.18.0/
Downloaded https://repo1.maven.org/maven2/io/opencensus/opencensus-impl-core/0.19.1/
Downloading https://repo1.maven.org/maven2/com/google/guava/guava/25.1-android/guava-25.1-android.pom
Downloading https://repo1.maven.org/maven2/com/google/guava/guava/25.1-android/guava-25.1-android.pom.sha1
Downloaded https://repo1.maven.org/maven2/com/google/guava/guava/25.1-android/guava-25.1-android.pom
Downloaded https://repo1.maven.org/maven2/com/google/guava/guava/25.1-android/guava-25.1-android.pom.sha1
Downloading https://repo1.maven.org/maven2/com/google/guava/guava/25.1-android/
Downloaded https://repo1.maven.org/maven2/com/google/guava/guava/25.1-android/
Downloading https://repo1.maven.org/maven2/com/google/guava/guava-parent/25.1-android/guava-parent-25.1-android.pom
Downloading https://repo1.maven.org/maven2/com/google/guava/guava-parent/25.1-android/guava-parent-25.1-android.pom.sha1
Downloaded https://repo1.maven.org/maven2/com/google/guava/guava-parent/25.1-android/guava-parent-25.1-android.pom.sha1
Downloaded https://repo1.maven.org/maven2/com/google/guava/guava-parent/25.1-android/guava-parent-25.1-android.pom
Downloading https://repo1.maven.org/maven2/com/google/guava/guava-parent/25.1-android/
Downloaded https://repo1.maven.org/maven2/com/google/guava/guava-parent/25.1-android/
Downloading https://repo1.maven.org/maven2/org/checkerframework/checker-compat-qual/2.0.0/checker-compat-qual-2.0.0.pom
Downloading https://repo1.maven.org/maven2/org/checkerframework/checker-compat-qual/2.0.0/checker-compat-qual-2.0.0.pom.sha1
Downloading https://repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.1.3/error_prone_annotations-2.1.3.pom
Downloading https://repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.1.3/error_prone_annotations-2.1.3.pom.sha1
Downloading https://repo1.maven.org/maven2/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.pom
Downloaded https://repo1.maven.org/maven2/org/checkerframework/checker-compat-qual/2.0.0/checker-compat-qual-2.0.0.pom.sha1
Downloaded https://repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.1.3/error_prone_annotations-2.1.3.pom
Downloading https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.pom
Downloading https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.pom.sha1
Downloading https://repo1.maven.org/maven2/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/checkerframework/checker-compat-qual/2.0.0/checker-compat-qual-2.0.0.pom
Downloading https://repo1.maven.org/maven2/org/codehaus/mojo/animal-sniffer-annotations/1.14/animal-sniffer-annotations-1.14.pom
Downloaded https://repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.1.3/error_prone_annotations-2.1.3.pom.sha1
Downloading https://repo1.maven.org/maven2/org/codehaus/mojo/animal-sniffer-annotations/1.14/animal-sniffer-annotations-1.14.pom.sha1
Downloaded https://repo1.maven.org/maven2/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.pom
Downloaded https://repo1.maven.org/maven2/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.pom.sha1
Downloading https://repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.1.3/
Downloading https://repo1.maven.org/maven2/org/checkerframework/checker-compat-qual/2.0.0/
Downloaded https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.pom
Downloading https://repo1.maven.org/maven2/com/google/j2objc/j2objc-annotations/1.1/
Downloaded https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/codehaus/mojo/animal-sniffer-annotations/1.14/animal-sniffer-annotations-1.14.pom
Downloading https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/3.0.2/
Downloaded https://repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.1.3/
Downloaded https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/3.0.2/
Downloaded https://repo1.maven.org/maven2/com/google/j2objc/j2objc-annotations/1.1/
Downloaded https://repo1.maven.org/maven2/org/checkerframework/checker-compat-qual/2.0.0/
Downloaded https://repo1.maven.org/maven2/org/codehaus/mojo/animal-sniffer-annotations/1.14/animal-sniffer-annotations-1.14.pom.sha1
Downloading https://repo1.maven.org/maven2/org/codehaus/mojo/animal-sniffer-annotations/1.14/
Downloaded https://repo1.maven.org/maven2/org/codehaus/mojo/animal-sniffer-annotations/1.14/
Downloading https://repo1.maven.org/maven2/org/codehaus/mojo/animal-sniffer-parent/1.14/animal-sniffer-parent-1.14.pom
Downloading https://repo1.maven.org/maven2/org/codehaus/mojo/animal-sniffer-parent/1.14/animal-sniffer-parent-1.14.pom.sha1
Downloading https://repo1.maven.org/maven2/com/google/errorprone/error_prone_parent/2.1.3/error_prone_parent-2.1.3.pom
Downloading https://repo1.maven.org/maven2/com/google/errorprone/error_prone_parent/2.1.3/error_prone_parent-2.1.3.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/codehaus/mojo/animal-sniffer-parent/1.14/animal-sniffer-parent-1.14.pom
Downloaded https://repo1.maven.org/maven2/org/codehaus/mojo/animal-sniffer-parent/1.14/animal-sniffer-parent-1.14.pom.sha1
Downloading https://repo1.maven.org/maven2/org/codehaus/mojo/animal-sniffer-parent/1.14/
Downloaded https://repo1.maven.org/maven2/com/google/errorprone/error_prone_parent/2.1.3/error_prone_parent-2.1.3.pom
Downloaded https://repo1.maven.org/maven2/com/google/errorprone/error_prone_parent/2.1.3/error_prone_parent-2.1.3.pom.sha1
Downloading https://repo1.maven.org/maven2/com/google/errorprone/error_prone_parent/2.1.3/
Downloaded https://repo1.maven.org/maven2/org/codehaus/mojo/animal-sniffer-parent/1.14/
Downloaded https://repo1.maven.org/maven2/com/google/errorprone/error_prone_parent/2.1.3/
Downloading https://repo1.maven.org/maven2/org/codehaus/mojo/mojo-parent/34/mojo-parent-34.pom
Downloading https://repo1.maven.org/maven2/org/codehaus/mojo/mojo-parent/34/mojo-parent-34.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/codehaus/mojo/mojo-parent/34/mojo-parent-34.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/codehaus/mojo/mojo-parent/34/mojo-parent-34.pom
Downloading https://repo1.maven.org/maven2/org/codehaus/mojo/mojo-parent/34/
Downloaded https://repo1.maven.org/maven2/org/codehaus/mojo/mojo-parent/34/
Downloading https://repo1.maven.org/maven2/org/codehaus/codehaus-parent/4/codehaus-parent-4.pom
Downloading https://repo1.maven.org/maven2/org/codehaus/codehaus-parent/4/codehaus-parent-4.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/codehaus/codehaus-parent/4/codehaus-parent-4.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/codehaus/codehaus-parent/4/codehaus-parent-4.pom
Downloading https://repo1.maven.org/maven2/org/codehaus/codehaus-parent/4/
Downloaded https://repo1.maven.org/maven2/org/codehaus/codehaus-parent/4/
Downloading https://repo1.maven.org/maven2/io/opencensus/opencensus-impl-core/0.19.1/opencensus-impl-core-0.19.1.jar
Downloading https://repo1.maven.org/maven2/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.jar
Downloading https://repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.1.3/error_prone_annotations-2.1.3.jar
Downloading https://repo1.maven.org/maven2/io/opencensus/opencensus-impl/0.19.1/opencensus-impl-0.19.1.jar
Downloading https://repo1.maven.org/maven2/com/google/guava/guava/25.1-android/guava-25.1-android.jar
Downloading https://repo1.maven.org/maven2/io/opencensus/opencensus-api/0.19.1/opencensus-api-0.19.1.jar
Downloaded https://repo1.maven.org/maven2/io/opencensus/opencensus-impl/0.19.1/opencensus-impl-0.19.1.jar
Downloading https://repo1.maven.org/maven2/io/grpc/grpc-context/1.18.0/grpc-context-1.18.0.jar
Downloaded https://repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.1.3/error_prone_annotations-2.1.3.jar
Downloading https://repo1.maven.org/maven2/org/codehaus/mojo/animal-sniffer-annotations/1.14/animal-sniffer-annotations-1.14.jar
Downloaded https://repo1.maven.org/maven2/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.jar
Downloading https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar
Downloaded https://repo1.maven.org/maven2/org/codehaus/mojo/animal-sniffer-annotations/1.14/animal-sniffer-annotations-1.14.jar
Downloading https://repo1.maven.org/maven2/com/lmax/disruptor/3.4.2/disruptor-3.4.2.jar
Downloaded https://repo1.maven.org/maven2/io/opencensus/opencensus-impl-core/0.19.1/opencensus-impl-core-0.19.1.jar
Downloading https://repo1.maven.org/maven2/org/checkerframework/checker-compat-qual/2.0.0/checker-compat-qual-2.0.0.jar
Downloaded https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar
Downloaded https://repo1.maven.org/maven2/io/grpc/grpc-context/1.18.0/grpc-context-1.18.0.jar
Downloaded https://repo1.maven.org/maven2/org/checkerframework/checker-compat-qual/2.0.0/checker-compat-qual-2.0.0.jar
Downloaded https://repo1.maven.org/maven2/com/lmax/disruptor/3.4.2/disruptor-3.4.2.jar
Downloaded https://repo1.maven.org/maven2/io/opencensus/opencensus-api/0.19.1/opencensus-api-0.19.1.jar
Downloaded https://repo1.maven.org/maven2/com/google/guava/guava/25.1-android/guava-25.1-android.jar
Downloading https://repo1.maven.org/maven2/com/twitter/bijection-core_2.11/0.9.4/bijection-core_2.11-0.9.4.pom
Downloading https://repo1.maven.org/maven2/com/twitter/bijection-core_2.11/0.9.4/bijection-core_2.11-0.9.4.pom.sha1
Downloaded https://repo1.maven.org/maven2/com/twitter/bijection-core_2.11/0.9.4/bijection-core_2.11-0.9.4.pom
Downloaded https://repo1.maven.org/maven2/com/twitter/bijection-core_2.11/0.9.4/bijection-core_2.11-0.9.4.pom.sha1
Downloading https://repo1.maven.org/maven2/com/twitter/bijection-core_2.11/0.9.4/
Downloaded https://repo1.maven.org/maven2/com/twitter/bijection-core_2.11/0.9.4/
Downloading https://repo1.maven.org/maven2/org/apache/httpcomponents/httpclient/4.4.1/httpclient-4.4.1.pom
Downloading https://repo1.maven.org/maven2/org/apache/httpcomponents/httpclient/4.4.1/httpclient-4.4.1.pom.sha1
Downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.12/slf4j-api-1.7.12.pom
Downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.12/slf4j-api-1.7.12.pom.sha1
Downloading https://repo1.maven.org/maven2/org/apache/httpcomponents/httpcore/4.4.1/httpcore-4.4.1.pom
Downloading https://repo1.maven.org/maven2/org/apache/httpcomponents/httpcore/4.4.1/httpcore-4.4.1.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/apache/httpcomponents/httpclient/4.4.1/httpclient-4.4.1.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/apache/httpcomponents/httpclient/4.4.1/httpclient-4.4.1.pom
Downloaded https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.12/slf4j-api-1.7.12.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/apache/httpcomponents/httpcore/4.4.1/httpcore-4.4.1.pom
Downloaded https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.12/slf4j-api-1.7.12.pom
Downloading https://repo1.maven.org/maven2/org/apache/httpcomponents/httpclient/4.4.1/
Downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.12/
Downloaded https://repo1.maven.org/maven2/org/apache/httpcomponents/httpcore/4.4.1/httpcore-4.4.1.pom.sha1
Downloading https://repo1.maven.org/maven2/org/apache/httpcomponents/httpcore/4.4.1/
Downloaded https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.12/
Downloaded https://repo1.maven.org/maven2/org/apache/httpcomponents/httpclient/4.4.1/
Downloaded https://repo1.maven.org/maven2/org/apache/httpcomponents/httpcore/4.4.1/
Downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-parent/1.7.12/slf4j-parent-1.7.12.pom
Downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-parent/1.7.12/slf4j-parent-1.7.12.pom.sha1
Downloading https://repo1.maven.org/maven2/org/apache/httpcomponents/httpcomponents-core/4.4.1/httpcomponents-core-4.4.1.pom
Downloading https://repo1.maven.org/maven2/org/apache/httpcomponents/httpcomponents-core/4.4.1/httpcomponents-core-4.4.1.pom.sha1
Downloading https://repo1.maven.org/maven2/org/apache/httpcomponents/httpcomponents-client/4.4.1/httpcomponents-client-4.4.1.pom
Downloading https://repo1.maven.org/maven2/org/apache/httpcomponents/httpcomponents-client/4.4.1/httpcomponents-client-4.4.1.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/slf4j/slf4j-parent/1.7.12/slf4j-parent-1.7.12.pom
Downloaded https://repo1.maven.org/maven2/org/apache/httpcomponents/httpcomponents-core/4.4.1/httpcomponents-core-4.4.1.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/apache/httpcomponents/httpcomponents-core/4.4.1/httpcomponents-core-4.4.1.pom
Downloaded https://repo1.maven.org/maven2/org/apache/httpcomponents/httpcomponents-client/4.4.1/httpcomponents-client-4.4.1.pom
Downloading https://repo1.maven.org/maven2/org/apache/httpcomponents/httpcomponents-core/4.4.1/
Downloaded https://repo1.maven.org/maven2/org/slf4j/slf4j-parent/1.7.12/slf4j-parent-1.7.12.pom.sha1
Downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-parent/1.7.12/
Downloaded https://repo1.maven.org/maven2/org/apache/httpcomponents/httpcomponents-client/4.4.1/httpcomponents-client-4.4.1.pom.sha1
Downloading https://repo1.maven.org/maven2/org/apache/httpcomponents/httpcomponents-client/4.4.1/
Downloaded https://repo1.maven.org/maven2/org/apache/httpcomponents/httpcomponents-core/4.4.1/
Downloaded https://repo1.maven.org/maven2/org/slf4j/slf4j-parent/1.7.12/
Downloaded https://repo1.maven.org/maven2/org/apache/httpcomponents/httpcomponents-client/4.4.1/
Downloading https://repo1.maven.org/maven2/org/apache/httpcomponents/project/7/project-7.pom
Downloading https://repo1.maven.org/maven2/org/apache/httpcomponents/project/7/project-7.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/apache/httpcomponents/project/7/project-7.pom
Downloaded https://repo1.maven.org/maven2/org/apache/httpcomponents/project/7/project-7.pom.sha1
Downloading https://repo1.maven.org/maven2/org/apache/httpcomponents/project/7/
Downloaded https://repo1.maven.org/maven2/org/apache/httpcomponents/project/7/
Downloading https://repo1.maven.org/maven2/org/apache/apache/13/apache-13.pom
Downloading https://repo1.maven.org/maven2/org/apache/apache/13/apache-13.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/apache/apache/13/apache-13.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/apache/apache/13/apache-13.pom
Downloading https://repo1.maven.org/maven2/org/apache/apache/13/
Downloaded https://repo1.maven.org/maven2/org/apache/apache/13/
Downloading https://repo1.maven.org/maven2/commons-logging/commons-logging/1.2/commons-logging-1.2.pom
Downloading https://repo1.maven.org/maven2/commons-logging/commons-logging/1.2/commons-logging-1.2.pom.sha1
Downloading https://repo1.maven.org/maven2/commons-codec/commons-codec/1.9/commons-codec-1.9.pom
Downloading https://repo1.maven.org/maven2/commons-codec/commons-codec/1.9/commons-codec-1.9.pom.sha1
Downloaded https://repo1.maven.org/maven2/commons-logging/commons-logging/1.2/commons-logging-1.2.pom.sha1
Downloaded https://repo1.maven.org/maven2/commons-codec/commons-codec/1.9/commons-codec-1.9.pom.sha1
Downloaded https://repo1.maven.org/maven2/commons-codec/commons-codec/1.9/commons-codec-1.9.pom
Downloading https://repo1.maven.org/maven2/commons-codec/commons-codec/1.9/
Downloaded https://repo1.maven.org/maven2/commons-logging/commons-logging/1.2/commons-logging-1.2.pom
Downloading https://repo1.maven.org/maven2/commons-logging/commons-logging/1.2/
Downloaded https://repo1.maven.org/maven2/commons-logging/commons-logging/1.2/
Downloaded https://repo1.maven.org/maven2/commons-codec/commons-codec/1.9/
Downloading https://repo1.maven.org/maven2/org/apache/commons/commons-parent/34/commons-parent-34.pom
Downloading https://repo1.maven.org/maven2/org/apache/commons/commons-parent/34/commons-parent-34.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/apache/commons/commons-parent/34/commons-parent-34.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/apache/commons/commons-parent/34/commons-parent-34.pom
Downloading https://repo1.maven.org/maven2/org/apache/commons/commons-parent/34/
Downloaded https://repo1.maven.org/maven2/org/apache/commons/commons-parent/34/
Downloading https://repo1.maven.org/maven2/org/apache/commons/commons-parent/32/commons-parent-32.pom
Downloading https://repo1.maven.org/maven2/org/apache/commons/commons-parent/32/commons-parent-32.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/apache/commons/commons-parent/32/commons-parent-32.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/apache/commons/commons-parent/32/commons-parent-32.pom
Downloading https://repo1.maven.org/maven2/org/apache/commons/commons-parent/32/
Downloaded https://repo1.maven.org/maven2/org/apache/commons/commons-parent/32/
Downloading https://repo1.maven.org/maven2/commons-codec/commons-codec/1.9/commons-codec-1.9.jar
Downloading https://repo1.maven.org/maven2/commons-logging/commons-logging/1.2/commons-logging-1.2.jar
Downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.12/slf4j-api-1.7.12.jar
Downloading https://repo1.maven.org/maven2/com/twitter/bijection-core_2.11/0.9.4/bijection-core_2.11-0.9.4.jar
Downloading https://repo1.maven.org/maven2/org/apache/httpcomponents/httpcore/4.4.1/httpcore-4.4.1.jar
Downloading https://repo1.maven.org/maven2/org/apache/httpcomponents/httpclient/4.4.1/httpclient-4.4.1.jar
Downloaded https://repo1.maven.org/maven2/commons-logging/commons-logging/1.2/commons-logging-1.2.jar
Downloaded https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.12/slf4j-api-1.7.12.jar
Downloaded https://repo1.maven.org/maven2/org/apache/httpcomponents/httpcore/4.4.1/httpcore-4.4.1.jar
Downloaded https://repo1.maven.org/maven2/commons-codec/commons-codec/1.9/commons-codec-1.9.jar
Downloaded https://repo1.maven.org/maven2/org/apache/httpcomponents/httpclient/4.4.1/httpclient-4.4.1.jar
Downloaded https://repo1.maven.org/maven2/com/twitter/bijection-core_2.11/0.9.4/bijection-core_2.11-0.9.4.jar
[success] Total time: 21 s, completed Jul 30, 2019 5:12:25 PM
[success] Total time: 1 s, completed Jul 30, 2019 5:12:26 PM
travis_time:end:044cf154:start=1564506678795725198,finish=1564506746634781004,duration=67839055806[0Ktravis_fold:end:before_script.3[0Ktravis_fold:start:before_script.4[0Ktravis_time:start:1cb289a0[0K$ ./sbt ++$TRAVIS_SCALA_VERSION finagle-memcached/test:compile
[info] Loading settings from build.sbt,unidoc.sbt,plugins.sbt ...
[info] Loading project definition from /home/travis/build/twitter/finagle/project
[info] Loading settings from build.sbt ...
[info] Resolving key references (17383 settings) ...
[info] Using Netty SNAPSHOT build mode: false
[info] Netty version: 4.1.35.Final
[info] Netty tcnative version 2.0.25.Final
[info] Set current project to finagle (in build file:/home/travis/build/twitter/finagle/)
[info] Setting Scala version to 2.11.12 on 30 projects.
[info] Reapplying settings...
[info] Using Netty SNAPSHOT build mode: false
[info] Netty version: 4.1.35.Final
[info] Netty tcnative version 2.0.25.Final
[info] Set current project to finagle (in build file:/home/travis/build/twitter/finagle/)
[info] Generating scrooge thrift for /home/travis/build/twitter/finagle/finagle-serversets/src/main/thrift/com/twitter/thrift/endpoint.thrift ...
[info] Compiling 10 Scala sources to /home/travis/build/twitter/finagle/finagle-toggle/target/scala-2.11/classes ...
[info] Compiling 1 Scala source to /home/travis/build/twitter/finagle/finagle-init/target/scala-2.11/classes ...
[info] Done compiling.
[info] Done compiling.
[info] Compiling 1 Scala source to /home/travis/build/twitter/finagle/finagle-tunable/target/scala-2.11/classes ...
[info] Compiling 301 Scala sources and 12 Java sources to /home/travis/build/twitter/finagle/finagle-core/target/scala-2.11/classes ...
[info] Done compiling.
[warn] there were three deprecation warnings; re-run with -deprecation for details
[warn] one warning found
[info] Done compiling.
[info] Compiling 59 Scala sources to /home/travis/build/twitter/finagle/finagle-base-http/target/scala-2.11/classes ...
[info] Compiling 38 Scala sources and 17 Java sources to /home/travis/build/twitter/finagle/finagle-serversets/target/scala-2.11/classes ...
[warn] there were two deprecation warnings; re-run with -deprecation for details
[warn] one warning found
[info] Done compiling.
[info] Compiling 63 Scala sources to /home/travis/build/twitter/finagle/finagle-netty4/target/scala-2.11/classes ...
[warn] there were three deprecation warnings; re-run with -deprecation for details
[warn] one warning found
[info] /home/travis/build/twitter/finagle/finagle-serversets/src/main/java/com/twitter/finagle/common/zookeeper/ServerSetImpl.java: /home/travis/build/twitter/finagle/finagle-serversets/src/main/java/com/twitter/finagle/common/zookeeper/ServerSetImpl.java uses or overrides a deprecated API.
[info] /home/travis/build/twitter/finagle/finagle-serversets/src/main/java/com/twitter/finagle/common/zookeeper/ServerSetImpl.java: Recompile with -Xlint:deprecation for details.
[info] Done compiling.
[warn] there were 7 deprecation warnings; re-run with -deprecation for details
[warn] one warning found
[info] Done compiling.
[info] Compiling 17 Scala sources to /home/travis/build/twitter/finagle/finagle-netty4-http/target/scala-2.11/classes ...
[info] Compiling 192 Scala sources and 35 Java sources to /home/travis/build/twitter/finagle/finagle-core/target/scala-2.11/test-classes ...
[info] Done compiling.
[info] Compiling 48 Scala sources to /home/travis/build/twitter/finagle/finagle-http2/target/scala-2.11/classes ...
[warn] there were four deprecation warnings; re-run with -deprecation for details
[warn] one warning found
[info] Done compiling.
[info] Compiling 27 Scala sources to /home/travis/build/twitter/finagle/finagle-http/target/scala-2.11/classes ...
[warn] there were four deprecation warnings; re-run with -deprecation for details
[warn] one warning found
[info] Done compiling.
[info] Compiling 19 Scala sources to /home/travis/build/twitter/finagle/finagle-stats-core/target/scala-2.11/classes ...
[info] Done compiling.
[info] Compiling 1 Scala source to /home/travis/build/twitter/finagle/finagle-stats/target/scala-2.11/classes ...
[info] Done compiling.
[info] Compiling 45 Scala sources and 3 Java sources to /home/travis/build/twitter/finagle/finagle-memcached/target/scala-2.11/classes ...
[warn] there were four deprecation warnings; re-run with -deprecation for details
[warn] one warning found
[info] Done compiling.
[warn] there were 16 deprecation warnings; re-run with -deprecation for details
[warn] one warning found
[info] Done compiling.
[info] Compiling 36 Scala sources and 3 Java sources to /home/travis/build/twitter/finagle/finagle-memcached/target/scala-2.11/test-classes ...
[warn] there was one deprecation warning; re-run with -deprecation for details
[warn] one warning found
[info] Done compiling.
[success] Total time: 161 s, completed Jul 30, 2019 5:15:31 PM
travis_time:end:1cb289a0:start=1564506746639487920,finish=1564506931800950319,duration=185161462399[0Ktravis_fold:end:before_script.4[0Ktravis_time:start:12f5e58a[0K$ if [[ ! -z "${USE_NETTY_SNAPSHOT}" ]]; then source ./netty-snapshot-env.sh $USE_NETTY_SNAPSHOT; fi
travis_time:end:12f5e58a:start=1564506931808600554,finish=1564506931812944435,duration=4343881[0K[32;1mThe command "if [[ ! -z "${USE_NETTY_SNAPSHOT}" ]]; then source ./netty-snapshot-env.sh $USE_NETTY_SNAPSHOT; fi" exited with 0.[0m

travis_time:start:0afd794c[0K$ travis_retry ./sbt ++$TRAVIS_SCALA_VERSION coverage "$PROJECT/test" coverageReport
[info] Loading settings from build.sbt,unidoc.sbt,plugins.sbt ...
[info] Loading project definition from /home/travis/build/twitter/finagle/project
[info] Loading settings from build.sbt ...
[info] Resolving key references (17383 settings) ...
[info] Using Netty SNAPSHOT build mode: false
[info] Netty version: 4.1.35.Final
[info] Netty tcnative version 2.0.25.Final
[info] Set current project to finagle (in build file:/home/travis/build/twitter/finagle/)
[info] Setting Scala version to 2.11.12 on 30 projects.
[info] Reapplying settings...
[info] Using Netty SNAPSHOT build mode: false
[info] Netty version: 4.1.35.Final
[info] Netty tcnative version 2.0.25.Final
[info] Set current project to finagle (in build file:/home/travis/build/twitter/finagle/)
[info] Defining ThisBuild / coverageEnabled
[info] The new value will be used by Compile / compile / scalacOptions, finagle-base-http / Compile / compile / scalacOptions and 57 others.
[info] 	Run `last` for details.
[info] Reapplying settings...
[info] Using Netty SNAPSHOT build mode: false
[info] Netty version: 4.1.35.Final
[info] Netty tcnative version 2.0.25.Final
[info] Set current project to finagle (in build file:/home/travis/build/twitter/finagle/)
Downloading https://repo1.maven.org/maven2/org/scoverage/scalac-scoverage-runtime_2.11/1.3.1/scalac-scoverage-runtime_2.11-1.3.1.pom
Downloading https://repo1.maven.org/maven2/org/scoverage/scalac-scoverage-runtime_2.11/1.3.1/scalac-scoverage-runtime_2.11-1.3.1.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/scoverage/scalac-scoverage-runtime_2.11/1.3.1/scalac-scoverage-runtime_2.11-1.3.1.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/scoverage/scalac-scoverage-runtime_2.11/1.3.1/scalac-scoverage-runtime_2.11-1.3.1.pom
Downloading https://repo1.maven.org/maven2/org/scoverage/scalac-scoverage-runtime_2.11/1.3.1/
Downloaded https://repo1.maven.org/maven2/org/scoverage/scalac-scoverage-runtime_2.11/1.3.1/
Downloading https://repo1.maven.org/maven2/org/scoverage/scalac-scoverage-plugin_2.11/1.3.1/scalac-scoverage-plugin_2.11-1.3.1.pom
Downloading https://repo1.maven.org/maven2/org/scoverage/scalac-scoverage-plugin_2.11/1.3.1/scalac-scoverage-plugin_2.11-1.3.1.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/scoverage/scalac-scoverage-plugin_2.11/1.3.1/scalac-scoverage-plugin_2.11-1.3.1.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/scoverage/scalac-scoverage-plugin_2.11/1.3.1/scalac-scoverage-plugin_2.11-1.3.1.pom
Downloading https://repo1.maven.org/maven2/org/scoverage/scalac-scoverage-plugin_2.11/1.3.1/
Downloaded https://repo1.maven.org/maven2/org/scoverage/scalac-scoverage-plugin_2.11/1.3.1/
Downloading https://repo1.maven.org/maven2/org/scala-lang/scala-library/2.11.11/scala-library-2.11.11.pom
Downloading https://repo1.maven.org/maven2/org/scala-lang/scala-library/2.11.11/scala-library-2.11.11.pom.sha1
Downloaded https://repo1.maven.org/maven2/org/scala-lang/scala-library/2.11.11/scala-library-2.11.11.pom
Downloaded https://repo1.maven.org/maven2/org/scala-lang/scala-library/2.11.11/scala-library-2.11.11.pom.sha1
Downloading https://repo1.maven.org/maven2/org/scala-lang/scala-library/2.11.11/
Downloaded https://repo1.maven.org/maven2/org/scala-lang/scala-library/2.11.11/
Downloading https://repo1.maven.org/maven2/org/scoverage/scalac-scoverage-plugin_2.11/1.3.1/scalac-scoverage-plugin_2.11-1.3.1.jar
Downloading https://repo1.maven.org/maven2/org/scoverage/scalac-scoverage-runtime_2.11/1.3.1/scalac-scoverage-runtime_2.11-1.3.1.jar
Downloading https://repo1.maven.org/maven2/org/scala-lang/scala-library/2.11.11/scala-library-2.11.11.jar
Downloaded https://repo1.maven.org/maven2/org/scoverage/scalac-scoverage-runtime_2.11/1.3.1/scalac-scoverage-runtime_2.11-1.3.1.jar
Downloaded https://repo1.maven.org/maven2/org/scoverage/scalac-scoverage-plugin_2.11/1.3.1/scalac-scoverage-plugin_2.11-1.3.1.jar
Downloaded https://repo1.maven.org/maven2/org/scala-lang/scala-library/2.11.11/scala-library-2.11.11.jar
[info] Compiling 1 Scala source to /home/travis/build/twitter/finagle/finagle-init/target/scala-2.11/classes ...
[info] Compiling 10 Scala sources to /home/travis/build/twitter/finagle/finagle-toggle/target/scala-2.11/classes ...
[info] [info] Cleaning datadir [/home/travis/build/twitter/finagle/finagle-init/target/scala-2.11/scoverage-data]
[info] [info] Beginning coverage instrumentation
[info] [info] Instrumentation completed [0 statements]
[info] [info] Wrote instrumentation file [/home/travis/build/twitter/finagle/finagle-init/target/scala-2.11/scoverage-data/scoverage.coverage.xml]
[info] [info] Will write measurement data to [/home/travis/build/twitter/finagle/finagle-init/target/scala-2.11/scoverage-data]
[info] Done compiling.
[info] [info] Cleaning datadir [/home/travis/build/twitter/finagle/finagle-toggle/target/scala-2.11/scoverage-data]
[info] [info] Beginning coverage instrumentation
[info] [info] Instrumentation completed [596 statements]
[info] [info] Wrote instrumentation file [/home/travis/build/twitter/finagle/finagle-toggle/target/scala-2.11/scoverage-data/scoverage.coverage.xml]
[info] [info] Will write measurement data to [/home/travis/build/twitter/finagle/finagle-toggle/target/scala-2.11/scoverage-data]
[info] Done compiling.
[info] Compiling 301 Scala sources and 12 Java sources to /home/travis/build/twitter/finagle/finagle-core/target/scala-2.11/classes ...
[info] [info] Cleaning datadir [/home/travis/build/twitter/finagle/finagle-core/target/scala-2.11/scoverage-data]
[info] [info] Beginning coverage instrumentation
[info] [info] Instrumentation completed [13960 statements]
[info] [info] Wrote instrumentation file [/home/travis/build/twitter/finagle/finagle-core/target/scala-2.11/scoverage-data/scoverage.coverage.xml]
[info] [info] Will write measurement data to [/home/travis/build/twitter/finagle/finagle-core/target/scala-2.11/scoverage-data]
[warn] there were three deprecation warnings; re-run with -deprecation for details
[warn] one warning found
[info] Done compiling.
[info] Compiling 59 Scala sources to /home/travis/build/twitter/finagle/finagle-base-http/target/scala-2.11/classes ...
[info] Compiling 63 Scala sources to /home/travis/build/twitter/finagle/finagle-netty4/target/scala-2.11/classes ...
[info] [info] Cleaning datadir [/home/travis/build/twitter/finagle/finagle-netty4/target/scala-2.11/scoverage-data]
[info] [info] Beginning coverage instrumentation
[info] [info] Instrumentation completed [2581 statements]
[info] [info] Cleaning datadir [/home/travis/build/twitter/finagle/finagle-base-http/target/scala-2.11/scoverage-data]
[info] [info] Beginning coverage instrumentation
[info] [info] Wrote instrumentation file [/home/travis/build/twitter/finagle/finagle-netty4/target/scala-2.11/scoverage-data/scoverage.coverage.xml]
[info] [info] Will write measurement data to [/home/travis/build/twitter/finagle/finagle-netty4/target/scala-2.11/scoverage-data]
[info] [info] Instrumentation completed [3336 statements]
[info] [info] Wrote instrumentation file [/home/travis/build/twitter/finagle/finagle-base-http/target/scala-2.11/scoverage-data/scoverage.coverage.xml]
[info] [info] Will write measurement data to [/home/travis/build/twitter/finagle/finagle-base-http/target/scala-2.11/scoverage-data]
[warn] there were 7 deprecation warnings; re-run with -deprecation for details
[warn] one warning found
[info] Done compiling.
[warn] there were two deprecation warnings; re-run with -deprecation for details
[warn] one warning found
[info] Done compiling.
[info] Compiling 17 Scala sources to /home/travis/build/twitter/finagle/finagle-netty4-http/target/scala-2.11/classes ...
[info] [info] Cleaning datadir [/home/travis/build/twitter/finagle/finagle-netty4-http/target/scala-2.11/scoverage-data]
[info] [info] Beginning coverage instrumentation
[info] [info] Instrumentation completed [884 statements]
[info] [info] Wrote instrumentation file [/home/travis/build/twitter/finagle/finagle-netty4-http/target/scala-2.11/scoverage-data/scoverage.coverage.xml]
[info] [info] Will write measurement data to [/home/travis/build/twitter/finagle/finagle-netty4-http/target/scala-2.11/scoverage-data]
[info] Done compiling.
[info] Compiling 48 Scala sources to /home/travis/build/twitter/finagle/finagle-http2/target/scala-2.11/classes ...
[info] [info] Cleaning datadir [/home/travis/build/twitter/finagle/finagle-http2/target/scala-2.11/scoverage-data]
[info] [info] Beginning coverage instrumentation
[info] [info] Instrumentation completed [2583 statements]
[info] [info] Wrote instrumentation file [/home/travis/build/twitter/finagle/finagle-http2/target/scala-2.11/scoverage-data/scoverage.coverage.xml]
[info] [info] Will write measurement data to [/home/travis/build/twitter/finagle/finagle-http2/target/scala-2.11/scoverage-data]
[warn] there were four deprecation warnings; re-run with -deprecation for details
[warn] one warning found
[info] Done compiling.
[info] Compiling 27 Scala sources to /home/travis/build/twitter/finagle/finagle-http/target/scala-2.11/classes ...
[info] [info] Cleaning datadir [/home/travis/build/twitter/finagle/finagle-http/target/scala-2.11/scoverage-data]
[info] [info] Beginning coverage instrumentation
[info] [info] Instrumentation completed [1605 statements]
[info] [info] Wrote instrumentation file [/home/travis/build/twitter/finagle/finagle-http/target/scala-2.11/scoverage-data/scoverage.coverage.xml]
[info] [info] Will write measurement data to [/home/travis/build/twitter/finagle/finagle-http/target/scala-2.11/scoverage-data]
[warn] there were four deprecation warnings; re-run with -deprecation for details
[warn] one warning found
[info] Done compiling.
[info] Compiling 48 Scala sources and 9 Java sources to /home/travis/build/twitter/finagle/finagle-http/target/scala-2.11/test-classes ...
[warn] there were two deprecation warnings; re-run with -deprecation for details
[warn] one warning found
[info] Done compiling.
[warn] javaOptions will be ignored, fork is set to false
Jul 30, 2019 5:18:01 PM com.twitter.finagle.http.filter.ExceptionFilter$$anonfun$apply$1 applyOrElse
WARNING: exception: uri:/?exception=true exception:java.lang.Exception
java.lang.Exception
	at com.twitter.finagle.http.filter.ExceptionFilterTest$$anon$1.apply(ExceptionFilterTest.scala:17)
	at com.twitter.finagle.http.filter.ExceptionFilterTest$$anon$1.apply(ExceptionFilterTest.scala:11)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ExceptionFilter.liftedTree1$1(ExceptionFilter.scala:24)
	at com.twitter.finagle.http.filter.ExceptionFilter.apply(ExceptionFilter.scala:23)
	at com.twitter.finagle.http.filter.ExceptionFilter.apply(ExceptionFilter.scala:17)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.filter.ExceptionFilterTest$$anonfun$2.apply(ExceptionFilterTest.scala:40)
	at com.twitter.finagle.http.filter.ExceptionFilterTest$$anonfun$2.apply(ExceptionFilterTest.scala:38)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at org.scalatest.FunSuite.run(FunSuite.scala:1560)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:01 PM com.twitter.finagle.http.filter.ExceptionFilter$$anonfun$apply$1 applyOrElse
WARNING: exception: uri:/?throw=true exception:java.lang.Exception
java.lang.Exception
	at com.twitter.finagle.http.filter.ExceptionFilterTest$$anon$1.apply(ExceptionFilterTest.scala:19)
	at com.twitter.finagle.http.filter.ExceptionFilterTest$$anon$1.apply(ExceptionFilterTest.scala:11)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ExceptionFilter.liftedTree1$1(ExceptionFilter.scala:24)
	at com.twitter.finagle.http.filter.ExceptionFilter.apply(ExceptionFilter.scala:23)
	at com.twitter.finagle.http.filter.ExceptionFilter.apply(ExceptionFilter.scala:17)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.filter.ExceptionFilterTest$$anonfun$3.apply(ExceptionFilterTest.scala:49)
	at com.twitter.finagle.http.filter.ExceptionFilterTest$$anonfun$3.apply(ExceptionFilterTest.scala:47)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at org.scalatest.FunSuite.run(FunSuite.scala:1560)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:01 PM com.twitter.finagle.http.filter.ExceptionFilter$$anonfun$apply$1 applyOrElse
WARNING: cancelled request: uri:/?cancel=true
[info] ExceptionFilterTest:
[info] - ignore success
[info] - handle exception
[info] - handle throw
[info] - handle cancel
Jul 30, 2019 5:18:02 PM com.twitter.finagle.Init$$anonfun$6 apply$mcV$sp
INFO: Finagle version 19.8.0-SNAPSHOT (rev=a05a747a6f57b649a02d88436c2ccb7bbde26ff5) built at 20190730-171610
[info] HttpTest:
[info] - client stack includes exactly one NackAdmissionFilter
[info] - client uses custom response classifier by default
[info] - responseClassifierParam toggled off
[info] - responseClassifierParam toggled on
[info] - client and server emit http specific stats when enabled
[info] - server uses custom response classifier when specified
[info] - Netty 4 is a default implementation
[debug] Test run started
[debug] Test com.twitter.finagle.http.RequestCompilationTest.testMain started
[debug] Test com.twitter.finagle.http.RequestCompilationTest.testMain finished, took 0.002 sec
[debug] Test run finished: 0 failed, 0 ignored, 1 total, 0.008s
[info] PathTest:
[info] - construct by list
[info] - path separator extrator
[info] - file extension extractor
[info] - /foo/bar
[info] - foo/bar
[info] - :? extractor
[info] - :? extractor with ParamMatcher
[info] - :? extractor with IntParamMatcher and LongParamMatcher
[info] - ~ extractor on Path
[info] - ~ extractor on filename foo.json
[info] - ~ extractor on filename foo
[info] - -> extractor
[info] - Root extractor
[info] - Root extractor, no partial match
[info] - Root extractor, empty path
[info] - / extractor
[info] - Integer extractor
[info] - Integer extractor, negative int
[info] - Integer extractor, invalid int
[info] - Integer extractor, number format error
[info] - Long extractor
[info] - Long extractor, invalid int
[info] - Long extractor, number format error
[info] HttpCodecTest:
[info] - encodeRequestToString
[info] - decodeStringToRequest
[info] - decodeBytesToRequest
[info] - encodeResponseToString
[info] - decodeStringToResponse
[info] - decodeBytesToResponse
Jul 30, 2019 5:18:05 PM io.netty.handler.codec.http2.Http2FrameCodec onHttp2UnknownStreamError
WARNING: Stream exception thrown for unkown stream 1.
io.netty.handler.codec.http2.Http2Exception$HeaderListSizeException: Header size exceeded max allowed size (8192)
	at io.netty.handler.codec.http2.Http2Exception.headerListSizeError(Http2Exception.java:171)
	at io.netty.handler.codec.http2.Http2CodecUtil.headerListSizeExceeded(Http2CodecUtil.java:228)
	at io.netty.handler.codec.http2.HpackDecoder$Http2HeadersSink.finish(HpackDecoder.java:541)
	at io.netty.handler.codec.http2.HpackDecoder.decode(HpackDecoder.java:128)
	at io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder.decodeHeaders(DefaultHttp2HeadersDecoder.java:127)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersBlockBuilder.headers(DefaultHttp2FrameReader.java:743)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:05 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:33648, downstream address: n/a, label: server).
java.lang.IllegalArgumentException: bad news
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:217)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:216)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.ThreadUsage$ThreadUsageFilter.apply(ThreadUsage.scala:130)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.DtabStatsFilter.apply(DtabStatsFilter.scala:37)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.StatsFilter.apply(StatsFilter.scala:258)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ServerStatsFilter.apply(ServerStatsFilter.scala:55)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:131)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:92)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelRequestStatsHandler.channelRead(ChannelRequestStatsHandler.scala:48)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:607)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:254)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:106)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:06 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:41276, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply$mcV$sp(AbstractEndToEndTest.scala:474)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:06 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:44956, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply$mcV$sp(AbstractEndToEndTest.scala:515)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:10 PM com.twitter.finagle.http2.transport.StreamTransportFactory$StreamTransport com$twitter$finagle$http2$transport$StreamTransportFactory$StreamTransport$$handleBadState
ERROR: Stream 1 bad state: Write to dead stream: DefaultHttpContent(data: ReadOnlyByteBuf(ridx: 0, widx: 1, cap: 1/1, unwrapped: UnpooledHeapByteBuf(ridx: 0, widx: 1, cap: 1/1)), decoderResult: success)
Jul 30, 2019 5:18:10 PM com.twitter.finagle.http2.transport.StreamTransportFactory$StreamTransport com$twitter$finagle$http2$transport$StreamTransportFactory$StreamTransport$$handleBadState
ERROR: Stream 1 bad state: Write to dead stream: DefaultHttpContent(data: ReadOnlyByteBuf(ridx: 0, widx: 1, cap: 1/1, unwrapped: UnpooledHeapByteBuf(ridx: 0, widx: 1, cap: 1/1)), decoderResult: success)
Jul 30, 2019 5:18:11 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:40683, label: http).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: /0.0.0.0:40683, Downstream label: http, Trace Id: 6a8dd7068026974e.6a8dd7068026974e<:6a8dd7068026974e

Jul 30, 2019 5:18:11 PM com.twitter.finagle.http2.transport.PriorKnowledgeTransporter$$anonfun$apply$2$$anonfun$apply$1 applyOrElse
WARNING: A previously successful connection to address localhost/127.0.0.1:42328 stopped being successful.
com.twitter.finagle.http2.DeadConnectionException: assigned an already dead connection to address localhost/127.0.0.1:42328
	at com.twitter.finagle.http2.transport.StreamTransportFactory$$anon$3.run(StreamTransportFactory.scala:282)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:405)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:338)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:11 PM com.twitter.finagle.http2.transport.PriorKnowledgeTransporter$$anonfun$apply$2$$anonfun$apply$1 applyOrElse
WARNING: A previously successful connection to address localhost/127.0.0.1:42328 stopped being successful.
com.twitter.finagle.http2.DeadConnectionException: assigned an already dead connection to address localhost/127.0.0.1:42328
	at com.twitter.finagle.http2.transport.StreamTransportFactory$$anon$3.run(StreamTransportFactory.scala:282)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:405)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:338)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:11 PM com.twitter.finagle.liveness.FailureAccrualFactory$$anon$2$$anon$1 didMarkDead
INFO: FailureAccrualFactory marking connection to "client" as dead. Remote Address: Inet(localhost/127.0.0.1:42328,Map())
Jul 30, 2019 5:18:11 PM com.twitter.finagle.http2.transport.PriorKnowledgeTransporter$$anonfun$apply$2$$anonfun$apply$1 applyOrElse
WARNING: A previously successful connection to address localhost/127.0.0.1:42328 stopped being successful.
com.twitter.finagle.http2.DeadConnectionException: assigned an already dead connection to address localhost/127.0.0.1:42328
	at com.twitter.finagle.http2.transport.StreamTransportFactory$$anon$3.run(StreamTransportFactory.scala:282)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:405)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:338)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:11 PM com.twitter.finagle.http2.transport.PriorKnowledgeTransporter$$anonfun$apply$2$$anonfun$apply$1 applyOrElse
WARNING: A previously successful connection to address localhost/127.0.0.1:41166 stopped being successful.
com.twitter.finagle.http2.DeadConnectionException: assigned an already dead connection to address localhost/127.0.0.1:41166
	at com.twitter.finagle.http2.transport.StreamTransportFactory$$anon$3.run(StreamTransportFactory.scala:282)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:405)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:338)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:11 PM com.twitter.finagle.http2.transport.PriorKnowledgeTransporter$$anonfun$apply$2$$anonfun$apply$1 applyOrElse
WARNING: A previously successful connection to address localhost/127.0.0.1:41166 stopped being successful.
com.twitter.finagle.http2.DeadConnectionException: assigned an already dead connection to address localhost/127.0.0.1:41166
	at com.twitter.finagle.http2.transport.StreamTransportFactory$$anon$3.run(StreamTransportFactory.scala:282)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:405)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:338)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:11 PM com.twitter.finagle.liveness.FailureAccrualFactory$$anon$2$$anon$1 didMarkDead
INFO: FailureAccrualFactory marking connection to "client" as dead. Remote Address: Inet(localhost/127.0.0.1:41166,Map())
Jul 30, 2019 5:18:11 PM com.twitter.finagle.http2.transport.PriorKnowledgeTransporter$$anonfun$apply$2$$anonfun$apply$1 applyOrElse
WARNING: A previously successful connection to address localhost/127.0.0.1:41166 stopped being successful.
com.twitter.finagle.http2.DeadConnectionException: assigned an already dead connection to address localhost/127.0.0.1:41166
	at com.twitter.finagle.http2.transport.StreamTransportFactory$$anon$3.run(StreamTransportFactory.scala:282)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:405)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:338)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:12 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:35412, downstream address: n/a, label: ).
com.twitter.finagle.http.Rfc7230HeaderValidation$ValueValidationException: Header 'foo': value contains a prohibited character '0xc': 
	at com.twitter.finagle.http.Rfc7230HeaderValidation$.validateValue(Rfc7230HeaderValidation.scala:140)
	at com.twitter.finagle.http.DefaultHeaderMap$.com$twitter$finagle$http$DefaultHeaderMap$$foldReplacingValidateValue(DefaultHeaderMap.scala:103)
	at com.twitter.finagle.http.DefaultHeaderMap.add(DefaultHeaderMap.scala:33)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1340)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1337)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:607)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:254)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:106)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:12 PM com.twitter.finagle.http2.transport.PriorKnowledgeTransporter$$anonfun$apply$2$$anonfun$apply$1 applyOrElse
WARNING: A previously successful connection to address localhost/127.0.0.1:44054 stopped being successful.
com.twitter.finagle.http2.DeadConnectionException: assigned an already dead connection to address localhost/127.0.0.1:44054
	at com.twitter.finagle.http2.transport.StreamTransportFactory$$anon$3.run(StreamTransportFactory.scala:282)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:405)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:338)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:12 PM com.twitter.finagle.http2.transport.H2Filter close
INFO: Closing h2 session with deadline 2019-07-30 17:18:17 +0000
Jul 30, 2019 5:18:12 PM com.twitter.finagle.http2.transport.PriorKnowledgeTransporter$$anonfun$apply$2$$anonfun$apply$1 applyOrElse
WARNING: A previously successful connection to address /0.0.0.0:40201 stopped being successful.
com.twitter.finagle.http2.DeadConnectionException: assigned an already dead connection to address /0.0.0.0:40201
	at com.twitter.finagle.http2.transport.StreamTransportFactory$$anon$3.run(StreamTransportFactory.scala:282)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:405)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:338)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:13 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:18:13 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:18:13 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:18:13 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 304 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:18:13 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:18:13 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:18:13 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:18:13 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:18:13 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:18:13 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:18:13 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 304 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:18:13 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:38808, downstream address: n/a, label: ).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$initService$1.apply(AbstractEndToEndTest.scala:68)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$initService$1.apply(AbstractEndToEndTest.scala:67)
	at com.twitter.finagle.Service$$anon$2.apply(Service.scala:29)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:607)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:254)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:106)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:13 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:43740, downstream address: n/a, label: ).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$initService$1.apply(AbstractEndToEndTest.scala:68)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$initService$1.apply(AbstractEndToEndTest.scala:67)
	at com.twitter.finagle.Service$$anon$2.apply(Service.scala:29)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:607)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:254)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:106)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

[info] ClassicHttp2PriorKnowledgeTest:
[info] - prior knowledge http/2: request header fields too large
[info] - prior knowledge http/2: with default client-side ResponseClassifier
[info] - prior knowledge http/2: with default server-side ResponseClassifier
[info] - prior knowledge http/2: unhandled exceptions are converted into 500s
[info] - prior knowledge http/2: client stack observes max header size
[info] - prior knowledge http/2: client sets content length
[info] - prior knowledge http/2: echo
[info] - prior knowledge http/2: dtab
[info] - prior knowledge http/2: (no) dtab
[info] - prior knowledge http/2: context
[info] - prior knowledge http/2: measure payload size
[info] - prior knowledge http/2: interrupt requests
[info] - prior knowledge http/2: interrupting requests doesn't interfere with others
[info] - prior knowledge http/2: aggregates trailers when streams are aggregated
[info] - prior knowledge http/2: trace
[info] - prior knowledge http/2 (streaming): stream
[info] - prior knowledge http/2 (streaming): stream via ResponseProxy filter
[info] - prior knowledge http/2 (streaming): aggregates responses that must not have a body
[info] - prior knowledge http/2 (streaming): stream via ResponseProxy class
[info] - prior knowledge http/2 (streaming): streaming clients can decompress content
[info] - prior knowledge http/2 (streaming): symmetric reader and getContent
[info] - prior knowledge http/2 (streaming): transport closure propagates to request stream reader
[info] - prior knowledge http/2 (streaming): transport closure propagates to request stream producer
[info] - prior knowledge http/2 (streaming): request discard terminates remote stream producer
[info] - prior knowledge http/2 (streaming): client discard terminates stream and frees up the connection
[info] - prior knowledge http/2 (streaming): two fixed-length requests
[info] - prior knowledge http/2 (streaming): measure chunk payload size
[info] - Responses with Content-length header larger than 8 KB are not aggregated
[info] - Responses with Content-length header equal to 8 KB are aggregated
[info] - Responses with Content-length header smaller than 8 KB are aggregated
[info] - prior knowledge http/2: streaming requests can't be retried
[info] - prior knowledge http/2: streaming session bi-directionally transmit trailing headers
[info] - prior knowledge http/2: invalid trailer causes server to hang up
[info] - prior knowledge http/2: PooledByteBufAllocator maxOrder is 7 for servers
[info] - prior knowledge http/2: PooledByteBufAllocator maxOrder is 7 for clients
[info] - prior knowledge http/2: nonretryable isn't retried
[info] - Client-side ResponseClassifier based on status code
[info] - server-side ResponseClassifier based on status code
[info] - codec should require a message size be less than 2Gb
[info] - client respects MaxResponseSize
[info] - server rejects illegal headers with a 400
[info] - server rejects illegal trailers with a 400
[info] - client rejects illegal headers with an exception
[info] - client rejects illegal trailer with an exception
[info] - obs-fold sequences are 'fixed' when received by clients
[info] - obs-fold sequences are 'fixed' when received by servers
[info] - server responds with 400 Bad Request if non-ascii character is present in uri !!! IGNORED !!!
[info] - server responds 500 if an invalid header is being served
[info] - client respects MaxHeaderSize in response
[info] - non-streaming clients can decompress content
[info] - non-streaming clients can disable decompression
[info] - removing the compressor works
[info] - request remote address
[info] - out of order client requests are OK
[info] - prior knowledge http/2 client handles cut connection properly
[info] - Does not retry service acquisition many times when not using FactoryToService
[info] - prior knowledge http/2: Graceful shutdown & draining
[info] - prior knowledge http/2: methodBuilder timeouts from Stack
[info] - prior knowledge http/2: methodBuilder timeouts from ClientBuilder
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header field
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header fieldwhen non-empty body is returned
[info] - response with status code 100 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 102 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 204 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 304 must not have a message body *BUT* Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - client closes properly when closed
[info] - client doesn't honor the Netty stream dependency extension header
[info] - A prior knowledge connection counts as one upgrade for stats
[info] TraceInitializationTest:
[info] - TraceId is propagated through the protocol
[info] - TraceId is propagated through the protocol (builder)
[info] SameSiteEndToEndTest:
[info] - response should contain Lax if set in laxService
[info] - response should contain Strict if set in strictService
[info] - response should contain no SameSite attribute if set to None
[info] - server should not see SameSite.Lax if set by client
[debug] Test run started
[debug] Test com.twitter.finagle.HttpCompilationTest.testClient started
[debug] Test com.twitter.finagle.HttpCompilationTest.testClient finished, took 0.01 sec
[debug] Test com.twitter.finagle.HttpCompilationTest.testServer started
[debug] Test com.twitter.finagle.HttpCompilationTest.testServer finished, took 0.003 sec
[debug] Test run finished: 0 failed, 0 ignored, 2 total, 0.017s
[info] HttpSslTest:
[info] - Peer certificate is available to HTTP/1.1 service
[info] - Peer certificate is available to HTTP/2 service
[info] - Peer certificate is available to HTTP/2 service with HTTP/1.1 client
[info] MethodRequiredFilterTest:
[info] - return 407 when disallowed method is used
[info] - return 200 when allowed method is used
[info] TracingTest:
[info] - set header
[info] - record only path of url
[info] - parse header
[info] - parse header (128-bit TraceIDs)
[info] - parse header with sampled as 1
[info] - not parse header if no trace id
[info] - survive bad flags entry
[info] - survive no flags entry
[info] - hasAllRequiredHeaders with all
[info] DirectPayloadsLifecycleTest:
[info] - [HTTP/1.1] should never leak direct paylods into the user space
[info] - [HTTP/2] should never leak direct paylods into the user space
[info] - [HTTP/2 client <-> HTTP/1.1 server] should never leak direct paylods into the user space
[info] - [Prior Knowledge HTTP/2] should never leak direct paylods into the user space
Jul 30, 2019 5:18:15 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:34320, downstream address: n/a, label: server).
java.lang.IllegalArgumentException: bad news
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:217)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:216)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.ThreadUsage$ThreadUsageFilter.apply(ThreadUsage.scala:130)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.DtabStatsFilter.apply(DtabStatsFilter.scala:37)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.StatsFilter.apply(StatsFilter.scala:258)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ServerStatsFilter.apply(ServerStatsFilter.scala:55)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:131)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:92)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelRequestStatsHandler.channelRead(ChannelRequestStatsHandler.scala:48)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:71)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:15 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:38005, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply$mcV$sp(AbstractEndToEndTest.scala:474)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:15 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:41009, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply$mcV$sp(AbstractEndToEndTest.scala:515)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:17 PM com.twitter.finagle.http2.transport.H2Filter$$anonfun$1$$anon$4 run
INFO: Graceful draining period lapsed. Sending final GOAWAY and closing the connection.
Jul 30, 2019 5:18:19 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:33642, label: client).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: localhost/127.0.0.1:33642, Downstream label: client, Trace Id: 650035bec74a4f31.650035bec74a4f31<:650035bec74a4f31

Jul 30, 2019 5:18:19 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:40443, label: http).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: /0.0.0.0:40443, Downstream label: http, Trace Id: 89bf20311472f026.89bf20311472f026<:89bf20311472f026

Jul 30, 2019 5:18:20 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:41482, downstream address: n/a, label: ).
com.twitter.finagle.http.Rfc7230HeaderValidation$ValueValidationException: Header 'foo': value contains a prohibited character '0xc': 
	at com.twitter.finagle.http.Rfc7230HeaderValidation$.validateValue(Rfc7230HeaderValidation.scala:140)
	at com.twitter.finagle.http.DefaultHeaderMap$.com$twitter$finagle$http$DefaultHeaderMap$$foldReplacingValidateValue(DefaultHeaderMap.scala:103)
	at com.twitter.finagle.http.DefaultHeaderMap.add(DefaultHeaderMap.scala:33)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1340)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1337)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:71)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:21 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleHeadResponse
INFO: Received response to HEAD request (Request("HEAD /", from /127.0.0.1:49504)) that contained a static body of length 10. Discarding body. If this is desired behavior, consider adding HeadFilter to your service
[info] ServerFailHttp2UpgradeTest:
[info] - http/1.1 client, http/2 server: request header fields too large
[info] - http/1.1 client, http/2 server: with default client-side ResponseClassifier
[info] - http/1.1 client, http/2 server: with default server-side ResponseClassifier
[info] - http/1.1 client, http/2 server: unhandled exceptions are converted into 500s
[info] - http/1.1 client, http/2 server: client stack observes max header size
[info] - http/1.1 client, http/2 server: client sets content length
[info] - http/1.1 client, http/2 server: echo
[info] - http/1.1 client, http/2 server: dtab
[info] - http/1.1 client, http/2 server: (no) dtab
[info] - http/1.1 client, http/2 server: context
[info] - http/1.1 client, http/2 server: measure payload size
[info] - http/1.1 client, http/2 server: interrupt requests
[info] - http/1.1 client, http/2 server: interrupting requests doesn't interfere with others
[info] - http/1.1 client, http/2 server: aggregates trailers when streams are aggregated
[info] - http/1.1 client, http/2 server: trace
[info] - http/1.1 client, http/2 server (streaming): stream
[info] - http/1.1 client, http/2 server (streaming): stream via ResponseProxy filter
[info] - http/1.1 client, http/2 server (streaming): aggregates responses that must not have a body
[info] - http/1.1 client, http/2 server (streaming): stream via ResponseProxy class
[info] - http/1.1 client, http/2 server (streaming): streaming clients can decompress content
[info] - http/1.1 client, http/2 server (streaming): symmetric reader and getContent
[info] - http/1.1 client, http/2 server (streaming): transport closure propagates to request stream reader
[info] - http/1.1 client, http/2 server (streaming): transport closure propagates to request stream producer
[info] - http/1.1 client, http/2 server (streaming): request discard terminates remote stream producer
[info] - http/1.1 client, http/2 server (streaming): client discard terminates stream and frees up the connection
[info] - http/1.1 client, http/2 server (streaming): two fixed-length requests
[info] - http/1.1 client, http/2 server (streaming): measure chunk payload size
[info] - Responses with Content-length header larger than 8 KB are not aggregated
[info] - Responses with Content-length header equal to 8 KB are aggregated
[info] - Responses with Content-length header smaller than 8 KB are aggregated
[info] - http/1.1 client, http/2 server: streaming requests can't be retried
[info] - http/1.1 client, http/2 server: streaming session bi-directionally transmit trailing headers
[info] - http/1.1 client, http/2 server: invalid trailer causes server to hang up
[info] - http/1.1 client, http/2 server: PooledByteBufAllocator maxOrder is 7 for servers
[info] - http/1.1 client, http/2 server: PooledByteBufAllocator maxOrder is 7 for clients
[info] - http/1.1 client, http/2 server: nonretryable isn't retried
[info] - Client-side ResponseClassifier based on status code
[info] - server-side ResponseClassifier based on status code
[info] - codec should require a message size be less than 2Gb
[info] - client respects MaxResponseSize
[info] - server rejects illegal headers with a 400
[info] - server rejects illegal trailers with a 400
[info] - client rejects illegal headers with an exception
[info] - client rejects illegal trailer with an exception
[info] - obs-fold sequences are 'fixed' when received by clients
[info] - obs-fold sequences are 'fixed' when received by servers
[info] - server responds with 400 Bad Request if non-ascii character is present in uri
[info] - server responds 500 if an invalid header is being served
[info] - client respects MaxHeaderSize in response
[info] - non-streaming clients can decompress content
[info] - non-streaming clients can disable decompression
[info] - removing the compressor works
[info] - request remote address
[info] - out of order client requests are OK
[info] - http/1.1 client, http/2 server client handles cut connection properly
[info] - Does not retry service acquisition many times when not using FactoryToService
[info] - http/1.1 client, http/2 server: Graceful shutdown & draining
[info] - http/1.1 client, http/2 server: methodBuilder timeouts from Stack
[info] - http/1.1 client, http/2 server: methodBuilder timeouts from ClientBuilder
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header field !!! IGNORED !!!
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header fieldwhen non-empty body is returned !!! IGNORED !!!
[info] - response with status code 100 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 102 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 204 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 304 must not have a message body *BUT* Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - http/1.1 client, http/2 server: HTTP/1.0
[info] - http/1.1 client, http/2 server: initial request line too long
[info] - http/1.1 client, http/2 server (non-streaming): Request with 'Connection: close'
[info] - http/1.1 client, http/2 server (non-streaming): Response with 'Connection: close'
[info] - http/1.1 client, http/2 server (non-streaming): : closes the connection on request header fields too large
[info] - http/1.1 client, http/2 server (non-streaming): HTTP/1.0
[info] - http/1.1 client, http/2 server (streaming): Request with 'Connection: close'
[info] - http/1.1 client, http/2 server (streaming): Response with 'Connection: close'
[info] - http/1.1 client, http/2 server (streaming): : closes the connection on request header fields too large
[info] - http/1.1 client, http/2 server (streaming): HTTP/1.0
[info] - non-streaming server handles expect continue header when autoContinue is disabled
[info] - non-streaming server handles expect continue header when autoContinue is enabled
[info] - streaming server handles expect continue header when autoContinue is disabled
[info] - streaming server handles expect continue header when autoContinue is enabled
[info] - mishandled HEAD request doesn't foul the connection
[info] - mishandled HEAD request with chunked response doesn't foul the connection
[info] - streaming server does not stream sufficiently small fixed length messages
[info] - streaming server won't accept fixed length messages that exceed maxRequestSize
[info] - http/1.1 client, http/2 server: Can initialize multiple pipelines
[info] - http/1.1 client, http/2 server(streaming): Can initialize multiple pipelines
[info] - Upgrade counters are not incremented
Jul 30, 2019 5:18:21 PM io.netty.handler.codec.http2.Http2FrameCodec onHttp2UnknownStreamError
WARNING: Stream exception thrown for unkown stream 3.
io.netty.handler.codec.http2.Http2Exception$HeaderListSizeException: Header size exceeded max allowed size (8192)
	at io.netty.handler.codec.http2.Http2Exception.headerListSizeError(Http2Exception.java:171)
	at io.netty.handler.codec.http2.Http2CodecUtil.headerListSizeExceeded(Http2CodecUtil.java:228)
	at io.netty.handler.codec.http2.HpackDecoder$Http2HeadersSink.finish(HpackDecoder.java:541)
	at io.netty.handler.codec.http2.HpackDecoder.decode(HpackDecoder.java:128)
	at io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder.decodeHeaders(DefaultHttp2HeadersDecoder.java:127)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersBlockBuilder.headers(DefaultHttp2FrameReader.java:743)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:21 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:40698, downstream address: n/a, label: server).
java.lang.IllegalArgumentException: bad news
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:217)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:216)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.ThreadUsage$ThreadUsageFilter.apply(ThreadUsage.scala:130)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.DtabStatsFilter.apply(DtabStatsFilter.scala:37)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.StatsFilter.apply(StatsFilter.scala:258)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ServerStatsFilter.apply(ServerStatsFilter.scala:55)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:131)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:92)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelRequestStatsHandler.channelRead(ChannelRequestStatsHandler.scala:48)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:607)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:254)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:106)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:21 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:32835, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply$mcV$sp(AbstractEndToEndTest.scala:474)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:21 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:38275, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply$mcV$sp(AbstractEndToEndTest.scala:515)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:25 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0x0c86ce3f, L:/127.0.0.1:33110 - R:localhost/127.0.0.1:34184] ignoring DATA frame for stream RST_STREAM sent.
Jul 30, 2019 5:18:25 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0x0c86ce3f, L:/127.0.0.1:33110 - R:localhost/127.0.0.1:34184] ignoring DATA frame for stream RST_STREAM sent.
Jul 30, 2019 5:18:25 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0x0c86ce3f, L:/127.0.0.1:33110 - R:localhost/127.0.0.1:34184] ignoring DATA frame for stream RST_STREAM sent.
Jul 30, 2019 5:18:25 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0x0c86ce3f, L:/127.0.0.1:33110 - R:localhost/127.0.0.1:34184] ignoring DATA frame for stream RST_STREAM sent.
Jul 30, 2019 5:18:25 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0x0c86ce3f, L:/127.0.0.1:33110 - R:localhost/127.0.0.1:34184] ignoring DATA frame for stream RST_STREAM sent.
Jul 30, 2019 5:18:26 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:48918, downstream address: n/a, label: ).
com.twitter.finagle.http.Rfc7230HeaderValidation$ValueValidationException: Header 'foo': value contains a prohibited character '0xc': 
	at com.twitter.finagle.http.Rfc7230HeaderValidation$.validateValue(Rfc7230HeaderValidation.scala:140)
	at com.twitter.finagle.http.DefaultHeaderMap$.com$twitter$finagle$http$DefaultHeaderMap$$foldReplacingValidateValue(DefaultHeaderMap.scala:103)
	at com.twitter.finagle.http.DefaultHeaderMap.add(DefaultHeaderMap.scala:33)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1340)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1337)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:607)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:254)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:106)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:26 PM com.twitter.finagle.http2.transport.H2Filter close
INFO: Closing h2 session with deadline 2019-07-30 17:18:31 +0000
Jul 30, 2019 5:18:26 PM com.twitter.finagle.http2.transport.H2Filter$$anon$3 operationComplete
INFO: Channel closed, session terminated.
Jul 30, 2019 5:18:26 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:18:26 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:18:26 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:18:26 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 304 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:18:26 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:18:26 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:18:26 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:18:26 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:18:27 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:18:27 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:18:27 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 304 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:18:27 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:35270, downstream address: n/a, label: ).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$initService$1.apply(AbstractEndToEndTest.scala:68)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$initService$1.apply(AbstractEndToEndTest.scala:67)
	at com.twitter.finagle.Service$$anon$2.apply(Service.scala:29)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:607)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:254)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:106)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:27 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:46392, downstream address: n/a, label: ).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$initService$1.apply(AbstractEndToEndTest.scala:68)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$initService$1.apply(AbstractEndToEndTest.scala:67)
	at com.twitter.finagle.Service$$anon$2.apply(Service.scala:29)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:607)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:254)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:106)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

[info] Http2PriorKnowledgeTest:
[info] - prior knowledge http/2: request header fields too large
[info] - prior knowledge http/2: with default client-side ResponseClassifier
[info] - prior knowledge http/2: with default server-side ResponseClassifier
[info] - prior knowledge http/2: unhandled exceptions are converted into 500s
[info] - prior knowledge http/2: client stack observes max header size
[info] - prior knowledge http/2: client sets content length
[info] - prior knowledge http/2: echo
[info] - prior knowledge http/2: dtab
[info] - prior knowledge http/2: (no) dtab
[info] - prior knowledge http/2: context
[info] - prior knowledge http/2: measure payload size
[info] - prior knowledge http/2: interrupt requests
[info] - prior knowledge http/2: interrupting requests doesn't interfere with others
[info] - prior knowledge http/2: aggregates trailers when streams are aggregated
[info] - prior knowledge http/2: trace
[info] - prior knowledge http/2 (streaming): stream
[info] - prior knowledge http/2 (streaming): stream via ResponseProxy filter
[info] - prior knowledge http/2 (streaming): aggregates responses that must not have a body
[info] - prior knowledge http/2 (streaming): stream via ResponseProxy class
[info] - prior knowledge http/2 (streaming): streaming clients can decompress content
[info] - prior knowledge http/2 (streaming): symmetric reader and getContent
[info] - prior knowledge http/2 (streaming): transport closure propagates to request stream reader
[info] - prior knowledge http/2 (streaming): transport closure propagates to request stream producer
[info] - prior knowledge http/2 (streaming): request discard terminates remote stream producer
[info] - prior knowledge http/2 (streaming): client discard terminates stream and frees up the connection
[info] - prior knowledge http/2 (streaming): two fixed-length requests
[info] - prior knowledge http/2 (streaming): measure chunk payload size
[info] - Responses with Content-length header larger than 8 KB are not aggregated
[info] - Responses with Content-length header equal to 8 KB are aggregated
[info] - Responses with Content-length header smaller than 8 KB are aggregated
[info] - prior knowledge http/2: streaming requests can't be retried
[info] - prior knowledge http/2: streaming session bi-directionally transmit trailing headers
[info] - prior knowledge http/2: invalid trailer causes server to hang up
[info] - prior knowledge http/2: PooledByteBufAllocator maxOrder is 7 for servers
[info] - prior knowledge http/2: PooledByteBufAllocator maxOrder is 7 for clients
[info] - prior knowledge http/2: nonretryable isn't retried
[info] - Client-side ResponseClassifier based on status code
[info] - server-side ResponseClassifier based on status code
[info] - codec should require a message size be less than 2Gb
[info] - client respects MaxResponseSize
[info] - server rejects illegal headers with a 400
[info] - server rejects illegal trailers with a 400
[info] - client rejects illegal headers with an exception
[info] - client rejects illegal trailer with an exception
[info] - obs-fold sequences are 'fixed' when received by clients
[info] - obs-fold sequences are 'fixed' when received by servers
[info] - server responds with 400 Bad Request if non-ascii character is present in uri !!! IGNORED !!!
[info] - server responds 500 if an invalid header is being served
[info] - client respects MaxHeaderSize in response !!! IGNORED !!!
[info] - non-streaming clients can decompress content
[info] - non-streaming clients can disable decompression
[info] - removing the compressor works
[info] - request remote address
[info] - out of order client requests are OK
[info] - prior knowledge http/2 client handles cut connection properly
[info] - Does not retry service acquisition many times when not using FactoryToService
[info] - prior knowledge http/2: Graceful shutdown & draining
[info] - prior knowledge http/2: methodBuilder timeouts from Stack
[info] - prior knowledge http/2: methodBuilder timeouts from ClientBuilder
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header field
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header fieldwhen non-empty body is returned
[info] - response with status code 100 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 102 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 204 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 304 must not have a message body *BUT* Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - client closes properly when closed
[info] - client doesn't honor the Netty stream dependency extension header
[info] - A prior knowledge connection counts as one upgrade for stats
[info] HttpResponseClassifierTest:
[info] - ServerErrorsAsFailures
[info] - ServerErrorsAsFailures for nacks
[info] - apply
[info] StreamingStatsFilterTest:
[info] - streaming failures in request are populated correctly
[info] - streaming failures in response are populated correctly
[info] - opened stream count and finished stream count are populated correctly
[info] - pending stream gauges are populated correctly
[info] - stream duration stats are populated correctly
[info] CorsTest:
[info] - Cors.HttpFilter handles preflight requests
[info] - Http.CorsFilter responds to invalid preflight requests without CORS headers
[info] - Http.CorsFilter responds to unacceptable cross-origin requests without CORS headers
[info] - Http.CorsFilter handles simple requests
[info] - Http.CorsFilter does not add response headers to simple requests if request headers aren't present
[debug] Test run started
[debug] Test com.twitter.finagle.http.javaapi.DtabFilterTest.tesDtab started
[debug] Test com.twitter.finagle.http.javaapi.DtabFilterTest.tesDtab finished, took 0.001 sec
[debug] Test run finished: 0 failed, 0 ignored, 1 total, 0.001s
[info] TlsFilterTest:
[info] - filter
[info] - module
Jul 30, 2019 5:18:56 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:45002, downstream address: n/a, label: server).
org.scalatest.exceptions.TestFailedException: "[]" did not equal "[hello]"
	at org.scalatest.Assertions$class.newAssertionFailedException(Assertions.scala:528)
	at org.scalatest.FunSuite.newAssertionFailedException(FunSuite.scala:1560)
	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:501)
	at com.twitter.finagle.http.AbstractStreamingTest$$anonfun$11$$anonfun$27.apply(AbstractStreamingTest.scala:368)
	at com.twitter.finagle.http.AbstractStreamingTest$$anonfun$11$$anonfun$27.apply(AbstractStreamingTest.scala:367)
	at com.twitter.finagle.Service$$anon$2.apply(Service.scala:29)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter$$anonfun$apply$1.apply(HttpNackFilter.scala:159)
	at com.twitter.finagle.http.filter.HttpNackFilter$$anonfun$apply$1.apply(HttpNackFilter.scala:159)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:158)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:36)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.HttpServerExpectContinueHandler.channelRead(HttpServerExpectContinueHandler.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.http.handler.PayloadSizeHandler.channelRead(PayloadSizeHandler.scala:59)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:56 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:46450, label: client).
java.lang.Exception
	at com.twitter.finagle.http.AbstractStreamingTest$$anonfun$30.apply(AbstractStreamingTest.scala:424)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at org.scalatest.FunSuite.run(FunSuite.scala:1560)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

[info] Netty4StreamingTest:
[info] - client: request stream fails on write
[info] - client: response stream fails on read
[info] - client: server disconnect on pending response should fail request
[info] - client: client closes transport after server disconnects
[info] - client: fail request writer
[info] - client: discard respond reader
[info] - server: request stream fails read
[info] - server: response stream fails write
[info] - server: fail response writer
[info] - server: fail request reader
[info] - server: empty buf doesn't close response stream
[info] - client: empty buf doesn't close request stream
[info] - end-to-end: server gets content for chunked request made to client with content length
[info] - end-to-end: client may process multiple streaming requests simultaneously
[info] - server: inbound stream (reader) propagates closures initiated remotely
[info] - server: outbound stream (writer) propagates closures initiated remotely
[info] - client: inbound stream (reader) propagates closures initiated remotely
[info] - client: outbound stream (writer) propagates closures initiated remotely
[info] HttpMuxerTest:
[info] - handles params properly
[info] - normalize basics
[info] - normalize duplicate slashes
[info] - prefix matching is handled correctly
[info] - exact matching is handled correctly
[info] - special cases "" and "/" are handled correctly
[info] - Registering a service with an existing name will overwrite the old
[info] - RouteIndex only allows GET and POST
[info] - Closing the HttpMuxer closes the individual handlers
Jul 30, 2019 5:18:56 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:37960, downstream address: n/a, label: server).
java.lang.IllegalArgumentException: bad news
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:217)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:216)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.ThreadUsage$ThreadUsageFilter.apply(ThreadUsage.scala:130)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.DtabStatsFilter.apply(DtabStatsFilter.scala:37)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.StatsFilter.apply(StatsFilter.scala:258)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ServerStatsFilter.apply(ServerStatsFilter.scala:55)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:131)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:92)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelRequestStatsHandler.channelRead(ChannelRequestStatsHandler.scala:48)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:56 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:40978, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply$mcV$sp(AbstractEndToEndTest.scala:474)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:18:56 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:40764, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply$mcV$sp(AbstractEndToEndTest.scala:515)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:19:30 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:33692, label: client).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: localhost/127.0.0.1:33692, Downstream label: client, Trace Id: 20bd887e98c73d87.20bd887e98c73d87<:20bd887e98c73d87

Jul 30, 2019 5:19:30 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:44057, label: http).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: /0.0.0.0:44057, Downstream label: http, Trace Id: 064ff3c931e082ab.064ff3c931e082ab<:064ff3c931e082ab

Jul 30, 2019 5:19:30 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:43136, downstream address: n/a, label: ).
com.twitter.finagle.http.Rfc7230HeaderValidation$ValueValidationException: Header 'foo': value contains a prohibited character '0xc': 
	at com.twitter.finagle.http.Rfc7230HeaderValidation$.validateValue(Rfc7230HeaderValidation.scala:140)
	at com.twitter.finagle.http.DefaultHeaderMap$.com$twitter$finagle$http$DefaultHeaderMap$$foldReplacingValidateValue(DefaultHeaderMap.scala:103)
	at com.twitter.finagle.http.DefaultHeaderMap.add(DefaultHeaderMap.scala:33)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1340)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1337)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:19:31 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleHeadResponse
INFO: Received response to HEAD request (Request("HEAD /", from /127.0.0.1:39638)) that contained a static body of length 10. Discarding body. If this is desired behavior, consider adding HeadFilter to your service
[info] ClientFailHttp2UpgradeTest:
[info] - http/2 client, http/1.1 server: request header fields too large
[info] - http/2 client, http/1.1 server: with default client-side ResponseClassifier
[info] - http/2 client, http/1.1 server: with default server-side ResponseClassifier
[info] - http/2 client, http/1.1 server: unhandled exceptions are converted into 500s
[info] - http/2 client, http/1.1 server: client stack observes max header size
[info] - http/2 client, http/1.1 server: client sets content length
[info] - http/2 client, http/1.1 server: echo
[info] - http/2 client, http/1.1 server: dtab
[info] - http/2 client, http/1.1 server: (no) dtab
[info] - http/2 client, http/1.1 server: context
[info] - http/2 client, http/1.1 server: measure payload size
[info] - http/2 client, http/1.1 server: interrupt requests
[info] - http/2 client, http/1.1 server: interrupting requests doesn't interfere with others
[info] - http/2 client, http/1.1 server: aggregates trailers when streams are aggregated *** FAILED ***
[info]   com.twitter.util.TimeoutException: 30.seconds
[info]   at com.twitter.util.Promise.ready(Promise.scala:656)
[info]   at com.twitter.util.Promise.result(Promise.scala:665)
[info]   at com.twitter.util.Await$$anonfun$result$1.apply(Awaitable.scala:152)
[info]   at com.twitter.concurrent.LocalScheduler$Activation.blocking(Scheduler.scala:189)
[info]   at com.twitter.concurrent.LocalScheduler.blocking(Scheduler.scala:256)
[info]   at com.twitter.concurrent.Scheduler$.blocking(Scheduler.scala:85)
[info]   at com.twitter.util.Await$.result(Awaitable.scala:152)
[info]   at com.twitter.finagle.http.AbstractEndToEndTest.await(AbstractEndToEndTest.scala:58)
[info]   at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$11.apply$mcV$sp(AbstractEndToEndTest.scala:554)
[info]   at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$11.apply(AbstractEndToEndTest.scala:531)
[info]   ...
[info] - http/2 client, http/1.1 server: trace
[info] - http/2 client, http/1.1 server (streaming): stream
[info] - http/2 client, http/1.1 server (streaming): stream via ResponseProxy filter
[info] - http/2 client, http/1.1 server (streaming): aggregates responses that must not have a body
[info] - http/2 client, http/1.1 server (streaming): stream via ResponseProxy class
[info] - http/2 client, http/1.1 server (streaming): streaming clients can decompress content
[info] - http/2 client, http/1.1 server (streaming): symmetric reader and getContent
[info] - http/2 client, http/1.1 server (streaming): transport closure propagates to request stream reader
[info] - http/2 client, http/1.1 server (streaming): transport closure propagates to request stream producer
[info] - http/2 client, http/1.1 server (streaming): request discard terminates remote stream producer
[info] - http/2 client, http/1.1 server (streaming): client discard terminates stream and frees up the connection
[info] - http/2 client, http/1.1 server (streaming): two fixed-length requests
[info] - http/2 client, http/1.1 server (streaming): measure chunk payload size
[info] - Responses with Content-length header larger than 8 KB are not aggregated
[info] - Responses with Content-length header equal to 8 KB are aggregated
[info] - Responses with Content-length header smaller than 8 KB are aggregated
[info] - http/2 client, http/1.1 server: streaming requests can't be retried
[info] - http/2 client, http/1.1 server: streaming session bi-directionally transmit trailing headers
[info] - http/2 client, http/1.1 server: invalid trailer causes server to hang up
[info] - http/2 client, http/1.1 server: PooledByteBufAllocator maxOrder is 7 for servers
[info] - http/2 client, http/1.1 server: PooledByteBufAllocator maxOrder is 7 for clients
[info] - http/2 client, http/1.1 server: nonretryable isn't retried
[info] - Client-side ResponseClassifier based on status code
[info] - server-side ResponseClassifier based on status code
[info] - codec should require a message size be less than 2Gb
[info] - client respects MaxResponseSize
[info] - server rejects illegal headers with a 400
[info] - server rejects illegal trailers with a 400
[info] - client rejects illegal headers with an exception
[info] - client rejects illegal trailer with an exception
[info] - obs-fold sequences are 'fixed' when received by clients
[info] - obs-fold sequences are 'fixed' when received by servers
[info] - server responds with 400 Bad Request if non-ascii character is present in uri
[info] - server responds 500 if an invalid header is being served
[info] - client respects MaxHeaderSize in response
[info] - non-streaming clients can decompress content
[info] - non-streaming clients can disable decompression
[info] - removing the compressor works
[info] - request remote address
[info] - out of order client requests are OK
[info] - http/2 client, http/1.1 server client handles cut connection properly
[info] - Does not retry service acquisition many times when not using FactoryToService
[info] - http/2 client, http/1.1 server: Graceful shutdown & draining
[info] - http/2 client, http/1.1 server: methodBuilder timeouts from Stack
[info] - http/2 client, http/1.1 server: methodBuilder timeouts from ClientBuilder
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header field !!! IGNORED !!!
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header fieldwhen non-empty body is returned !!! IGNORED !!!
[info] - response with status code 100 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 102 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 204 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 304 must not have a message body *BUT* Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - http/2 client, http/1.1 server: HTTP/1.0
[info] - http/2 client, http/1.1 server: initial request line too long
[info] - http/2 client, http/1.1 server (non-streaming): Request with 'Connection: close'
[info] - http/2 client, http/1.1 server (non-streaming): Response with 'Connection: close'
[info] - http/2 client, http/1.1 server (non-streaming): : closes the connection on request header fields too large
[info] - http/2 client, http/1.1 server (non-streaming): HTTP/1.0
[info] - http/2 client, http/1.1 server (streaming): Request with 'Connection: close'
[info] - http/2 client, http/1.1 server (streaming): Response with 'Connection: close'
[info] - http/2 client, http/1.1 server (streaming): : closes the connection on request header fields too large
[info] - http/2 client, http/1.1 server (streaming): HTTP/1.0
[info] - non-streaming server handles expect continue header when autoContinue is disabled
[info] - non-streaming server handles expect continue header when autoContinue is enabled
[info] - streaming server handles expect continue header when autoContinue is disabled
[info] - streaming server handles expect continue header when autoContinue is enabled
[info] - mishandled HEAD request doesn't foul the connection
[info] - mishandled HEAD request with chunked response doesn't foul the connection
[info] - streaming server does not stream sufficiently small fixed length messages
[info] - streaming server won't accept fixed length messages that exceed maxRequestSize
[info] - http/2 client, http/1.1 server: Can initialize multiple pipelines
[info] - http/2 client, http/1.1 server(streaming): Can initialize multiple pipelines
[info] - Upgrade counters are not incremented
[info] ServerSideDecodingTest:
[info] - decode client-side encoded entity bodies
Jul 30, 2019 5:19:32 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:45274, downstream address: n/a, label: server).
java.lang.IllegalArgumentException: bad news
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:217)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:216)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.ThreadUsage$ThreadUsageFilter.apply(ThreadUsage.scala:130)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.DtabStatsFilter.apply(DtabStatsFilter.scala:37)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.StatsFilter.apply(StatsFilter.scala:258)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ServerStatsFilter.apply(ServerStatsFilter.scala:55)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:131)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:92)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelRequestStatsHandler.channelRead(ChannelRequestStatsHandler.scala:48)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:19:32 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:44194, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply$mcV$sp(AbstractEndToEndTest.scala:474)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:19:32 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:38746, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply$mcV$sp(AbstractEndToEndTest.scala:515)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:19:36 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0x53004430, L:/127.0.0.1:58208 - R:localhost/127.0.0.1:44914] ignoring DATA frame for stream RST_STREAM sent.
Jul 30, 2019 5:19:36 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0x53004430, L:/127.0.0.1:58208 - R:localhost/127.0.0.1:44914] ignoring DATA frame for stream RST_STREAM sent.
Jul 30, 2019 5:19:36 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0x53004430, L:/127.0.0.1:58208 - R:localhost/127.0.0.1:44914] ignoring DATA frame for stream RST_STREAM sent.
Jul 30, 2019 5:19:36 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0x53004430, L:/127.0.0.1:58208 - R:localhost/127.0.0.1:44914] ignoring DATA frame for stream RST_STREAM sent.
Jul 30, 2019 5:19:36 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0x53004430, L:/127.0.0.1:58208 - R:localhost/127.0.0.1:44914] ignoring DATA frame for stream RST_STREAM sent.
Jul 30, 2019 5:19:37 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:39800, downstream address: n/a, label: ).
com.twitter.finagle.http.Rfc7230HeaderValidation$ValueValidationException: Header 'foo': value contains a prohibited character '0xc': 
	at com.twitter.finagle.http.Rfc7230HeaderValidation$.validateValue(Rfc7230HeaderValidation.scala:140)
	at com.twitter.finagle.http.DefaultHeaderMap$.com$twitter$finagle$http$DefaultHeaderMap$$foldReplacingValidateValue(DefaultHeaderMap.scala:103)
	at com.twitter.finagle.http.DefaultHeaderMap.add(DefaultHeaderMap.scala:33)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1340)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1337)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.InboundHttpToHttp2Adapter.handle(InboundHttpToHttp2Adapter.java:67)
	at io.netty.handler.codec.http2.Http2FrameCodec.userEventTriggered(Http2FrameCodec.java:255)
	at io.netty.channel.AbstractChannelHandlerContext.invokeUserEventTriggered(AbstractChannelHandlerContext.java:341)
	at io.netty.channel.AbstractChannelHandlerContext.invokeUserEventTriggered(AbstractChannelHandlerContext.java:327)
	at io.netty.channel.AbstractChannelHandlerContext.fireUserEventTriggered(AbstractChannelHandlerContext.java:319)
	at io.netty.handler.codec.http.HttpServerUpgradeHandler.upgrade(HttpServerUpgradeHandler.java:339)
	at io.netty.handler.codec.http.HttpServerUpgradeHandler.decode(HttpServerUpgradeHandler.java:239)
	at io.netty.handler.codec.http.HttpServerUpgradeHandler.decode(HttpServerUpgradeHandler.java:40)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:88)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:71)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:19:37 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:19:37 PM com.twitter.finagle.http2.transport.H2Filter close
INFO: Closing h2 session with deadline 2019-07-30 17:19:42 +0000
Jul 30, 2019 5:19:37 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:19:37 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:19:37 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:19:37 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:19:37 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 304 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:19:37 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:19:37 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:19:37 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:19:37 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:19:38 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:19:38 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:19:38 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 304 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:19:38 PM com.twitter.finagle.http2.transport.H2Filter close
INFO: Closing h2 session with deadline 2019-07-30 17:29:38 +0000
Jul 30, 2019 5:19:38 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:19:38 PM io.netty.handler.codec.http2.Http2FrameCodec onHttp2UnknownStreamError
WARNING: Stream exception thrown for unkown stream 3.
io.netty.handler.codec.http2.Http2Exception$StreamException: Invalid HTTP/2 pseudo-header ':invalid' encountered.
	at io.netty.handler.codec.http2.Http2Exception.streamError(Http2Exception.java:129)
	at io.netty.handler.codec.http2.HpackDecoder.validate(HpackDecoder.java:388)
	at io.netty.handler.codec.http2.HpackDecoder.access$000(HpackDecoder.java:54)
	at io.netty.handler.codec.http2.HpackDecoder$Http2HeadersSink.appendToHeaderList(HpackDecoder.java:559)
	at io.netty.handler.codec.http2.HpackDecoder.insertHeader(HpackDecoder.java:426)
	at io.netty.handler.codec.http2.HpackDecoder.decode(HpackDecoder.java:287)
	at io.netty.handler.codec.http2.HpackDecoder.decode(HpackDecoder.java:124)
	at io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder.decodeHeaders(DefaultHttp2HeadersDecoder.java:127)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersBlockBuilder.headers(DefaultHttp2FrameReader.java:743)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

[info] MultiplexedH2CEndToEndTest:
[info] - h2c http/2-multiplex: request header fields too large
[info] - h2c http/2-multiplex: with default client-side ResponseClassifier
[info] - h2c http/2-multiplex: with default server-side ResponseClassifier
[info] - h2c http/2-multiplex: unhandled exceptions are converted into 500s
[info] - h2c http/2-multiplex: client stack observes max header size
[info] - h2c http/2-multiplex: client sets content length
[info] - h2c http/2-multiplex: echo
[info] - h2c http/2-multiplex: dtab
[info] - h2c http/2-multiplex: (no) dtab
[info] - h2c http/2-multiplex: context
[info] - h2c http/2-multiplex: measure payload size
[info] - h2c http/2-multiplex: interrupt requests
[info] - h2c http/2-multiplex: interrupting requests doesn't interfere with others
[info] - h2c http/2-multiplex: aggregates trailers when streams are aggregated
[info] - h2c http/2-multiplex: trace
[info] - h2c http/2-multiplex (streaming): stream
[info] - h2c http/2-multiplex (streaming): stream via ResponseProxy filter
[info] - h2c http/2-multiplex (streaming): aggregates responses that must not have a body
[info] - h2c http/2-multiplex (streaming): stream via ResponseProxy class
[info] - h2c http/2-multiplex (streaming): streaming clients can decompress content
[info] - h2c http/2-multiplex (streaming): symmetric reader and getContent
[info] - h2c http/2-multiplex (streaming): transport closure propagates to request stream reader
[info] - h2c http/2-multiplex (streaming): transport closure propagates to request stream producer
[info] - h2c http/2-multiplex (streaming): request discard terminates remote stream producer
[info] - h2c http/2-multiplex (streaming): client discard terminates stream and frees up the connection
[info] - h2c http/2-multiplex (streaming): two fixed-length requests
[info] - h2c http/2-multiplex (streaming): measure chunk payload size
[info] - Responses with Content-length header larger than 8 KB are not aggregated
[info] - Responses with Content-length header equal to 8 KB are aggregated
[info] - Responses with Content-length header smaller than 8 KB are aggregated
[info] - h2c http/2-multiplex: streaming requests can't be retried
[info] - h2c http/2-multiplex: streaming session bi-directionally transmit trailing headers
[info] - h2c http/2-multiplex: invalid trailer causes server to hang up
[info] - h2c http/2-multiplex: PooledByteBufAllocator maxOrder is 7 for servers
[info] - h2c http/2-multiplex: PooledByteBufAllocator maxOrder is 7 for clients
[info] - h2c http/2-multiplex: nonretryable isn't retried
[info] - Client-side ResponseClassifier based on status code
[info] - server-side ResponseClassifier based on status code
[info] - codec should require a message size be less than 2Gb
[info] - client respects MaxResponseSize
[info] - server rejects illegal headers with a 400
[info] - server rejects illegal trailers with a 400
[info] - client rejects illegal headers with an exception
[info] - client rejects illegal trailer with an exception
[info] - obs-fold sequences are 'fixed' when received by clients
[info] - obs-fold sequences are 'fixed' when received by servers
[info] - server responds with 400 Bad Request if non-ascii character is present in uri
[info] - server responds 500 if an invalid header is being served
[info] - client respects MaxHeaderSize in response !!! IGNORED !!!
[info] - non-streaming clients can decompress content
[info] - non-streaming clients can disable decompression
[info] - removing the compressor works
[info] - request remote address
[info] - out of order client requests are OK
[info] - h2c http/2-multiplex client handles cut connection properly
[info] - Does not retry service acquisition many times when not using FactoryToService
[info] - h2c http/2-multiplex: Graceful shutdown & draining
[info] - h2c http/2-multiplex: methodBuilder timeouts from Stack
[info] - h2c http/2-multiplex: methodBuilder timeouts from ClientBuilder
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header field
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header fieldwhen non-empty body is returned
[info] - response with status code 100 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 102 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 204 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 304 must not have a message body *BUT* Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - client closes properly when closed
[info] - client doesn't honor the Netty stream dependency extension header
[info] - Upgrade stats are properly recorded
[info] - Upgrade ignored
[info] - Server sets & enforces MaxHeaderSize
[info] - H1 related connection headers are stripped
[info] - The TE header is allowed if its value is trailers
[info] - Upgrades to HTTP/2 only if both have the toggle on, and it's H2C, not H2
[info] - Configuration params take precedence over the toggle for the client
[info] - Configuration params take precedence over the toggle for the server
[info] - We delete the HTTP2-SETTINGS header properly
[info] - draining servers process pending requests
[info] - illegal headers produce a non-zero error code on the client
[info] SpnegoAuthenticatorTest:
[info] - no header
[info] - bad header
[info] - malformed token
[info] - success
[info] - isLoginValid returns correct result
Jul 30, 2019 5:19:39 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:40390, downstream address: n/a, label: server).
java.lang.IllegalArgumentException: bad news
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:217)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:216)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.ThreadUsage$ThreadUsageFilter.apply(ThreadUsage.scala:130)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.DtabStatsFilter.apply(DtabStatsFilter.scala:37)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.StatsFilter.apply(StatsFilter.scala:258)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ServerStatsFilter.apply(ServerStatsFilter.scala:55)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:131)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:92)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelRequestStatsHandler.channelRead(ChannelRequestStatsHandler.scala:48)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:19:39 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:34325, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply$mcV$sp(AbstractEndToEndTest.scala:474)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:19:39 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:36850, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply$mcV$sp(AbstractEndToEndTest.scala:515)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:19:42 PM com.twitter.finagle.http2.transport.H2Filter$$anonfun$1$$anon$4 run
INFO: Graceful draining period lapsed. Sending final GOAWAY and closing the connection.
Jul 30, 2019 5:19:43 PM com.twitter.finagle.http2.transport.StreamTransportFactory$StreamTransport com$twitter$finagle$http2$transport$StreamTransportFactory$StreamTransport$$handleBadState
ERROR: Stream 3 bad state: Write to dead stream: DefaultHttpContent(data: ReadOnlyByteBuf(ridx: 0, widx: 1, cap: 1/1, unwrapped: UnpooledHeapByteBuf(ridx: 0, widx: 1, cap: 1/1)), decoderResult: success)
Jul 30, 2019 5:19:43 PM com.twitter.finagle.http2.transport.StreamTransportFactory$StreamTransport com$twitter$finagle$http2$transport$StreamTransportFactory$StreamTransport$$handleBadState
ERROR: Stream 3 bad state: Write to dead stream: DefaultHttpContent(data: ReadOnlyByteBuf(ridx: 0, widx: 1, cap: 1/1, unwrapped: UnpooledHeapByteBuf(ridx: 0, widx: 1, cap: 1/1)), decoderResult: success)
Jul 30, 2019 5:19:43 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:37426, label: http).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: /0.0.0.0:37426, Downstream label: http, Trace Id: 63cf07a1b5154987.63cf07a1b5154987<:63cf07a1b5154987

Jul 30, 2019 5:19:43 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:19:43 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:19:43 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:19:43 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:19:43 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:19:43 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:19:43 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:46752, downstream address: n/a, label: ).
com.twitter.finagle.http.Rfc7230HeaderValidation$ValueValidationException: Header 'foo': value contains a prohibited character '0xc': 
	at com.twitter.finagle.http.Rfc7230HeaderValidation$.validateValue(Rfc7230HeaderValidation.scala:140)
	at com.twitter.finagle.http.DefaultHeaderMap$.com$twitter$finagle$http$DefaultHeaderMap$$foldReplacingValidateValue(DefaultHeaderMap.scala:103)
	at com.twitter.finagle.http.DefaultHeaderMap.add(DefaultHeaderMap.scala:33)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1340)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1337)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.InboundHttpToHttp2Adapter.handle(InboundHttpToHttp2Adapter.java:67)
	at io.netty.handler.codec.http2.Http2FrameCodec.userEventTriggered(Http2FrameCodec.java:255)
	at io.netty.channel.AbstractChannelHandlerContext.invokeUserEventTriggered(AbstractChannelHandlerContext.java:341)
	at io.netty.channel.AbstractChannelHandlerContext.invokeUserEventTriggered(AbstractChannelHandlerContext.java:327)
	at io.netty.channel.AbstractChannelHandlerContext.fireUserEventTriggered(AbstractChannelHandlerContext.java:319)
	at io.netty.handler.codec.http.HttpServerUpgradeHandler.upgrade(HttpServerUpgradeHandler.java:339)
	at io.netty.handler.codec.http.HttpServerUpgradeHandler.decode(HttpServerUpgradeHandler.java:239)
	at io.netty.handler.codec.http.HttpServerUpgradeHandler.decode(HttpServerUpgradeHandler.java:40)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:88)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:71)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:19:44 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:19:44 PM com.twitter.finagle.http2.transport.H2Filter close
INFO: Closing h2 session with deadline 2019-07-30 17:19:49 +0000
Jul 30, 2019 5:19:44 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:19:44 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:19:44 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:19:44 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:19:44 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 304 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:19:44 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:19:44 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:19:44 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:19:44 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:19:44 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:19:44 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:19:44 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 304 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:19:45 PM com.twitter.finagle.http2.transport.H2Filter close
INFO: Closing h2 session with deadline 2019-07-30 17:29:45 +0000
Jul 30, 2019 5:19:45 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:19:45 PM io.netty.handler.codec.http2.Http2FrameCodec onHttp2UnknownStreamError
WARNING: Stream exception thrown for unkown stream 3.
io.netty.handler.codec.http2.Http2Exception$StreamException: Invalid HTTP/2 pseudo-header ':invalid' encountered.
	at io.netty.handler.codec.http2.Http2Exception.streamError(Http2Exception.java:129)
	at io.netty.handler.codec.http2.HpackDecoder.validate(HpackDecoder.java:388)
	at io.netty.handler.codec.http2.HpackDecoder.access$000(HpackDecoder.java:54)
	at io.netty.handler.codec.http2.HpackDecoder$Http2HeadersSink.appendToHeaderList(HpackDecoder.java:559)
	at io.netty.handler.codec.http2.HpackDecoder.insertHeader(HpackDecoder.java:426)
	at io.netty.handler.codec.http2.HpackDecoder.decode(HpackDecoder.java:287)
	at io.netty.handler.codec.http2.HpackDecoder.decode(HpackDecoder.java:124)
	at io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder.decodeHeaders(DefaultHttp2HeadersDecoder.java:127)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersBlockBuilder.headers(DefaultHttp2FrameReader.java:743)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

[info] ClassicH2CEndToEndTest:
[info] - h2c http/2: request header fields too large
[info] - h2c http/2: with default client-side ResponseClassifier
[info] - h2c http/2: with default server-side ResponseClassifier
[info] - h2c http/2: unhandled exceptions are converted into 500s
[info] - h2c http/2: client stack observes max header size
[info] - h2c http/2: client sets content length
[info] - h2c http/2: echo
[info] - h2c http/2: dtab
[info] - h2c http/2: (no) dtab
[info] - h2c http/2: context
[info] - h2c http/2: measure payload size
[info] - h2c http/2: interrupt requests
[info] - h2c http/2: interrupting requests doesn't interfere with others
[info] - h2c http/2: aggregates trailers when streams are aggregated
[info] - h2c http/2: trace
[info] - h2c http/2 (streaming): stream
[info] - h2c http/2 (streaming): stream via ResponseProxy filter
[info] - h2c http/2 (streaming): aggregates responses that must not have a body
[info] - h2c http/2 (streaming): stream via ResponseProxy class
[info] - h2c http/2 (streaming): streaming clients can decompress content
[info] - h2c http/2 (streaming): symmetric reader and getContent
[info] - h2c http/2 (streaming): transport closure propagates to request stream reader
[info] - h2c http/2 (streaming): transport closure propagates to request stream producer
[info] - h2c http/2 (streaming): request discard terminates remote stream producer
[info] - h2c http/2 (streaming): client discard terminates stream and frees up the connection
[info] - h2c http/2 (streaming): two fixed-length requests
[info] - h2c http/2 (streaming): measure chunk payload size
[info] - Responses with Content-length header larger than 8 KB are not aggregated
[info] - Responses with Content-length header equal to 8 KB are aggregated
[info] - Responses with Content-length header smaller than 8 KB are aggregated
[info] - h2c http/2: streaming requests can't be retried
[info] - h2c http/2: streaming session bi-directionally transmit trailing headers
[info] - h2c http/2: invalid trailer causes server to hang up
[info] - h2c http/2: PooledByteBufAllocator maxOrder is 7 for servers
[info] - h2c http/2: PooledByteBufAllocator maxOrder is 7 for clients
[info] - h2c http/2: nonretryable isn't retried
[info] - Client-side ResponseClassifier based on status code
[info] - server-side ResponseClassifier based on status code
[info] - codec should require a message size be less than 2Gb
[info] - client respects MaxResponseSize
[info] - server rejects illegal headers with a 400
[info] - server rejects illegal trailers with a 400
[info] - client rejects illegal headers with an exception
[info] - client rejects illegal trailer with an exception
[info] - obs-fold sequences are 'fixed' when received by clients
[info] - obs-fold sequences are 'fixed' when received by servers
[info] - server responds with 400 Bad Request if non-ascii character is present in uri
[info] - server responds 500 if an invalid header is being served
[info] - client respects MaxHeaderSize in response
[info] - non-streaming clients can decompress content
[info] - non-streaming clients can disable decompression
[info] - removing the compressor works
[info] - request remote address
[info] - out of order client requests are OK
[info] - h2c http/2 client handles cut connection properly
[info] - Does not retry service acquisition many times when not using FactoryToService
[info] - h2c http/2: Graceful shutdown & draining
[info] - h2c http/2: methodBuilder timeouts from Stack
[info] - h2c http/2: methodBuilder timeouts from ClientBuilder
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header field
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header fieldwhen non-empty body is returned
[info] - response with status code 100 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 102 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 204 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 304 must not have a message body *BUT* Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - client closes properly when closed
[info] - client doesn't honor the Netty stream dependency extension header
[info] - Upgrade stats are properly recorded
[info] - Upgrade ignored
[info] - Server sets & enforces MaxHeaderSize
[info] - H1 related connection headers are stripped
[info] - The TE header is allowed if its value is trailers
[info] - Upgrades to HTTP/2 only if both have the toggle on, and it's H2C, not H2
[info] - Configuration params take precedence over the toggle for the client
[info] - Configuration params take precedence over the toggle for the server
[info] - We delete the HTTP2-SETTINGS header properly
[info] - draining servers process pending requests
[info] - illegal headers produce a non-zero error code on the client
[info] Netty4MultipartDecoderTest:
[info] - Attribute
[info] - FileUpload (in-memory)
[info] - FileUpload (on-disk)
[info] - Not a multipart request
[debug] Test run started
[debug] Test com.twitter.finagle.http.service.HttpResponseClassifierCompilationTest.testApply started
[debug] Test com.twitter.finagle.http.service.HttpResponseClassifierCompilationTest.testApply finished, took 0.002 sec
[debug] Test com.twitter.finagle.http.service.HttpResponseClassifierCompilationTest.testServerErrorsAsFailures started
[debug] Test com.twitter.finagle.http.service.HttpResponseClassifierCompilationTest.testServerErrorsAsFailures finished, took 0.001 sec
[debug] Test run finished: 0 failed, 0 ignored, 2 total, 0.004s
[info] ClientTest:
[info] AddResponseHeadersFilterTest:
[info] - add headers
[debug] Test run started
[debug] Test com.twitter.finagle.http.service.MethodBuilderCompilationTest.testTimeouts started
[debug] Test com.twitter.finagle.http.service.MethodBuilderCompilationTest.testTimeouts finished, took 0.008 sec
[debug] Test com.twitter.finagle.http.service.MethodBuilderCompilationTest.testRetriesDisabled started
[debug] Test com.twitter.finagle.http.service.MethodBuilderCompilationTest.testRetriesDisabled finished, took 0.005 sec
[debug] Test com.twitter.finagle.http.service.MethodBuilderCompilationTest.testRetries started
[debug] Test com.twitter.finagle.http.service.MethodBuilderCompilationTest.testRetries finished, took 0.005 sec
[debug] Test run finished: 0 failed, 0 ignored, 3 total, 0.029s
Jul 30, 2019 5:19:45 PM com.twitter.finagle.http.filter.ClientNackFilter$$anonfun$com$twitter$finagle$http$filter$ClientNackFilter$$swallowNackBody$1 apply
WARNING: Received an excessively large nack response body.
Jul 30, 2019 5:19:46 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:33301, label: http).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: /0.0.0.0:33301, Downstream label: http, Trace Id: 69c3506de2b4ca2b.69c3506de2b4ca2b<:69c3506de2b4ca2b

[info] ClientNackFilterTest:
[info] - converts nacked requests into failures with the right flags
[info] - Lets a regular request through
[info] - Converts an aggregated Nack response
[info] - swallows the body of a HttpNack if it happens to come as a chunked response
[info] - fails on excessively large nack response
[info] - always marks streaming requests as non-retryable
[info] - adds the magic header to requests that aren't chunked
[info] - multiple nack headers are not added if the request is retried
Jul 30, 2019 5:19:46 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:49432, downstream address: n/a, label: server).
org.scalatest.exceptions.TestFailedException: "[]" did not equal "[hello]"
	at org.scalatest.Assertions$class.newAssertionFailedException(Assertions.scala:528)
	at org.scalatest.FunSuite.newAssertionFailedException(FunSuite.scala:1560)
	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:501)
	at com.twitter.finagle.http.AbstractStreamingTest$$anonfun$11$$anonfun$27.apply(AbstractStreamingTest.scala:368)
	at com.twitter.finagle.http.AbstractStreamingTest$$anonfun$11$$anonfun$27.apply(AbstractStreamingTest.scala:367)
	at com.twitter.finagle.Service$$anon$2.apply(Service.scala:29)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter$$anonfun$apply$1.apply(HttpNackFilter.scala:159)
	at com.twitter.finagle.http.filter.HttpNackFilter$$anonfun$apply$1.apply(HttpNackFilter.scala:159)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:158)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:36)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.HttpServerExpectContinueHandler.channelRead(HttpServerExpectContinueHandler.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.http.handler.PayloadSizeHandler.channelRead(PayloadSizeHandler.scala:59)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.Http2CleartextServerInitializer$MaybeUpgradeHandler.channelRead(Http2CleartextServerInitializer.scala:105)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:71)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:19:46 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:38134, label: client).
java.lang.Exception
	at com.twitter.finagle.http.AbstractStreamingTest$$anonfun$30.apply(AbstractStreamingTest.scala:424)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at org.scalatest.FunSuite.run(FunSuite.scala:1560)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

[info] Http2StreamingTest:
[info] - client: request stream fails on write
[info] - client: response stream fails on read
[info] - client: server disconnect on pending response should fail request
[info] - client: client closes transport after server disconnects
[info] - client: fail request writer
[info] - client: discard respond reader
[info] - server: request stream fails read
[info] - server: response stream fails write
[info] - server: fail response writer
[info] - server: fail request reader
[info] - server: empty buf doesn't close response stream
[info] - client: empty buf doesn't close request stream
[info] - end-to-end: server gets content for chunked request made to client with content length
[info] - end-to-end: client may process multiple streaming requests simultaneously
[info] - server: inbound stream (reader) propagates closures initiated remotely
[info] - server: outbound stream (writer) propagates closures initiated remotely
[info] - client: inbound stream (reader) propagates closures initiated remotely
[info] - client: outbound stream (writer) propagates closures initiated remotely
[info] MultiplexedHttp2AlpnTest:
[info] - alpn http/2-multiplex: request header fields too large !!! IGNORED !!!
[info] - alpn http/2-multiplex: with default client-side ResponseClassifier !!! IGNORED !!!
[info] - alpn http/2-multiplex: with default server-side ResponseClassifier !!! IGNORED !!!
[info] - alpn http/2-multiplex: unhandled exceptions are converted into 500s !!! IGNORED !!!
[info] - alpn http/2-multiplex: client stack observes max header size !!! IGNORED !!!
[info] - alpn http/2-multiplex: client sets content length !!! IGNORED !!!
[info] - alpn http/2-multiplex: echo !!! IGNORED !!!
[info] - alpn http/2-multiplex: dtab !!! IGNORED !!!
[info] - alpn http/2-multiplex: (no) dtab !!! IGNORED !!!
[info] - alpn http/2-multiplex: context !!! IGNORED !!!
[info] - alpn http/2-multiplex: measure payload size !!! IGNORED !!!
[info] - alpn http/2-multiplex: interrupt requests !!! IGNORED !!!
[info] - alpn http/2-multiplex: interrupting requests doesn't interfere with others !!! IGNORED !!!
[info] - alpn http/2-multiplex: aggregates trailers when streams are aggregated !!! IGNORED !!!
[info] - alpn http/2-multiplex: trace !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): stream !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): stream via ResponseProxy filter !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): aggregates responses that must not have a body !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): stream via ResponseProxy class !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): streaming clients can decompress content !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): symmetric reader and getContent !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): transport closure propagates to request stream reader !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): transport closure propagates to request stream producer !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): request discard terminates remote stream producer !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): client discard terminates stream and frees up the connection !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): two fixed-length requests !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): measure chunk payload size !!! IGNORED !!!
[info] - Responses with Content-length header larger than 8 KB are not aggregated !!! IGNORED !!!
[info] - Responses with Content-length header equal to 8 KB are aggregated !!! IGNORED !!!
[info] - Responses with Content-length header smaller than 8 KB are aggregated !!! IGNORED !!!
[info] - alpn http/2-multiplex: streaming requests can't be retried !!! IGNORED !!!
[info] - alpn http/2-multiplex: streaming session bi-directionally transmit trailing headers !!! IGNORED !!!
[info] - alpn http/2-multiplex: invalid trailer causes server to hang up !!! IGNORED !!!
[info] - alpn http/2-multiplex: PooledByteBufAllocator maxOrder is 7 for servers !!! IGNORED !!!
[info] - alpn http/2-multiplex: PooledByteBufAllocator maxOrder is 7 for clients !!! IGNORED !!!
[info] - alpn http/2-multiplex: nonretryable isn't retried !!! IGNORED !!!
[info] - Client-side ResponseClassifier based on status code !!! IGNORED !!!
[info] - server-side ResponseClassifier based on status code !!! IGNORED !!!
[info] - codec should require a message size be less than 2Gb !!! IGNORED !!!
[info] - client respects MaxResponseSize !!! IGNORED !!!
[info] - server rejects illegal headers with a 400 !!! IGNORED !!!
[info] - server rejects illegal trailers with a 400 !!! IGNORED !!!
[info] - client rejects illegal headers with an exception !!! IGNORED !!!
[info] - client rejects illegal trailer with an exception !!! IGNORED !!!
[info] - obs-fold sequences are 'fixed' when received by clients !!! IGNORED !!!
[info] - obs-fold sequences are 'fixed' when received by servers !!! IGNORED !!!
[info] - server responds with 400 Bad Request if non-ascii character is present in uri !!! IGNORED !!!
[info] - server responds 500 if an invalid header is being served !!! IGNORED !!!
[info] - client respects MaxHeaderSize in response !!! IGNORED !!!
[info] - non-streaming clients can decompress content !!! IGNORED !!!
[info] - non-streaming clients can disable decompression !!! IGNORED !!!
[info] - removing the compressor works !!! IGNORED !!!
[info] - request remote address !!! IGNORED !!!
[info] - out of order client requests are OK !!! IGNORED !!!
[info] - alpn http/2-multiplex client handles cut connection properly !!! IGNORED !!!
[info] - Does not retry service acquisition many times when not using FactoryToService !!! IGNORED !!!
[info] - alpn http/2-multiplex: Graceful shutdown & draining !!! IGNORED !!!
[info] - alpn http/2-multiplex: methodBuilder timeouts from Stack !!! IGNORED !!!
[info] - alpn http/2-multiplex: methodBuilder timeouts from ClientBuilder !!! IGNORED !!!
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header field !!! IGNORED !!!
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header fieldwhen non-empty body is returned !!! IGNORED !!!
[info] - response with status code 100 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 102 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 204 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 304 must not have a message body *BUT* Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - client closes properly when closed !!! IGNORED !!!
[info] - client doesn't honor the Netty stream dependency extension header !!! IGNORED !!!
[info] - An alpn connection counts as one upgrade for stats !!! IGNORED !!!
[info] - Upgrades to HTTP/2 only if both have the toggle on and it's H2, not H2C !!! IGNORED !!!
[info] - clients don't leak connections when h2 is rejected !!! IGNORED !!!
Jul 30, 2019 5:19:47 PM com.twitter.util.RootMonitor$$anonfun$2 applyOrElse
SEVERE: Exception propagated to the root monitor!
org.scalatest.exceptions.TestFailedException: Expected None; got close(Time.Bottom)
	at org.scalatest.Assertions$class.newAssertionFailedException(Assertions.scala:528)
	at org.scalatest.Assertions$.newAssertionFailedException(Assertions.scala:1387)
	at org.scalatest.Assertions$class.fail(Assertions.scala:1089)
	at org.scalatest.Assertions$.fail(Assertions.scala:1387)
	at com.twitter.finagle.http.codec.OpTransport.close(HttpClientDispatcherTest.scala:74)
	at com.twitter.finagle.http.exp.StreamTransportProxy.close(StreamTransport.scala:42)
	at com.twitter.util.Closable$class.close(Closable.scala:21)
	at com.twitter.finagle.http.exp.StreamTransportProxy.close(StreamTransport.scala:36)
	at com.twitter.finagle.http.codec.HttpClientDispatcher$$anonfun$dispatch$2.apply(HttpClientDispatcher.scala:45)
	at com.twitter.finagle.http.codec.HttpClientDispatcher$$anonfun$dispatch$2.apply(HttpClientDispatcher.scala:38)
	at com.twitter.util.Future$$anonfun$onFailure$1.apply(Future.scala:1943)
	at com.twitter.util.Future$$anonfun$onFailure$1.apply(Future.scala:1942)
	at com.twitter.util.Promise$Monitored.apply(Promise.scala:211)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:790)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setException(Promise.scala:752)
	at com.twitter.finagle.http.codec.HttpClientDispatcherTest$$anonfun$6.apply(HttpClientDispatcherTest.scala:237)
	at com.twitter.finagle.http.codec.HttpClientDispatcherTest$$anonfun$6.apply(HttpClientDispatcherTest.scala:214)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at org.scalatest.FunSuite.run(FunSuite.scala:1560)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:19:47 PM com.twitter.util.RootMonitor$$anonfun$2 applyOrElse
SEVERE: Exception propagated to the root monitor!
org.scalatest.exceptions.TestFailedException: Expected None; got close(Time.Bottom)
	at org.scalatest.Assertions$class.newAssertionFailedException(Assertions.scala:528)
	at org.scalatest.Assertions$.newAssertionFailedException(Assertions.scala:1387)
	at org.scalatest.Assertions$class.fail(Assertions.scala:1089)
	at org.scalatest.Assertions$.fail(Assertions.scala:1387)
	at com.twitter.finagle.http.codec.OpTransport.close(HttpClientDispatcherTest.scala:74)
	at com.twitter.finagle.http.exp.StreamTransportProxy.close(StreamTransport.scala:42)
	at com.twitter.util.Closable$class.close(Closable.scala:21)
	at com.twitter.finagle.http.exp.StreamTransportProxy.close(StreamTransport.scala:36)
	at com.twitter.finagle.http.codec.HttpClientDispatcher$$anonfun$dispatch$2.apply(HttpClientDispatcher.scala:45)
	at com.twitter.finagle.http.codec.HttpClientDispatcher$$anonfun$dispatch$2.apply(HttpClientDispatcher.scala:38)
	at com.twitter.util.Future$$anonfun$onFailure$1.apply(Future.scala:1943)
	at com.twitter.util.Future$$anonfun$onFailure$1.apply(Future.scala:1942)
	at com.twitter.util.Promise$Monitored.apply(Promise.scala:211)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:790)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setException(Promise.scala:752)
	at com.twitter.finagle.http.codec.HttpClientDispatcherTest$$anonfun$8.apply(HttpClientDispatcherTest.scala:268)
	at com.twitter.finagle.http.codec.HttpClientDispatcherTest$$anonfun$8.apply(HttpClientDispatcherTest.scala:243)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at org.scalatest.FunSuite.run(FunSuite.scala:1560)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:19:47 PM com.twitter.util.RootMonitor$$anonfun$2 applyOrElse
SEVERE: Exception propagated to the root monitor!
org.scalatest.exceptions.TestFailedException: Expected None; got close(Time.Bottom)
	at org.scalatest.Assertions$class.newAssertionFailedException(Assertions.scala:528)
	at org.scalatest.Assertions$.newAssertionFailedException(Assertions.scala:1387)
	at org.scalatest.Assertions$class.fail(Assertions.scala:1089)
	at org.scalatest.Assertions$.fail(Assertions.scala:1387)
	at com.twitter.finagle.http.codec.OpTransport.close(HttpClientDispatcherTest.scala:74)
	at com.twitter.finagle.http.exp.StreamTransportProxy.close(StreamTransport.scala:42)
	at com.twitter.util.Closable$class.close(Closable.scala:21)
	at com.twitter.finagle.http.exp.StreamTransportProxy.close(StreamTransport.scala:36)
	at com.twitter.finagle.http.codec.HttpClientDispatcher$$anonfun$dispatch$2.apply(HttpClientDispatcher.scala:45)
	at com.twitter.finagle.http.codec.HttpClientDispatcher$$anonfun$dispatch$2.apply(HttpClientDispatcher.scala:38)
	at com.twitter.util.Future$$anonfun$onFailure$1.apply(Future.scala:1943)
	at com.twitter.util.Future$$anonfun$onFailure$1.apply(Future.scala:1942)
	at com.twitter.util.Promise$Monitored.apply(Promise.scala:211)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:790)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setException(Promise.scala:752)
	at com.twitter.finagle.http.codec.HttpClientDispatcherTest$$anonfun$10.apply(HttpClientDispatcherTest.scala:306)
	at com.twitter.finagle.http.codec.HttpClientDispatcherTest$$anonfun$10.apply(HttpClientDispatcherTest.scala:276)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at org.scalatest.FunSuite.run(FunSuite.scala:1560)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

[info] HttpClientDispatcherTest:
[info] - streaming request body
[info] - invalid message
[info] - not chunked
[info] - chunked
[info] - error mid-chunk
[info] - upstream interrupt: before write
[info] - upstream interrupt: during req stream (read)
[info] - upstream interrupt: during req stream (write)
[info] PayloadSizeFilterTest:
[info] - nonStreaming -- traces sizes when actively tracing
[info] - nonStreaming -- doesn't trace sizes when not actively tracing
[info] - nonStreaming -- records metrics
[info] - streaming -- traces sizes when actively tracing
[info] - streaming -- doesn't trace sizes when not actively tracing
[info] - streaming -- records metrics
[info] HttpServerDispatcherTest:
[info] - invalid message
[info] - don't clobber service 'Connection: close' headers set by service
[info] - streaming request body
[info] - client abort before dispatch
[info] - client abort after dispatch
[info] - server response fails mid-stream
[info] ClassicHttp2AlpnTest:
[info] - alpn http/2: request header fields too large !!! IGNORED !!!
[info] - alpn http/2: with default client-side ResponseClassifier !!! IGNORED !!!
[info] - alpn http/2: with default server-side ResponseClassifier !!! IGNORED !!!
[info] - alpn http/2: unhandled exceptions are converted into 500s !!! IGNORED !!!
[info] - alpn http/2: client stack observes max header size !!! IGNORED !!!
[info] - alpn http/2: client sets content length !!! IGNORED !!!
[info] - alpn http/2: echo !!! IGNORED !!!
[info] - alpn http/2: dtab !!! IGNORED !!!
[info] - alpn http/2: (no) dtab !!! IGNORED !!!
[info] - alpn http/2: context !!! IGNORED !!!
[info] - alpn http/2: measure payload size !!! IGNORED !!!
[info] - alpn http/2: interrupt requests !!! IGNORED !!!
[info] - alpn http/2: interrupting requests doesn't interfere with others !!! IGNORED !!!
[info] - alpn http/2: aggregates trailers when streams are aggregated !!! IGNORED !!!
[info] - alpn http/2: trace !!! IGNORED !!!
[info] - alpn http/2 (streaming): stream !!! IGNORED !!!
[info] - alpn http/2 (streaming): stream via ResponseProxy filter !!! IGNORED !!!
[info] - alpn http/2 (streaming): aggregates responses that must not have a body !!! IGNORED !!!
[info] - alpn http/2 (streaming): stream via ResponseProxy class !!! IGNORED !!!
[info] - alpn http/2 (streaming): streaming clients can decompress content !!! IGNORED !!!
[info] - alpn http/2 (streaming): symmetric reader and getContent !!! IGNORED !!!
[info] - alpn http/2 (streaming): transport closure propagates to request stream reader !!! IGNORED !!!
[info] - alpn http/2 (streaming): transport closure propagates to request stream producer !!! IGNORED !!!
[info] - alpn http/2 (streaming): request discard terminates remote stream producer !!! IGNORED !!!
[info] - alpn http/2 (streaming): client discard terminates stream and frees up the connection !!! IGNORED !!!
[info] - alpn http/2 (streaming): two fixed-length requests !!! IGNORED !!!
[info] - alpn http/2 (streaming): measure chunk payload size !!! IGNORED !!!
[info] - Responses with Content-length header larger than 8 KB are not aggregated !!! IGNORED !!!
[info] - Responses with Content-length header equal to 8 KB are aggregated !!! IGNORED !!!
[info] - Responses with Content-length header smaller than 8 KB are aggregated !!! IGNORED !!!
[info] - alpn http/2: streaming requests can't be retried !!! IGNORED !!!
[info] - alpn http/2: streaming session bi-directionally transmit trailing headers !!! IGNORED !!!
[info] - alpn http/2: invalid trailer causes server to hang up !!! IGNORED !!!
[info] - alpn http/2: PooledByteBufAllocator maxOrder is 7 for servers !!! IGNORED !!!
[info] - alpn http/2: PooledByteBufAllocator maxOrder is 7 for clients !!! IGNORED !!!
[info] - alpn http/2: nonretryable isn't retried !!! IGNORED !!!
[info] - Client-side ResponseClassifier based on status code !!! IGNORED !!!
[info] - server-side ResponseClassifier based on status code !!! IGNORED !!!
[info] - codec should require a message size be less than 2Gb !!! IGNORED !!!
[info] - client respects MaxResponseSize !!! IGNORED !!!
[info] - server rejects illegal headers with a 400 !!! IGNORED !!!
[info] - server rejects illegal trailers with a 400 !!! IGNORED !!!
[info] - client rejects illegal headers with an exception !!! IGNORED !!!
[info] - client rejects illegal trailer with an exception !!! IGNORED !!!
[info] - obs-fold sequences are 'fixed' when received by clients !!! IGNORED !!!
[info] - obs-fold sequences are 'fixed' when received by servers !!! IGNORED !!!
[info] - server responds with 400 Bad Request if non-ascii character is present in uri !!! IGNORED !!!
[info] - server responds 500 if an invalid header is being served !!! IGNORED !!!
[info] - client respects MaxHeaderSize in response !!! IGNORED !!!
[info] - non-streaming clients can decompress content !!! IGNORED !!!
[info] - non-streaming clients can disable decompression !!! IGNORED !!!
[info] - removing the compressor works !!! IGNORED !!!
[info] - request remote address !!! IGNORED !!!
[info] - out of order client requests are OK !!! IGNORED !!!
[info] - alpn http/2 client handles cut connection properly !!! IGNORED !!!
[info] - Does not retry service acquisition many times when not using FactoryToService !!! IGNORED !!!
[info] - alpn http/2: Graceful shutdown & draining !!! IGNORED !!!
[info] - alpn http/2: methodBuilder timeouts from Stack !!! IGNORED !!!
[info] - alpn http/2: methodBuilder timeouts from ClientBuilder !!! IGNORED !!!
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header field !!! IGNORED !!!
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header fieldwhen non-empty body is returned !!! IGNORED !!!
[info] - response with status code 100 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 102 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 204 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 304 must not have a message body *BUT* Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - client closes properly when closed !!! IGNORED !!!
[info] - client doesn't honor the Netty stream dependency extension header !!! IGNORED !!!
[info] - An alpn connection counts as one upgrade for stats !!! IGNORED !!!
[info] - Upgrades to HTTP/2 only if both have the toggle on and it's H2, not H2C !!! IGNORED !!!
[info] - clients don't leak connections when h2 is rejected !!! IGNORED !!!
[debug] Test run started
[debug] Test com.twitter.finagle.http.HttpMuxerCompilationTest.testHttpMuxer started
[debug] Test com.twitter.finagle.http.HttpMuxerCompilationTest.testHttpMuxer finished, took 0.002 sec
[debug] Test run finished: 0 failed, 0 ignored, 1 total, 0.003s
[info] StatsFilterTest:
[info] - increment stats
[info] - status and time counters and stats are memoized
[info] RequestBuilderTest:
[info] - reject non-http urls
[info] - set the HOST header
[info] - set the HOST header when the HOST contains underscores
[info] - set the Authorization header when userInfo is present
[info] - replace the empty path with /
[info] - not include the fragment in the resource
[info] - not include the empty query string
[info] - set the correct protocol version
[info] - set the correct method
[info] - set headers
[info] - build form
[info] - build multipart form
[info] HeadFilterTest:
[info] - convert GET to HEAD
[info] - GET is normal
[debug] Test run started
[debug] Test com.twitter.finagle.http2.param.StackParamCompilationTest.testParams started
[debug] Test com.twitter.finagle.http2.param.StackParamCompilationTest.testParams finished, took 0.001 sec
[debug] Test run finished: 0 failed, 0 ignored, 1 total, 0.002s
[info] JsonpFilterTest:
[info] - wrap json
[info] - ignore non-json
[info] - ignore HEAD
[info] - ignore empty callback
Jul 30, 2019 5:19:47 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:60330, downstream address: n/a, label: server).
java.lang.IllegalArgumentException: bad news
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:217)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:216)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.ThreadUsage$ThreadUsageFilter.apply(ThreadUsage.scala:130)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.DtabStatsFilter.apply(DtabStatsFilter.scala:37)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.StatsFilter.apply(StatsFilter.scala:258)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ServerStatsFilter.apply(ServerStatsFilter.scala:55)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:131)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:92)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelRequestStatsHandler.channelRead(ChannelRequestStatsHandler.scala:48)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:19:47 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:33979, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply$mcV$sp(AbstractEndToEndTest.scala:474)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:19:47 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:39863, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply$mcV$sp(AbstractEndToEndTest.scala:515)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:19:49 PM com.twitter.finagle.http2.transport.H2Filter$$anonfun$1$$anon$4 run
INFO: Graceful draining period lapsed. Sending final GOAWAY and closing the connection.
Jul 30, 2019 5:19:51 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:36801, label: client).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: localhost/127.0.0.1:36801, Downstream label: client, Trace Id: 3cd049cba901e508.3cd049cba901e508<:3cd049cba901e508

Jul 30, 2019 5:19:51 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:35596, label: http).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: /0.0.0.0:35596, Downstream label: http, Trace Id: 6ef14dd0671cb3ce.6ef14dd0671cb3ce<:6ef14dd0671cb3ce

Jul 30, 2019 5:19:51 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:54498, downstream address: n/a, label: ).
com.twitter.finagle.http.Rfc7230HeaderValidation$ValueValidationException: Header 'foo': value contains a prohibited character '0xc': 
	at com.twitter.finagle.http.Rfc7230HeaderValidation$.validateValue(Rfc7230HeaderValidation.scala:140)
	at com.twitter.finagle.http.DefaultHeaderMap$.com$twitter$finagle$http$DefaultHeaderMap$$foldReplacingValidateValue(DefaultHeaderMap.scala:103)
	at com.twitter.finagle.http.DefaultHeaderMap.add(DefaultHeaderMap.scala:33)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1340)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1337)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:19:52 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleHeadResponse
INFO: Received response to HEAD request (Request("HEAD /", from /127.0.0.1:44248)) that contained a static body of length 10. Discarding body. If this is desired behavior, consider adding HeadFilter to your service
[info] Netty4EndToEndTest:
[info] - netty4 http/1.1: request header fields too large
[info] - netty4 http/1.1: with default client-side ResponseClassifier
[info] - netty4 http/1.1: with default server-side ResponseClassifier
[info] - netty4 http/1.1: unhandled exceptions are converted into 500s
[info] - netty4 http/1.1: client stack observes max header size
[info] - netty4 http/1.1: client sets content length
[info] - netty4 http/1.1: echo
[info] - netty4 http/1.1: dtab
[info] - netty4 http/1.1: (no) dtab
[info] - netty4 http/1.1: context
[info] - netty4 http/1.1: measure payload size
[info] - netty4 http/1.1: interrupt requests
[info] - netty4 http/1.1: interrupting requests doesn't interfere with others
[info] - netty4 http/1.1: aggregates trailers when streams are aggregated
[info] - netty4 http/1.1: trace
[info] - netty4 http/1.1 (streaming): stream
[info] - netty4 http/1.1 (streaming): stream via ResponseProxy filter
[info] - netty4 http/1.1 (streaming): aggregates responses that must not have a body
[info] - netty4 http/1.1 (streaming): stream via ResponseProxy class
[info] - netty4 http/1.1 (streaming): streaming clients can decompress content
[info] - netty4 http/1.1 (streaming): symmetric reader and getContent
[info] - netty4 http/1.1 (streaming): transport closure propagates to request stream reader
[info] - netty4 http/1.1 (streaming): transport closure propagates to request stream producer
[info] - netty4 http/1.1 (streaming): request discard terminates remote stream producer
[info] - netty4 http/1.1 (streaming): client discard terminates stream and frees up the connection
[info] - netty4 http/1.1 (streaming): two fixed-length requests
[info] - netty4 http/1.1 (streaming): measure chunk payload size
[info] - Responses with Content-length header larger than 8 KB are not aggregated
[info] - Responses with Content-length header equal to 8 KB are aggregated
[info] - Responses with Content-length header smaller than 8 KB are aggregated
[info] - netty4 http/1.1: streaming requests can't be retried
[info] - netty4 http/1.1: streaming session bi-directionally transmit trailing headers
[info] - netty4 http/1.1: invalid trailer causes server to hang up
[info] - netty4 http/1.1: PooledByteBufAllocator maxOrder is 7 for servers
[info] - netty4 http/1.1: PooledByteBufAllocator maxOrder is 7 for clients
[info] - netty4 http/1.1: nonretryable isn't retried
[info] - Client-side ResponseClassifier based on status code
[info] - server-side ResponseClassifier based on status code
[info] - codec should require a message size be less than 2Gb
[info] - client respects MaxResponseSize
[info] - server rejects illegal headers with a 400
[info] - server rejects illegal trailers with a 400
[info] - client rejects illegal headers with an exception
[info] - client rejects illegal trailer with an exception
[info] - obs-fold sequences are 'fixed' when received by clients
[info] - obs-fold sequences are 'fixed' when received by servers
[info] - server responds with 400 Bad Request if non-ascii character is present in uri
[info] - server responds 500 if an invalid header is being served
[info] - client respects MaxHeaderSize in response
[info] - non-streaming clients can decompress content
[info] - non-streaming clients can disable decompression
[info] - removing the compressor works
[info] - request remote address
[info] - out of order client requests are OK
[info] - netty4 http/1.1 client handles cut connection properly
[info] - Does not retry service acquisition many times when not using FactoryToService
[info] - netty4 http/1.1: Graceful shutdown & draining
[info] - netty4 http/1.1: methodBuilder timeouts from Stack
[info] - netty4 http/1.1: methodBuilder timeouts from ClientBuilder
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header field !!! IGNORED !!!
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header fieldwhen non-empty body is returned !!! IGNORED !!!
[info] - response with status code 100 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 102 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 204 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 304 must not have a message body *BUT* Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - netty4 http/1.1: HTTP/1.0
[info] - netty4 http/1.1: initial request line too long
[info] - netty4 http/1.1 (non-streaming): Request with 'Connection: close'
[info] - netty4 http/1.1 (non-streaming): Response with 'Connection: close'
[info] - netty4 http/1.1 (non-streaming): : closes the connection on request header fields too large
[info] - netty4 http/1.1 (non-streaming): HTTP/1.0
[info] - netty4 http/1.1 (streaming): Request with 'Connection: close'
[info] - netty4 http/1.1 (streaming): Response with 'Connection: close'
[info] - netty4 http/1.1 (streaming): : closes the connection on request header fields too large
[info] - netty4 http/1.1 (streaming): HTTP/1.0
[info] - non-streaming server handles expect continue header when autoContinue is disabled
[info] - non-streaming server handles expect continue header when autoContinue is enabled
[info] - streaming server handles expect continue header when autoContinue is disabled
[info] - streaming server handles expect continue header when autoContinue is enabled
[info] - mishandled HEAD request doesn't foul the connection
[info] - mishandled HEAD request with chunked response doesn't foul the connection
[info] - streaming server does not stream sufficiently small fixed length messages
[info] - streaming server won't accept fixed length messages that exceed maxRequestSize
[info] - netty4 http/1.1: Can initialize multiple pipelines
[info] - netty4 http/1.1(streaming): Can initialize multiple pipelines
Jul 30, 2019 5:19:53 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:46375, label: http).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: /0.0.0.0:46375, Downstream label: http, Trace Id: 1d96328ba1eb9ffa.1d96328ba1eb9ffa<:1d96328ba1eb9ffa

Jul 30, 2019 5:19:53 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:41515, label: http).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: /0.0.0.0:41515, Downstream label: http, Trace Id: b7743011df1872b8.b7743011df1872b8<:b7743011df1872b8

Jul 30, 2019 5:19:53 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:41828, downstream address: n/a, label: myservice).
java.lang.Exception
	at com.twitter.finagle.http.NackTest$ClientCtx$$anon$1.apply(NackTest.scala:21)
	at com.twitter.finagle.http.NackTest$ClientCtx$$anon$1.apply(NackTest.scala:18)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.ThreadUsage$ThreadUsageFilter.apply(ThreadUsage.scala:130)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.DtabStatsFilter.apply(DtabStatsFilter.scala:37)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.StatsFilter.apply(StatsFilter.scala:258)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ServerStatsFilter.apply(ServerStatsFilter.scala:55)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:131)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:92)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelRequestStatsHandler.channelRead(ChannelRequestStatsHandler.scala:48)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

[info] NackTest:
[info] - automatically retries with HttpNack if restartable
[info] - converts non-restartable/non-retryable Failures
[info] - HttpNack works with ClientBuilder
[info] - HttpNack works with ServerBuilder
[info] - a server that doesn't support HttpNack fails the request
[info] - HttpNack does not convert non-rejected, non-restartable failures
[info] RoutingServiceTest:
[info] - RoutingService.byPath
[info] - RoutingService.byPathObject
[info] - RoutingService.byMethodAndPath
[info] - RoutingService.byMethodAndPathObject
[info] LoggingFilterTest:
[info] - log
[info] - escape() escapes non-printable, non-ASCII
[info] - DateFormat keeps consistent
[info] ScalaTest
[info] Run completed in 1 minute, 53 seconds.
[info] Total number of tests run: 724
[info] Suites: completed 42, aborted 0
[info] Tests: succeeded 723, failed 1, canceled 0, ignored 162, pending 0
[info] *** 1 TEST FAILED ***
[error] Failed: Total 735, Failed 1, Errors 0, Passed 734, Ignored 162
[error] Failed tests:
[error] 	com.twitter.finagle.http.ClientFailHttp2UpgradeTest
[error] (finagle-http / Test / test) sbt.TestsFailedException: Tests unsuccessful
[error] Total time: 233 s, completed Jul 30, 2019 5:19:56 PM

[31;1mThe command "./sbt ++2.11.12 coverage finagle-http/test coverageReport" failed. Retrying, 2 of 3.[0m

[info] Loading settings from build.sbt,unidoc.sbt,plugins.sbt ...
[info] Loading project definition from /home/travis/build/twitter/finagle/project
[info] Loading settings from build.sbt ...
[info] Resolving key references (17383 settings) ...
[info] Using Netty SNAPSHOT build mode: false
[info] Netty version: 4.1.35.Final
[info] Netty tcnative version 2.0.25.Final
[info] Set current project to finagle (in build file:/home/travis/build/twitter/finagle/)
[info] Setting Scala version to 2.11.12 on 30 projects.
[info] Reapplying settings...
[info] Using Netty SNAPSHOT build mode: false
[info] Netty version: 4.1.35.Final
[info] Netty tcnative version 2.0.25.Final
[info] Set current project to finagle (in build file:/home/travis/build/twitter/finagle/)
[info] Defining ThisBuild / coverageEnabled
[info] The new value will be used by Compile / compile / scalacOptions, finagle-base-http / Compile / compile / scalacOptions and 57 others.
[info] 	Run `last` for details.
[info] Reapplying settings...
[info] Using Netty SNAPSHOT build mode: false
[info] Netty version: 4.1.35.Final
[info] Netty tcnative version 2.0.25.Final
[info] Set current project to finagle (in build file:/home/travis/build/twitter/finagle/)
[warn] javaOptions will be ignored, fork is set to false
Jul 30, 2019 5:20:41 PM com.twitter.finagle.http.filter.ExceptionFilter$$anonfun$apply$1 applyOrElse
WARNING: exception: uri:/?exception=true exception:java.lang.Exception
java.lang.Exception
	at com.twitter.finagle.http.filter.ExceptionFilterTest$$anon$1.apply(ExceptionFilterTest.scala:17)
	at com.twitter.finagle.http.filter.ExceptionFilterTest$$anon$1.apply(ExceptionFilterTest.scala:11)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ExceptionFilter.liftedTree1$1(ExceptionFilter.scala:24)
	at com.twitter.finagle.http.filter.ExceptionFilter.apply(ExceptionFilter.scala:23)
	at com.twitter.finagle.http.filter.ExceptionFilter.apply(ExceptionFilter.scala:17)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.filter.ExceptionFilterTest$$anonfun$2.apply(ExceptionFilterTest.scala:40)
	at com.twitter.finagle.http.filter.ExceptionFilterTest$$anonfun$2.apply(ExceptionFilterTest.scala:38)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at org.scalatest.FunSuite.run(FunSuite.scala:1560)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:20:41 PM com.twitter.finagle.http.filter.ExceptionFilter$$anonfun$apply$1 applyOrElse
WARNING: exception: uri:/?throw=true exception:java.lang.Exception
java.lang.Exception
	at com.twitter.finagle.http.filter.ExceptionFilterTest$$anon$1.apply(ExceptionFilterTest.scala:19)
	at com.twitter.finagle.http.filter.ExceptionFilterTest$$anon$1.apply(ExceptionFilterTest.scala:11)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ExceptionFilter.liftedTree1$1(ExceptionFilter.scala:24)
	at com.twitter.finagle.http.filter.ExceptionFilter.apply(ExceptionFilter.scala:23)
	at com.twitter.finagle.http.filter.ExceptionFilter.apply(ExceptionFilter.scala:17)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.filter.ExceptionFilterTest$$anonfun$3.apply(ExceptionFilterTest.scala:49)
	at com.twitter.finagle.http.filter.ExceptionFilterTest$$anonfun$3.apply(ExceptionFilterTest.scala:47)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at org.scalatest.FunSuite.run(FunSuite.scala:1560)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:20:41 PM com.twitter.finagle.http.filter.ExceptionFilter$$anonfun$apply$1 applyOrElse
WARNING: cancelled request: uri:/?cancel=true
[info] ExceptionFilterTest:
[info] - ignore success
[info] - handle exception
[info] - handle throw
[info] - handle cancel
Jul 30, 2019 5:20:43 PM com.twitter.finagle.Init$$anonfun$6 apply$mcV$sp
INFO: Finagle version 19.8.0-SNAPSHOT (rev=a05a747a6f57b649a02d88436c2ccb7bbde26ff5) built at 20190730-172035
[info] HttpTest:
[info] - client stack includes exactly one NackAdmissionFilter
[info] - client uses custom response classifier by default
[info] - responseClassifierParam toggled off
[info] - responseClassifierParam toggled on
[info] - client and server emit http specific stats when enabled
[info] - server uses custom response classifier when specified
[info] - Netty 4 is a default implementation
[debug] Test run started
[debug] Test com.twitter.finagle.http.RequestCompilationTest.testMain started
[debug] Test com.twitter.finagle.http.RequestCompilationTest.testMain finished, took 0.002 sec
[debug] Test run finished: 0 failed, 0 ignored, 1 total, 0.009s
[info] PathTest:
[info] - construct by list
[info] - path separator extrator
[info] - file extension extractor
[info] - /foo/bar
[info] - foo/bar
[info] - :? extractor
[info] - :? extractor with ParamMatcher
[info] - :? extractor with IntParamMatcher and LongParamMatcher
[info] - ~ extractor on Path
[info] - ~ extractor on filename foo.json
[info] - ~ extractor on filename foo
[info] - -> extractor
[info] - Root extractor
[info] - Root extractor, no partial match
[info] - Root extractor, empty path
[info] - / extractor
[info] - Integer extractor
[info] - Integer extractor, negative int
[info] - Integer extractor, invalid int
[info] - Integer extractor, number format error
[info] - Long extractor
[info] - Long extractor, invalid int
[info] - Long extractor, number format error
[info] HttpCodecTest:
[info] - encodeRequestToString
[info] - decodeStringToRequest
[info] - decodeBytesToRequest
[info] - encodeResponseToString
[info] - decodeStringToResponse
[info] - decodeBytesToResponse
Jul 30, 2019 5:20:46 PM io.netty.handler.codec.http2.Http2FrameCodec onHttp2UnknownStreamError
WARNING: Stream exception thrown for unkown stream 1.
io.netty.handler.codec.http2.Http2Exception$HeaderListSizeException: Header size exceeded max allowed size (8192)
	at io.netty.handler.codec.http2.Http2Exception.headerListSizeError(Http2Exception.java:171)
	at io.netty.handler.codec.http2.Http2CodecUtil.headerListSizeExceeded(Http2CodecUtil.java:228)
	at io.netty.handler.codec.http2.HpackDecoder$Http2HeadersSink.finish(HpackDecoder.java:541)
	at io.netty.handler.codec.http2.HpackDecoder.decode(HpackDecoder.java:128)
	at io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder.decodeHeaders(DefaultHttp2HeadersDecoder.java:127)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersBlockBuilder.headers(DefaultHttp2FrameReader.java:743)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:20:46 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:33402, downstream address: n/a, label: server).
java.lang.IllegalArgumentException: bad news
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:217)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:216)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.ThreadUsage$ThreadUsageFilter.apply(ThreadUsage.scala:130)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.DtabStatsFilter.apply(DtabStatsFilter.scala:37)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.StatsFilter.apply(StatsFilter.scala:258)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ServerStatsFilter.apply(ServerStatsFilter.scala:55)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:131)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:92)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelRequestStatsHandler.channelRead(ChannelRequestStatsHandler.scala:48)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:607)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:254)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:106)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:20:47 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:45700, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply$mcV$sp(AbstractEndToEndTest.scala:474)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:20:47 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:40808, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply$mcV$sp(AbstractEndToEndTest.scala:515)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:20:51 PM com.twitter.finagle.http2.transport.StreamTransportFactory$StreamTransport com$twitter$finagle$http2$transport$StreamTransportFactory$StreamTransport$$handleBadState
ERROR: Stream 1 bad state: Write to dead stream: DefaultHttpContent(data: ReadOnlyByteBuf(ridx: 0, widx: 1, cap: 1/1, unwrapped: UnpooledHeapByteBuf(ridx: 0, widx: 1, cap: 1/1)), decoderResult: success)
Jul 30, 2019 5:20:51 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:40212, label: http).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: /0.0.0.0:40212, Downstream label: http, Trace Id: 7f1c26dc8c71d80a.7f1c26dc8c71d80a<:7f1c26dc8c71d80a

Jul 30, 2019 5:20:52 PM com.twitter.finagle.http2.transport.PriorKnowledgeTransporter$$anonfun$apply$2$$anonfun$apply$1 applyOrElse
WARNING: A previously successful connection to address localhost/127.0.0.1:37379 stopped being successful.
com.twitter.finagle.http2.DeadConnectionException: assigned an already dead connection to address localhost/127.0.0.1:37379
	at com.twitter.finagle.http2.transport.StreamTransportFactory$$anon$3.run(StreamTransportFactory.scala:282)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:405)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:338)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:20:52 PM com.twitter.finagle.http2.transport.PriorKnowledgeTransporter$$anonfun$apply$2$$anonfun$apply$1 applyOrElse
WARNING: A previously successful connection to address localhost/127.0.0.1:37379 stopped being successful.
com.twitter.finagle.http2.DeadConnectionException: assigned an already dead connection to address localhost/127.0.0.1:37379
	at com.twitter.finagle.http2.transport.StreamTransportFactory$$anon$3.run(StreamTransportFactory.scala:282)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:405)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:338)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:20:52 PM com.twitter.finagle.liveness.FailureAccrualFactory$$anon$2$$anon$1 didMarkDead
INFO: FailureAccrualFactory marking connection to "client" as dead. Remote Address: Inet(localhost/127.0.0.1:37379,Map())
Jul 30, 2019 5:20:52 PM com.twitter.finagle.http2.transport.PriorKnowledgeTransporter$$anonfun$apply$2$$anonfun$apply$1 applyOrElse
WARNING: A previously successful connection to address localhost/127.0.0.1:37379 stopped being successful.
com.twitter.finagle.http2.DeadConnectionException: assigned an already dead connection to address localhost/127.0.0.1:37379
	at com.twitter.finagle.http2.transport.StreamTransportFactory$$anon$3.run(StreamTransportFactory.scala:282)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:405)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:338)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:20:52 PM com.twitter.finagle.http2.transport.PriorKnowledgeTransporter$$anonfun$apply$2$$anonfun$apply$1 applyOrElse
WARNING: A previously successful connection to address localhost/127.0.0.1:37092 stopped being successful.
com.twitter.finagle.http2.DeadConnectionException: assigned an already dead connection to address localhost/127.0.0.1:37092
	at com.twitter.finagle.http2.transport.StreamTransportFactory$$anon$3.run(StreamTransportFactory.scala:282)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:405)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:338)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:20:52 PM com.twitter.finagle.http2.transport.PriorKnowledgeTransporter$$anonfun$apply$2$$anonfun$apply$1 applyOrElse
WARNING: A previously successful connection to address localhost/127.0.0.1:37092 stopped being successful.
com.twitter.finagle.http2.DeadConnectionException: assigned an already dead connection to address localhost/127.0.0.1:37092
	at com.twitter.finagle.http2.transport.StreamTransportFactory$$anon$3.run(StreamTransportFactory.scala:282)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:405)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:338)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:20:52 PM com.twitter.finagle.liveness.FailureAccrualFactory$$anon$2$$anon$1 didMarkDead
INFO: FailureAccrualFactory marking connection to "client" as dead. Remote Address: Inet(localhost/127.0.0.1:37092,Map())
Jul 30, 2019 5:20:52 PM com.twitter.finagle.http2.transport.PriorKnowledgeTransporter$$anonfun$apply$2$$anonfun$apply$1 applyOrElse
WARNING: A previously successful connection to address localhost/127.0.0.1:37092 stopped being successful.
com.twitter.finagle.http2.DeadConnectionException: assigned an already dead connection to address localhost/127.0.0.1:37092
	at com.twitter.finagle.http2.transport.StreamTransportFactory$$anon$3.run(StreamTransportFactory.scala:282)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:405)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:338)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:20:52 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:47460, downstream address: n/a, label: ).
com.twitter.finagle.http.Rfc7230HeaderValidation$ValueValidationException: Header 'foo': value contains a prohibited character '0xc': 
	at com.twitter.finagle.http.Rfc7230HeaderValidation$.validateValue(Rfc7230HeaderValidation.scala:140)
	at com.twitter.finagle.http.DefaultHeaderMap$.com$twitter$finagle$http$DefaultHeaderMap$$foldReplacingValidateValue(DefaultHeaderMap.scala:103)
	at com.twitter.finagle.http.DefaultHeaderMap.add(DefaultHeaderMap.scala:33)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1340)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1337)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:607)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:254)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:106)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:20:53 PM com.twitter.finagle.http2.transport.PriorKnowledgeTransporter$$anonfun$apply$2$$anonfun$apply$1 applyOrElse
WARNING: A previously successful connection to address localhost/127.0.0.1:33022 stopped being successful.
com.twitter.finagle.http2.DeadConnectionException: assigned an already dead connection to address localhost/127.0.0.1:33022
	at com.twitter.finagle.http2.transport.StreamTransportFactory$$anon$3.run(StreamTransportFactory.scala:282)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:405)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:338)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:20:53 PM com.twitter.finagle.http2.transport.H2Filter close
INFO: Closing h2 session with deadline 2019-07-30 17:20:58 +0000
Jul 30, 2019 5:20:53 PM com.twitter.finagle.http2.transport.PriorKnowledgeTransporter$$anonfun$apply$2$$anonfun$apply$1 applyOrElse
WARNING: A previously successful connection to address /0.0.0.0:41059 stopped being successful.
com.twitter.finagle.http2.DeadConnectionException: assigned an already dead connection to address /0.0.0.0:41059
	at com.twitter.finagle.http2.transport.StreamTransportFactory$$anon$3.run(StreamTransportFactory.scala:282)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:405)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:338)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:20:53 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:20:53 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:20:53 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:20:53 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 304 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:20:54 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:20:54 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:20:54 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:20:54 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:20:54 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:20:54 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:20:54 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 304 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:20:54 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:42012, downstream address: n/a, label: ).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$initService$1.apply(AbstractEndToEndTest.scala:68)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$initService$1.apply(AbstractEndToEndTest.scala:67)
	at com.twitter.finagle.Service$$anon$2.apply(Service.scala:29)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:607)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:254)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:106)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:20:54 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:37380, downstream address: n/a, label: ).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$initService$1.apply(AbstractEndToEndTest.scala:68)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$initService$1.apply(AbstractEndToEndTest.scala:67)
	at com.twitter.finagle.Service$$anon$2.apply(Service.scala:29)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:607)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:254)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:106)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

[info] ClassicHttp2PriorKnowledgeTest:
[info] - prior knowledge http/2: request header fields too large
[info] - prior knowledge http/2: with default client-side ResponseClassifier
[info] - prior knowledge http/2: with default server-side ResponseClassifier
[info] - prior knowledge http/2: unhandled exceptions are converted into 500s
[info] - prior knowledge http/2: client stack observes max header size
[info] - prior knowledge http/2: client sets content length
[info] - prior knowledge http/2: echo
[info] - prior knowledge http/2: dtab
[info] - prior knowledge http/2: (no) dtab
[info] - prior knowledge http/2: context
[info] - prior knowledge http/2: measure payload size
[info] - prior knowledge http/2: interrupt requests
[info] - prior knowledge http/2: interrupting requests doesn't interfere with others
[info] - prior knowledge http/2: aggregates trailers when streams are aggregated
[info] - prior knowledge http/2: trace
[info] - prior knowledge http/2 (streaming): stream
[info] - prior knowledge http/2 (streaming): stream via ResponseProxy filter
[info] - prior knowledge http/2 (streaming): aggregates responses that must not have a body
[info] - prior knowledge http/2 (streaming): stream via ResponseProxy class
[info] - prior knowledge http/2 (streaming): streaming clients can decompress content
[info] - prior knowledge http/2 (streaming): symmetric reader and getContent
[info] - prior knowledge http/2 (streaming): transport closure propagates to request stream reader
[info] - prior knowledge http/2 (streaming): transport closure propagates to request stream producer
[info] - prior knowledge http/2 (streaming): request discard terminates remote stream producer
[info] - prior knowledge http/2 (streaming): client discard terminates stream and frees up the connection
[info] - prior knowledge http/2 (streaming): two fixed-length requests
[info] - prior knowledge http/2 (streaming): measure chunk payload size
[info] - Responses with Content-length header larger than 8 KB are not aggregated
[info] - Responses with Content-length header equal to 8 KB are aggregated
[info] - Responses with Content-length header smaller than 8 KB are aggregated
[info] - prior knowledge http/2: streaming requests can't be retried
[info] - prior knowledge http/2: streaming session bi-directionally transmit trailing headers
[info] - prior knowledge http/2: invalid trailer causes server to hang up
[info] - prior knowledge http/2: PooledByteBufAllocator maxOrder is 7 for servers
[info] - prior knowledge http/2: PooledByteBufAllocator maxOrder is 7 for clients
[info] - prior knowledge http/2: nonretryable isn't retried
[info] - Client-side ResponseClassifier based on status code
[info] - server-side ResponseClassifier based on status code
[info] - codec should require a message size be less than 2Gb
[info] - client respects MaxResponseSize
[info] - server rejects illegal headers with a 400
[info] - server rejects illegal trailers with a 400
[info] - client rejects illegal headers with an exception
[info] - client rejects illegal trailer with an exception
[info] - obs-fold sequences are 'fixed' when received by clients
[info] - obs-fold sequences are 'fixed' when received by servers
[info] - server responds with 400 Bad Request if non-ascii character is present in uri !!! IGNORED !!!
[info] - server responds 500 if an invalid header is being served
[info] - client respects MaxHeaderSize in response
[info] - non-streaming clients can decompress content
[info] - non-streaming clients can disable decompression
[info] - removing the compressor works
[info] - request remote address
[info] - out of order client requests are OK
[info] - prior knowledge http/2 client handles cut connection properly
[info] - Does not retry service acquisition many times when not using FactoryToService
[info] - prior knowledge http/2: Graceful shutdown & draining
[info] - prior knowledge http/2: methodBuilder timeouts from Stack
[info] - prior knowledge http/2: methodBuilder timeouts from ClientBuilder
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header field
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header fieldwhen non-empty body is returned
[info] - response with status code 100 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 102 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 204 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 304 must not have a message body *BUT* Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - client closes properly when closed
[info] - client doesn't honor the Netty stream dependency extension header
[info] - A prior knowledge connection counts as one upgrade for stats
[info] TraceInitializationTest:
[info] - TraceId is propagated through the protocol
[info] - TraceId is propagated through the protocol (builder)
[info] SameSiteEndToEndTest:
[info] - response should contain Lax if set in laxService
[info] - response should contain Strict if set in strictService
[info] - response should contain no SameSite attribute if set to None
[info] - server should not see SameSite.Lax if set by client
[info] - server should not see SameSite.Strict if set by client
[debug] Test run started
[debug] Test com.twitter.finagle.HttpCompilationTest.testClient started
[debug] Test com.twitter.finagle.HttpCompilationTest.testClient finished, took 0.002 sec
[debug] Test com.twitter.finagle.HttpCompilationTest.testServer started
[debug] Test com.twitter.finagle.HttpCompilationTest.testServer finished, took 0.001 sec
[debug] Test run finished: 0 failed, 0 ignored, 2 total, 0.005s
[info] HttpSslTest:
[info] - Peer certificate is available to HTTP/1.1 service
[info] - Peer certificate is available to HTTP/2 service
[info] - Peer certificate is available to HTTP/2 service with HTTP/1.1 client
[info] MethodRequiredFilterTest:
[info] - return 407 when disallowed method is used
[info] - return 200 when allowed method is used
[info] TracingTest:
[info] - set header
[info] - record only path of url
[info] - parse header
[info] - parse header (128-bit TraceIDs)
[info] - parse header with sampled as 1
[info] - not parse header if no trace id
[info] - survive bad flags entry
[info] - survive no flags entry
[info] - hasAllRequiredHeaders with all
[info] DirectPayloadsLifecycleTest:
[info] - [HTTP/1.1] should never leak direct paylods into the user space
[info] - [HTTP/2] should never leak direct paylods into the user space
[info] - [HTTP/2 client <-> HTTP/1.1 server] should never leak direct paylods into the user space
Jul 30, 2019 5:20:55 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:35910, downstream address: n/a, label: server).
java.lang.IllegalArgumentException: bad news
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:217)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:216)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.ThreadUsage$ThreadUsageFilter.apply(ThreadUsage.scala:130)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.DtabStatsFilter.apply(DtabStatsFilter.scala:37)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.StatsFilter.apply(StatsFilter.scala:258)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ServerStatsFilter.apply(ServerStatsFilter.scala:55)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:131)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:92)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelRequestStatsHandler.channelRead(ChannelRequestStatsHandler.scala:48)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:71)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:20:56 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:38034, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply$mcV$sp(AbstractEndToEndTest.scala:474)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:20:56 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:35137, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply$mcV$sp(AbstractEndToEndTest.scala:515)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:20:58 PM com.twitter.finagle.http2.transport.H2Filter$$anonfun$1$$anon$4 run
INFO: Graceful draining period lapsed. Sending final GOAWAY and closing the connection.
Jul 30, 2019 5:20:59 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:46421, label: client).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: localhost/127.0.0.1:46421, Downstream label: client, Trace Id: 46abcc566d9df70e.46abcc566d9df70e<:46abcc566d9df70e

Jul 30, 2019 5:20:59 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:41064, label: http).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: /0.0.0.0:41064, Downstream label: http, Trace Id: 4195e3cd13216b13.4195e3cd13216b13<:4195e3cd13216b13

Jul 30, 2019 5:21:00 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:47038, downstream address: n/a, label: ).
com.twitter.finagle.http.Rfc7230HeaderValidation$ValueValidationException: Header 'foo': value contains a prohibited character '0xc': 
	at com.twitter.finagle.http.Rfc7230HeaderValidation$.validateValue(Rfc7230HeaderValidation.scala:140)
	at com.twitter.finagle.http.DefaultHeaderMap$.com$twitter$finagle$http$DefaultHeaderMap$$foldReplacingValidateValue(DefaultHeaderMap.scala:103)
	at com.twitter.finagle.http.DefaultHeaderMap.add(DefaultHeaderMap.scala:33)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1340)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1337)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:71)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:21:01 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleHeadResponse
INFO: Received response to HEAD request (Request("HEAD /", from /127.0.0.1:41074)) that contained a static body of length 10. Discarding body. If this is desired behavior, consider adding HeadFilter to your service
[info] ServerFailHttp2UpgradeTest:
[info] - http/1.1 client, http/2 server: request header fields too large
[info] - http/1.1 client, http/2 server: with default client-side ResponseClassifier
[info] - http/1.1 client, http/2 server: with default server-side ResponseClassifier
[info] - http/1.1 client, http/2 server: unhandled exceptions are converted into 500s
[info] - http/1.1 client, http/2 server: client stack observes max header size
[info] - http/1.1 client, http/2 server: client sets content length
[info] - http/1.1 client, http/2 server: echo
[info] - http/1.1 client, http/2 server: dtab
[info] - http/1.1 client, http/2 server: (no) dtab
[info] - http/1.1 client, http/2 server: context
[info] - http/1.1 client, http/2 server: measure payload size
[info] - http/1.1 client, http/2 server: interrupt requests
[info] - http/1.1 client, http/2 server: interrupting requests doesn't interfere with others
[info] - http/1.1 client, http/2 server: aggregates trailers when streams are aggregated
[info] - http/1.1 client, http/2 server: trace
[info] - http/1.1 client, http/2 server (streaming): stream
[info] - http/1.1 client, http/2 server (streaming): stream via ResponseProxy filter
[info] - http/1.1 client, http/2 server (streaming): aggregates responses that must not have a body
[info] - http/1.1 client, http/2 server (streaming): stream via ResponseProxy class
[info] - http/1.1 client, http/2 server (streaming): streaming clients can decompress content
[info] - http/1.1 client, http/2 server (streaming): symmetric reader and getContent
[info] - http/1.1 client, http/2 server (streaming): transport closure propagates to request stream reader
[info] - http/1.1 client, http/2 server (streaming): transport closure propagates to request stream producer
[info] - http/1.1 client, http/2 server (streaming): request discard terminates remote stream producer
[info] - http/1.1 client, http/2 server (streaming): client discard terminates stream and frees up the connection
[info] - http/1.1 client, http/2 server (streaming): two fixed-length requests
[info] - http/1.1 client, http/2 server (streaming): measure chunk payload size
[info] - Responses with Content-length header larger than 8 KB are not aggregated
[info] - Responses with Content-length header equal to 8 KB are aggregated
[info] - Responses with Content-length header smaller than 8 KB are aggregated
[info] - http/1.1 client, http/2 server: streaming requests can't be retried
[info] - http/1.1 client, http/2 server: streaming session bi-directionally transmit trailing headers
[info] - http/1.1 client, http/2 server: invalid trailer causes server to hang up
[info] - http/1.1 client, http/2 server: PooledByteBufAllocator maxOrder is 7 for servers
[info] - http/1.1 client, http/2 server: PooledByteBufAllocator maxOrder is 7 for clients
[info] - http/1.1 client, http/2 server: nonretryable isn't retried
[info] - Client-side ResponseClassifier based on status code
[info] - server-side ResponseClassifier based on status code
[info] - codec should require a message size be less than 2Gb
[info] - client respects MaxResponseSize
[info] - server rejects illegal headers with a 400
[info] - server rejects illegal trailers with a 400
[info] - client rejects illegal headers with an exception
[info] - client rejects illegal trailer with an exception
[info] - obs-fold sequences are 'fixed' when received by clients
[info] - obs-fold sequences are 'fixed' when received by servers
[info] - server responds with 400 Bad Request if non-ascii character is present in uri
[info] - server responds 500 if an invalid header is being served
[info] - client respects MaxHeaderSize in response
[info] - non-streaming clients can decompress content
[info] - non-streaming clients can disable decompression
[info] - removing the compressor works
[info] - request remote address
[info] - out of order client requests are OK
[info] - http/1.1 client, http/2 server client handles cut connection properly
[info] - Does not retry service acquisition many times when not using FactoryToService
[info] - http/1.1 client, http/2 server: Graceful shutdown & draining
[info] - http/1.1 client, http/2 server: methodBuilder timeouts from Stack
[info] - http/1.1 client, http/2 server: methodBuilder timeouts from ClientBuilder
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header field !!! IGNORED !!!
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header fieldwhen non-empty body is returned !!! IGNORED !!!
[info] - response with status code 100 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 102 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 204 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 304 must not have a message body *BUT* Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - http/1.1 client, http/2 server: HTTP/1.0
[info] - http/1.1 client, http/2 server: initial request line too long
[info] - http/1.1 client, http/2 server (non-streaming): Request with 'Connection: close'
[info] - http/1.1 client, http/2 server (non-streaming): Response with 'Connection: close'
[info] - http/1.1 client, http/2 server (non-streaming): : closes the connection on request header fields too large
[info] - http/1.1 client, http/2 server (non-streaming): HTTP/1.0
[info] - http/1.1 client, http/2 server (streaming): Request with 'Connection: close'
[info] - http/1.1 client, http/2 server (streaming): Response with 'Connection: close'
[info] - http/1.1 client, http/2 server (streaming): : closes the connection on request header fields too large
[info] - http/1.1 client, http/2 server (streaming): HTTP/1.0
[info] - non-streaming server handles expect continue header when autoContinue is disabled
[info] - non-streaming server handles expect continue header when autoContinue is enabled
[info] - streaming server handles expect continue header when autoContinue is disabled
[info] - streaming server handles expect continue header when autoContinue is enabled
[info] - mishandled HEAD request doesn't foul the connection
[info] - mishandled HEAD request with chunked response doesn't foul the connection
[info] - streaming server does not stream sufficiently small fixed length messages
[info] - streaming server won't accept fixed length messages that exceed maxRequestSize
[info] - http/1.1 client, http/2 server: Can initialize multiple pipelines
[info] - http/1.1 client, http/2 server(streaming): Can initialize multiple pipelines
[info] - Upgrade counters are not incremented
Jul 30, 2019 5:21:01 PM io.netty.handler.codec.http2.Http2FrameCodec onHttp2UnknownStreamError
WARNING: Stream exception thrown for unkown stream 3.
io.netty.handler.codec.http2.Http2Exception$HeaderListSizeException: Header size exceeded max allowed size (8192)
	at io.netty.handler.codec.http2.Http2Exception.headerListSizeError(Http2Exception.java:171)
	at io.netty.handler.codec.http2.Http2CodecUtil.headerListSizeExceeded(Http2CodecUtil.java:228)
	at io.netty.handler.codec.http2.HpackDecoder$Http2HeadersSink.finish(HpackDecoder.java:541)
	at io.netty.handler.codec.http2.HpackDecoder.decode(HpackDecoder.java:128)
	at io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder.decodeHeaders(DefaultHttp2HeadersDecoder.java:127)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersBlockBuilder.headers(DefaultHttp2FrameReader.java:743)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:21:01 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:47986, downstream address: n/a, label: server).
java.lang.IllegalArgumentException: bad news
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:217)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:216)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.ThreadUsage$ThreadUsageFilter.apply(ThreadUsage.scala:130)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.DtabStatsFilter.apply(DtabStatsFilter.scala:37)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.StatsFilter.apply(StatsFilter.scala:258)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ServerStatsFilter.apply(ServerStatsFilter.scala:55)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:131)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:92)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelRequestStatsHandler.channelRead(ChannelRequestStatsHandler.scala:48)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:607)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:254)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:106)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:21:02 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:37902, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply$mcV$sp(AbstractEndToEndTest.scala:474)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:21:02 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:36527, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply$mcV$sp(AbstractEndToEndTest.scala:515)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:21:05 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0xd8a1e8c8, L:/127.0.0.1:59116 - R:localhost/127.0.0.1:44625] ignoring DATA frame for stream RST_STREAM sent.
Jul 30, 2019 5:21:05 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0xd8a1e8c8, L:/127.0.0.1:59116 - R:localhost/127.0.0.1:44625] ignoring DATA frame for stream RST_STREAM sent.
Jul 30, 2019 5:21:05 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0xd8a1e8c8, L:/127.0.0.1:59116 - R:localhost/127.0.0.1:44625] ignoring DATA frame for stream RST_STREAM sent.
Jul 30, 2019 5:21:05 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0xd8a1e8c8, L:/127.0.0.1:59116 - R:localhost/127.0.0.1:44625] ignoring DATA frame for stream RST_STREAM sent.
Jul 30, 2019 5:21:05 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0xd8a1e8c8, L:/127.0.0.1:59116 - R:localhost/127.0.0.1:44625] ignoring DATA frame for stream RST_STREAM sent.
Jul 30, 2019 5:21:06 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:54142, downstream address: n/a, label: ).
com.twitter.finagle.http.Rfc7230HeaderValidation$ValueValidationException: Header 'foo': value contains a prohibited character '0xc': 
	at com.twitter.finagle.http.Rfc7230HeaderValidation$.validateValue(Rfc7230HeaderValidation.scala:140)
	at com.twitter.finagle.http.DefaultHeaderMap$.com$twitter$finagle$http$DefaultHeaderMap$$foldReplacingValidateValue(DefaultHeaderMap.scala:103)
	at com.twitter.finagle.http.DefaultHeaderMap.add(DefaultHeaderMap.scala:33)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1340)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1337)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:607)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:254)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:106)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:21:06 PM com.twitter.finagle.http2.transport.H2Filter close
INFO: Closing h2 session with deadline 2019-07-30 17:21:11 +0000
Jul 30, 2019 5:21:06 PM com.twitter.finagle.http2.transport.H2Filter$$anon$3 operationComplete
INFO: Channel closed, session terminated.
Jul 30, 2019 5:21:07 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:21:07 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:21:07 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:21:07 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 304 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:21:07 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:21:07 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:21:07 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:21:07 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:21:07 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:21:07 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:21:07 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 304 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:21:07 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:35552, downstream address: n/a, label: ).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$initService$1.apply(AbstractEndToEndTest.scala:68)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$initService$1.apply(AbstractEndToEndTest.scala:67)
	at com.twitter.finagle.Service$$anon$2.apply(Service.scala:29)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:607)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:254)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:106)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:21:07 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:44278, downstream address: n/a, label: ).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$initService$1.apply(AbstractEndToEndTest.scala:68)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$initService$1.apply(AbstractEndToEndTest.scala:67)
	at com.twitter.finagle.Service$$anon$2.apply(Service.scala:29)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:607)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:254)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:106)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

[info] Http2PriorKnowledgeTest:
[info] - prior knowledge http/2: request header fields too large
[info] - prior knowledge http/2: with default client-side ResponseClassifier
[info] - prior knowledge http/2: with default server-side ResponseClassifier
[info] - prior knowledge http/2: unhandled exceptions are converted into 500s
[info] - prior knowledge http/2: client stack observes max header size
[info] - prior knowledge http/2: client sets content length
[info] - prior knowledge http/2: echo
[info] - prior knowledge http/2: dtab
[info] - prior knowledge http/2: (no) dtab
[info] - prior knowledge http/2: context
[info] - prior knowledge http/2: measure payload size
[info] - prior knowledge http/2: interrupt requests
[info] - prior knowledge http/2: interrupting requests doesn't interfere with others
[info] - prior knowledge http/2: aggregates trailers when streams are aggregated
[info] - prior knowledge http/2: trace
[info] - prior knowledge http/2 (streaming): stream
[info] - prior knowledge http/2 (streaming): stream via ResponseProxy filter
[info] - prior knowledge http/2 (streaming): aggregates responses that must not have a body
[info] - prior knowledge http/2 (streaming): stream via ResponseProxy class *** FAILED ***
[info]   com.twitter.finagle.netty4.transport.ChannelTransport$NoStackTraceChannelClosedException: ChannelException at remote address: localhost/127.0.0.1:43594. Remote Info: Not Available
[info]   ...
[info] - prior knowledge http/2 (streaming): streaming clients can decompress content
[info] - prior knowledge http/2 (streaming): symmetric reader and getContent
[info] - prior knowledge http/2 (streaming): transport closure propagates to request stream reader
[info] - prior knowledge http/2 (streaming): transport closure propagates to request stream producer
[info] - prior knowledge http/2 (streaming): request discard terminates remote stream producer
[info] - prior knowledge http/2 (streaming): client discard terminates stream and frees up the connection
[info] - prior knowledge http/2 (streaming): two fixed-length requests
[info] - prior knowledge http/2 (streaming): measure chunk payload size
[info] - Responses with Content-length header larger than 8 KB are not aggregated
[info] - Responses with Content-length header equal to 8 KB are aggregated
[info] - Responses with Content-length header smaller than 8 KB are aggregated
[info] - prior knowledge http/2: streaming requests can't be retried
[info] - prior knowledge http/2: streaming session bi-directionally transmit trailing headers
[info] - prior knowledge http/2: invalid trailer causes server to hang up
[info] - prior knowledge http/2: PooledByteBufAllocator maxOrder is 7 for servers
[info] - prior knowledge http/2: PooledByteBufAllocator maxOrder is 7 for clients
[info] - prior knowledge http/2: nonretryable isn't retried
[info] - Client-side ResponseClassifier based on status code
[info] - server-side ResponseClassifier based on status code
[info] - codec should require a message size be less than 2Gb
[info] - client respects MaxResponseSize
[info] - server rejects illegal headers with a 400
[info] - server rejects illegal trailers with a 400
[info] - client rejects illegal headers with an exception
[info] - client rejects illegal trailer with an exception
[info] - obs-fold sequences are 'fixed' when received by clients
[info] - obs-fold sequences are 'fixed' when received by servers
[info] - server responds with 400 Bad Request if non-ascii character is present in uri !!! IGNORED !!!
[info] - server responds 500 if an invalid header is being served
[info] - client respects MaxHeaderSize in response !!! IGNORED !!!
[info] - non-streaming clients can decompress content
[info] - non-streaming clients can disable decompression
[info] - removing the compressor works
[info] - request remote address
[info] - out of order client requests are OK
[info] - prior knowledge http/2 client handles cut connection properly
[info] - Does not retry service acquisition many times when not using FactoryToService
[info] - prior knowledge http/2: Graceful shutdown & draining
[info] - prior knowledge http/2: methodBuilder timeouts from Stack
[info] - prior knowledge http/2: methodBuilder timeouts from ClientBuilder
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header field
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header fieldwhen non-empty body is returned
[info] - response with status code 100 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 102 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 204 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 304 must not have a message body *BUT* Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - client closes properly when closed
[info] - client doesn't honor the Netty stream dependency extension header
[info] - A prior knowledge connection counts as one upgrade for stats
[info] HttpResponseClassifierTest:
[info] - ServerErrorsAsFailures
[info] - ServerErrorsAsFailures for nacks
[info] - apply
[info] StreamingStatsFilterTest:
[info] - streaming failures in request are populated correctly
[info] - streaming failures in response are populated correctly
[info] - opened stream count and finished stream count are populated correctly
[info] - pending stream gauges are populated correctly
[info] - stream duration stats are populated correctly
[info] CorsTest:
[info] - Cors.HttpFilter handles preflight requests
[info] - Http.CorsFilter responds to invalid preflight requests without CORS headers
[info] - Http.CorsFilter responds to unacceptable cross-origin requests without CORS headers
[info] - Http.CorsFilter handles simple requests
[info] - Http.CorsFilter does not add response headers to simple requests if request headers aren't present
[debug] Test run started
[debug] Test com.twitter.finagle.http.javaapi.DtabFilterTest.tesDtab started
[debug] Test com.twitter.finagle.http.javaapi.DtabFilterTest.tesDtab finished, took 0.0 sec
[debug] Test run finished: 0 failed, 0 ignored, 1 total, 0.001s
[info] TlsFilterTest:
[info] - filter
[info] - module
Jul 30, 2019 5:21:33 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:35894, downstream address: n/a, label: server).
org.scalatest.exceptions.TestFailedException: "[]" did not equal "[hello]"
	at org.scalatest.Assertions$class.newAssertionFailedException(Assertions.scala:528)
	at org.scalatest.FunSuite.newAssertionFailedException(FunSuite.scala:1560)
	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:501)
	at com.twitter.finagle.http.AbstractStreamingTest$$anonfun$11$$anonfun$27.apply(AbstractStreamingTest.scala:368)
	at com.twitter.finagle.http.AbstractStreamingTest$$anonfun$11$$anonfun$27.apply(AbstractStreamingTest.scala:367)
	at com.twitter.finagle.Service$$anon$2.apply(Service.scala:29)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter$$anonfun$apply$1.apply(HttpNackFilter.scala:159)
	at com.twitter.finagle.http.filter.HttpNackFilter$$anonfun$apply$1.apply(HttpNackFilter.scala:159)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:158)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:36)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.HttpServerExpectContinueHandler.channelRead(HttpServerExpectContinueHandler.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.http.handler.PayloadSizeHandler.channelRead(PayloadSizeHandler.scala:59)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:21:33 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:40130, label: client).
java.lang.Exception
	at com.twitter.finagle.http.AbstractStreamingTest$$anonfun$30.apply(AbstractStreamingTest.scala:424)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at org.scalatest.FunSuite.run(FunSuite.scala:1560)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

[info] Netty4StreamingTest:
[info] - client: request stream fails on write
[info] - client: response stream fails on read
[info] - client: server disconnect on pending response should fail request
[info] - client: client closes transport after server disconnects
[info] - client: fail request writer
[info] - client: discard respond reader
[info] - server: request stream fails read
[info] - server: response stream fails write
[info] - server: fail response writer
[info] - server: fail request reader
[info] - server: empty buf doesn't close response stream
[info] - client: empty buf doesn't close request stream
[info] - end-to-end: server gets content for chunked request made to client with content length
[info] - end-to-end: client may process multiple streaming requests simultaneously
[info] - server: inbound stream (reader) propagates closures initiated remotely
[info] - server: outbound stream (writer) propagates closures initiated remotely
[info] - client: inbound stream (reader) propagates closures initiated remotely
[info] - client: outbound stream (writer) propagates closures initiated remotely
[info] HttpMuxerTest:
[info] - handles params properly
[info] - normalize basics
[info] - normalize duplicate slashes
[info] - prefix matching is handled correctly
[info] - exact matching is handled correctly
[info] - special cases "" and "/" are handled correctly
[info] - Registering a service with an existing name will overwrite the old
[info] - RouteIndex only allows GET and POST
[info] - Closing the HttpMuxer closes the individual handlers
Jul 30, 2019 5:21:33 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:56652, downstream address: n/a, label: server).
java.lang.IllegalArgumentException: bad news
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:217)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:216)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.ThreadUsage$ThreadUsageFilter.apply(ThreadUsage.scala:130)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.DtabStatsFilter.apply(DtabStatsFilter.scala:37)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.StatsFilter.apply(StatsFilter.scala:258)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ServerStatsFilter.apply(ServerStatsFilter.scala:55)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:131)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:92)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelRequestStatsHandler.channelRead(ChannelRequestStatsHandler.scala:48)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:21:34 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:34063, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply$mcV$sp(AbstractEndToEndTest.scala:474)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:21:34 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:44044, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply$mcV$sp(AbstractEndToEndTest.scala:515)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:21:37 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:43259, label: client).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: localhost/127.0.0.1:43259, Downstream label: client, Trace Id: 357a1211839982ae.357a1211839982ae<:357a1211839982ae

Jul 30, 2019 5:21:37 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:36171, label: http).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: /0.0.0.0:36171, Downstream label: http, Trace Id: 2bd355c3886b7205.2bd355c3886b7205<:2bd355c3886b7205

Jul 30, 2019 5:21:38 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:40716, downstream address: n/a, label: ).
com.twitter.finagle.http.Rfc7230HeaderValidation$ValueValidationException: Header 'foo': value contains a prohibited character '0xc': 
	at com.twitter.finagle.http.Rfc7230HeaderValidation$.validateValue(Rfc7230HeaderValidation.scala:140)
	at com.twitter.finagle.http.DefaultHeaderMap$.com$twitter$finagle$http$DefaultHeaderMap$$foldReplacingValidateValue(DefaultHeaderMap.scala:103)
	at com.twitter.finagle.http.DefaultHeaderMap.add(DefaultHeaderMap.scala:33)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1340)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1337)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:21:39 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleHeadResponse
INFO: Received response to HEAD request (Request("HEAD /", from /127.0.0.1:58410)) that contained a static body of length 10. Discarding body. If this is desired behavior, consider adding HeadFilter to your service
[info] ClientFailHttp2UpgradeTest:
[info] - http/2 client, http/1.1 server: request header fields too large
[info] - http/2 client, http/1.1 server: with default client-side ResponseClassifier
[info] - http/2 client, http/1.1 server: with default server-side ResponseClassifier
[info] - http/2 client, http/1.1 server: unhandled exceptions are converted into 500s
[info] - http/2 client, http/1.1 server: client stack observes max header size
[info] - http/2 client, http/1.1 server: client sets content length
[info] - http/2 client, http/1.1 server: echo
[info] - http/2 client, http/1.1 server: dtab
[info] - http/2 client, http/1.1 server: (no) dtab
[info] - http/2 client, http/1.1 server: context
[info] - http/2 client, http/1.1 server: measure payload size
[info] - http/2 client, http/1.1 server: interrupt requests
[info] - http/2 client, http/1.1 server: interrupting requests doesn't interfere with others
[info] - http/2 client, http/1.1 server: aggregates trailers when streams are aggregated
[info] - http/2 client, http/1.1 server: trace
[info] - http/2 client, http/1.1 server (streaming): stream
[info] - http/2 client, http/1.1 server (streaming): stream via ResponseProxy filter
[info] - http/2 client, http/1.1 server (streaming): aggregates responses that must not have a body
[info] - http/2 client, http/1.1 server (streaming): stream via ResponseProxy class
[info] - http/2 client, http/1.1 server (streaming): streaming clients can decompress content
[info] - http/2 client, http/1.1 server (streaming): symmetric reader and getContent
[info] - http/2 client, http/1.1 server (streaming): transport closure propagates to request stream reader
[info] - http/2 client, http/1.1 server (streaming): transport closure propagates to request stream producer
[info] - http/2 client, http/1.1 server (streaming): request discard terminates remote stream producer
[info] - http/2 client, http/1.1 server (streaming): client discard terminates stream and frees up the connection
[info] - http/2 client, http/1.1 server (streaming): two fixed-length requests
[info] - http/2 client, http/1.1 server (streaming): measure chunk payload size
[info] - Responses with Content-length header larger than 8 KB are not aggregated
[info] - Responses with Content-length header equal to 8 KB are aggregated
[info] - Responses with Content-length header smaller than 8 KB are aggregated
[info] - http/2 client, http/1.1 server: streaming requests can't be retried
[info] - http/2 client, http/1.1 server: streaming session bi-directionally transmit trailing headers
[info] - http/2 client, http/1.1 server: invalid trailer causes server to hang up
[info] - http/2 client, http/1.1 server: PooledByteBufAllocator maxOrder is 7 for servers
[info] - http/2 client, http/1.1 server: PooledByteBufAllocator maxOrder is 7 for clients
[info] - http/2 client, http/1.1 server: nonretryable isn't retried
[info] - Client-side ResponseClassifier based on status code
[info] - server-side ResponseClassifier based on status code
[info] - codec should require a message size be less than 2Gb
[info] - client respects MaxResponseSize
[info] - server rejects illegal headers with a 400
[info] - server rejects illegal trailers with a 400
[info] - client rejects illegal headers with an exception
[info] - client rejects illegal trailer with an exception
[info] - obs-fold sequences are 'fixed' when received by clients
[info] - obs-fold sequences are 'fixed' when received by servers
[info] - server responds with 400 Bad Request if non-ascii character is present in uri
[info] - server responds 500 if an invalid header is being served
[info] - client respects MaxHeaderSize in response
[info] - non-streaming clients can decompress content
[info] - non-streaming clients can disable decompression
[info] - removing the compressor works
[info] - request remote address
[info] - out of order client requests are OK
[info] - http/2 client, http/1.1 server client handles cut connection properly
[info] - Does not retry service acquisition many times when not using FactoryToService
[info] - http/2 client, http/1.1 server: Graceful shutdown & draining
[info] - http/2 client, http/1.1 server: methodBuilder timeouts from Stack
[info] - http/2 client, http/1.1 server: methodBuilder timeouts from ClientBuilder
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header field !!! IGNORED !!!
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header fieldwhen non-empty body is returned !!! IGNORED !!!
[info] - response with status code 100 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 102 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 204 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 304 must not have a message body *BUT* Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - http/2 client, http/1.1 server: HTTP/1.0
[info] - http/2 client, http/1.1 server: initial request line too long
[info] - http/2 client, http/1.1 server (non-streaming): Request with 'Connection: close'
[info] - http/2 client, http/1.1 server (non-streaming): Response with 'Connection: close'
[info] - http/2 client, http/1.1 server (non-streaming): : closes the connection on request header fields too large
[info] - http/2 client, http/1.1 server (non-streaming): HTTP/1.0
[info] - http/2 client, http/1.1 server (streaming): Request with 'Connection: close'
[info] - http/2 client, http/1.1 server (streaming): Response with 'Connection: close'
[info] - http/2 client, http/1.1 server (streaming): : closes the connection on request header fields too large
[info] - http/2 client, http/1.1 server (streaming): HTTP/1.0
[info] - non-streaming server handles expect continue header when autoContinue is disabled
[info] - non-streaming server handles expect continue header when autoContinue is enabled
[info] - streaming server handles expect continue header when autoContinue is disabled
[info] - streaming server handles expect continue header when autoContinue is enabled
[info] - mishandled HEAD request doesn't foul the connection
[info] - mishandled HEAD request with chunked response doesn't foul the connection
[info] - streaming server does not stream sufficiently small fixed length messages
[info] - streaming server won't accept fixed length messages that exceed maxRequestSize
[info] - http/2 client, http/1.1 server: Can initialize multiple pipelines
[info] - http/2 client, http/1.1 server(streaming): Can initialize multiple pipelines
[info] - Upgrade counters are not incremented
[info] ServerSideDecodingTest:
[info] - decode client-side encoded entity bodies
Jul 30, 2019 5:21:39 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:58144, downstream address: n/a, label: server).
java.lang.IllegalArgumentException: bad news
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:217)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:216)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.ThreadUsage$ThreadUsageFilter.apply(ThreadUsage.scala:130)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.DtabStatsFilter.apply(DtabStatsFilter.scala:37)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.StatsFilter.apply(StatsFilter.scala:258)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ServerStatsFilter.apply(ServerStatsFilter.scala:55)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:131)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:92)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelRequestStatsHandler.channelRead(ChannelRequestStatsHandler.scala:48)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:21:39 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:33316, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply$mcV$sp(AbstractEndToEndTest.scala:474)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:21:40 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:46831, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply$mcV$sp(AbstractEndToEndTest.scala:515)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:21:43 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0x18eced8e, L:/127.0.0.1:41348 - R:localhost/127.0.0.1:33221] ignoring DATA frame for stream RST_STREAM sent.
Jul 30, 2019 5:21:43 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0x18eced8e, L:/127.0.0.1:41348 - R:localhost/127.0.0.1:33221] ignoring DATA frame for stream RST_STREAM sent.
Jul 30, 2019 5:21:43 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0x18eced8e, L:/127.0.0.1:41348 - R:localhost/127.0.0.1:33221] ignoring DATA frame for stream RST_STREAM sent.
Jul 30, 2019 5:21:43 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0x18eced8e, L:/127.0.0.1:41348 - R:localhost/127.0.0.1:33221] ignoring DATA frame for stream RST_STREAM sent.
Jul 30, 2019 5:21:43 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0x18eced8e, L:/127.0.0.1:41348 - R:localhost/127.0.0.1:33221] ignoring DATA frame for stream RST_STREAM sent.
Jul 30, 2019 5:21:44 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:33056, downstream address: n/a, label: ).
com.twitter.finagle.http.Rfc7230HeaderValidation$ValueValidationException: Header 'foo': value contains a prohibited character '0xc': 
	at com.twitter.finagle.http.Rfc7230HeaderValidation$.validateValue(Rfc7230HeaderValidation.scala:140)
	at com.twitter.finagle.http.DefaultHeaderMap$.com$twitter$finagle$http$DefaultHeaderMap$$foldReplacingValidateValue(DefaultHeaderMap.scala:103)
	at com.twitter.finagle.http.DefaultHeaderMap.add(DefaultHeaderMap.scala:33)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1340)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1337)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.InboundHttpToHttp2Adapter.handle(InboundHttpToHttp2Adapter.java:67)
	at io.netty.handler.codec.http2.Http2FrameCodec.userEventTriggered(Http2FrameCodec.java:255)
	at io.netty.channel.AbstractChannelHandlerContext.invokeUserEventTriggered(AbstractChannelHandlerContext.java:341)
	at io.netty.channel.AbstractChannelHandlerContext.invokeUserEventTriggered(AbstractChannelHandlerContext.java:327)
	at io.netty.channel.AbstractChannelHandlerContext.fireUserEventTriggered(AbstractChannelHandlerContext.java:319)
	at io.netty.handler.codec.http.HttpServerUpgradeHandler.upgrade(HttpServerUpgradeHandler.java:339)
	at io.netty.handler.codec.http.HttpServerUpgradeHandler.decode(HttpServerUpgradeHandler.java:239)
	at io.netty.handler.codec.http.HttpServerUpgradeHandler.decode(HttpServerUpgradeHandler.java:40)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:88)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:71)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:21:44 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:21:44 PM com.twitter.finagle.http2.transport.H2Filter close
INFO: Closing h2 session with deadline 2019-07-30 17:21:49 +0000
Jul 30, 2019 5:21:44 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:21:44 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:21:44 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:21:45 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:21:45 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 304 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:21:45 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:21:45 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:21:45 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:21:45 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:21:45 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:21:45 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:21:45 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 304 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:21:45 PM com.twitter.finagle.http2.transport.H2Filter close
INFO: Closing h2 session with deadline 2019-07-30 17:31:45 +0000
Jul 30, 2019 5:21:45 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0x2988ec42, L:/127.0.0.1:42919 - R:/127.0.0.1:53264] ignoring HEADERS frame for stream RST_STREAM sent.
Jul 30, 2019 5:21:45 PM io.netty.handler.codec.http2.Http2FrameCodec onHttp2UnknownStreamError
WARNING: Stream exception thrown for unkown stream 3.
io.netty.handler.codec.http2.Http2Exception$StreamException: Invalid HTTP/2 pseudo-header ':invalid' encountered.
	at io.netty.handler.codec.http2.Http2Exception.streamError(Http2Exception.java:129)
	at io.netty.handler.codec.http2.HpackDecoder.validate(HpackDecoder.java:388)
	at io.netty.handler.codec.http2.HpackDecoder.access$000(HpackDecoder.java:54)
	at io.netty.handler.codec.http2.HpackDecoder$Http2HeadersSink.appendToHeaderList(HpackDecoder.java:559)
	at io.netty.handler.codec.http2.HpackDecoder.insertHeader(HpackDecoder.java:426)
	at io.netty.handler.codec.http2.HpackDecoder.decode(HpackDecoder.java:287)
	at io.netty.handler.codec.http2.HpackDecoder.decode(HpackDecoder.java:124)
	at io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder.decodeHeaders(DefaultHttp2HeadersDecoder.java:127)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersBlockBuilder.headers(DefaultHttp2FrameReader.java:743)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

[info] MultiplexedH2CEndToEndTest:
[info] - h2c http/2-multiplex: request header fields too large
[info] - h2c http/2-multiplex: with default client-side ResponseClassifier
[info] - h2c http/2-multiplex: with default server-side ResponseClassifier
[info] - h2c http/2-multiplex: unhandled exceptions are converted into 500s
[info] - h2c http/2-multiplex: client stack observes max header size
[info] - h2c http/2-multiplex: client sets content length
[info] - h2c http/2-multiplex: echo
[info] - h2c http/2-multiplex: dtab
[info] - h2c http/2-multiplex: (no) dtab
[info] - h2c http/2-multiplex: context
[info] - h2c http/2-multiplex: measure payload size
[info] - h2c http/2-multiplex: interrupt requests
[info] - h2c http/2-multiplex: interrupting requests doesn't interfere with others
[info] - h2c http/2-multiplex: aggregates trailers when streams are aggregated
[info] - h2c http/2-multiplex: trace
[info] - h2c http/2-multiplex (streaming): stream
[info] - h2c http/2-multiplex (streaming): stream via ResponseProxy filter
[info] - h2c http/2-multiplex (streaming): aggregates responses that must not have a body
[info] - h2c http/2-multiplex (streaming): stream via ResponseProxy class
[info] - h2c http/2-multiplex (streaming): streaming clients can decompress content
[info] - h2c http/2-multiplex (streaming): symmetric reader and getContent
[info] - h2c http/2-multiplex (streaming): transport closure propagates to request stream reader
[info] - h2c http/2-multiplex (streaming): transport closure propagates to request stream producer
[info] - h2c http/2-multiplex (streaming): request discard terminates remote stream producer
[info] - h2c http/2-multiplex (streaming): client discard terminates stream and frees up the connection
[info] - h2c http/2-multiplex (streaming): two fixed-length requests
[info] - h2c http/2-multiplex (streaming): measure chunk payload size
[info] - Responses with Content-length header larger than 8 KB are not aggregated
[info] - Responses with Content-length header equal to 8 KB are aggregated
[info] - Responses with Content-length header smaller than 8 KB are aggregated
[info] - h2c http/2-multiplex: streaming requests can't be retried
[info] - h2c http/2-multiplex: streaming session bi-directionally transmit trailing headers
[info] - h2c http/2-multiplex: invalid trailer causes server to hang up
[info] - h2c http/2-multiplex: PooledByteBufAllocator maxOrder is 7 for servers
[info] - h2c http/2-multiplex: PooledByteBufAllocator maxOrder is 7 for clients
[info] - h2c http/2-multiplex: nonretryable isn't retried
[info] - Client-side ResponseClassifier based on status code
[info] - server-side ResponseClassifier based on status code
[info] - codec should require a message size be less than 2Gb
[info] - client respects MaxResponseSize
[info] - server rejects illegal headers with a 400
[info] - server rejects illegal trailers with a 400
[info] - client rejects illegal headers with an exception
[info] - client rejects illegal trailer with an exception
[info] - obs-fold sequences are 'fixed' when received by clients
[info] - obs-fold sequences are 'fixed' when received by servers
[info] - server responds with 400 Bad Request if non-ascii character is present in uri
[info] - server responds 500 if an invalid header is being served
[info] - client respects MaxHeaderSize in response !!! IGNORED !!!
[info] - non-streaming clients can decompress content
[info] - non-streaming clients can disable decompression
[info] - removing the compressor works
[info] - request remote address
[info] - out of order client requests are OK
[info] - h2c http/2-multiplex client handles cut connection properly
[info] - Does not retry service acquisition many times when not using FactoryToService
[info] - h2c http/2-multiplex: Graceful shutdown & draining
[info] - h2c http/2-multiplex: methodBuilder timeouts from Stack
[info] - h2c http/2-multiplex: methodBuilder timeouts from ClientBuilder
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header field
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header fieldwhen non-empty body is returned
[info] - response with status code 100 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 102 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 204 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 304 must not have a message body *BUT* Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - client closes properly when closed
[info] - client doesn't honor the Netty stream dependency extension header
[info] - Upgrade stats are properly recorded
[info] - Upgrade ignored
[info] - Server sets & enforces MaxHeaderSize
[info] - H1 related connection headers are stripped
[info] - The TE header is allowed if its value is trailers
[info] - Upgrades to HTTP/2 only if both have the toggle on, and it's H2C, not H2
[info] - Configuration params take precedence over the toggle for the client
[info] - Configuration params take precedence over the toggle for the server
[info] - We delete the HTTP2-SETTINGS header properly
[info] - draining servers process pending requests
[info] - illegal headers produce a non-zero error code on the client
[info] SpnegoAuthenticatorTest:
[info] - no header
[info] - bad header
[info] - malformed token
[info] - success
[info] - isLoginValid returns correct result
Jul 30, 2019 5:21:46 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:44782, downstream address: n/a, label: server).
java.lang.IllegalArgumentException: bad news
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:217)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:216)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.ThreadUsage$ThreadUsageFilter.apply(ThreadUsage.scala:130)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.DtabStatsFilter.apply(DtabStatsFilter.scala:37)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.StatsFilter.apply(StatsFilter.scala:258)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ServerStatsFilter.apply(ServerStatsFilter.scala:55)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:131)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:92)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelRequestStatsHandler.channelRead(ChannelRequestStatsHandler.scala:48)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:21:46 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:35933, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply$mcV$sp(AbstractEndToEndTest.scala:474)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:21:46 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:33048, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply$mcV$sp(AbstractEndToEndTest.scala:515)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:21:49 PM com.twitter.finagle.http2.transport.H2Filter$$anonfun$1$$anon$4 run
INFO: Graceful draining period lapsed. Sending final GOAWAY and closing the connection.
Jul 30, 2019 5:21:50 PM com.twitter.finagle.http2.transport.StreamTransportFactory$StreamTransport com$twitter$finagle$http2$transport$StreamTransportFactory$StreamTransport$$handleBadState
ERROR: Stream 3 bad state: Write to dead stream: DefaultHttpContent(data: ReadOnlyByteBuf(ridx: 0, widx: 1, cap: 1/1, unwrapped: UnpooledHeapByteBuf(ridx: 0, widx: 1, cap: 1/1)), decoderResult: success)
Jul 30, 2019 5:21:50 PM com.twitter.finagle.http2.transport.StreamTransportFactory$StreamTransport com$twitter$finagle$http2$transport$StreamTransportFactory$StreamTransport$$handleBadState
ERROR: Stream 3 bad state: Write to dead stream: DefaultHttpContent(data: ReadOnlyByteBuf(ridx: 0, widx: 1, cap: 1/1, unwrapped: UnpooledHeapByteBuf(ridx: 0, widx: 1, cap: 1/1)), decoderResult: success)
Jul 30, 2019 5:21:50 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:36342, label: http).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: /0.0.0.0:36342, Downstream label: http, Trace Id: ab0924c1dd67060b.ab0924c1dd67060b<:ab0924c1dd67060b

Jul 30, 2019 5:21:50 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:21:50 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:21:50 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:21:50 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:21:50 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:21:50 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:21:50 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:38516, downstream address: n/a, label: ).
com.twitter.finagle.http.Rfc7230HeaderValidation$ValueValidationException: Header 'foo': value contains a prohibited character '0xc': 
	at com.twitter.finagle.http.Rfc7230HeaderValidation$.validateValue(Rfc7230HeaderValidation.scala:140)
	at com.twitter.finagle.http.DefaultHeaderMap$.com$twitter$finagle$http$DefaultHeaderMap$$foldReplacingValidateValue(DefaultHeaderMap.scala:103)
	at com.twitter.finagle.http.DefaultHeaderMap.add(DefaultHeaderMap.scala:33)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1340)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1337)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.InboundHttpToHttp2Adapter.handle(InboundHttpToHttp2Adapter.java:67)
	at io.netty.handler.codec.http2.Http2FrameCodec.userEventTriggered(Http2FrameCodec.java:255)
	at io.netty.channel.AbstractChannelHandlerContext.invokeUserEventTriggered(AbstractChannelHandlerContext.java:341)
	at io.netty.channel.AbstractChannelHandlerContext.invokeUserEventTriggered(AbstractChannelHandlerContext.java:327)
	at io.netty.channel.AbstractChannelHandlerContext.fireUserEventTriggered(AbstractChannelHandlerContext.java:319)
	at io.netty.handler.codec.http.HttpServerUpgradeHandler.upgrade(HttpServerUpgradeHandler.java:339)
	at io.netty.handler.codec.http.HttpServerUpgradeHandler.decode(HttpServerUpgradeHandler.java:239)
	at io.netty.handler.codec.http.HttpServerUpgradeHandler.decode(HttpServerUpgradeHandler.java:40)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:88)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:71)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:21:51 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:21:51 PM com.twitter.finagle.http2.transport.H2Filter close
INFO: Closing h2 session with deadline 2019-07-30 17:21:56 +0000
Jul 30, 2019 5:21:51 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:21:51 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:21:51 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:21:51 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:21:51 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 304 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:21:51 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:21:51 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:21:51 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:21:51 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:21:51 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:21:51 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:21:51 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 304 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:21:52 PM com.twitter.finagle.http2.transport.H2Filter close
INFO: Closing h2 session with deadline 2019-07-30 17:31:52 +0000
Jul 30, 2019 5:21:52 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:21:52 PM io.netty.handler.codec.http2.Http2FrameCodec onHttp2UnknownStreamError
WARNING: Stream exception thrown for unkown stream 3.
io.netty.handler.codec.http2.Http2Exception$StreamException: Invalid HTTP/2 pseudo-header ':invalid' encountered.
	at io.netty.handler.codec.http2.Http2Exception.streamError(Http2Exception.java:129)
	at io.netty.handler.codec.http2.HpackDecoder.validate(HpackDecoder.java:388)
	at io.netty.handler.codec.http2.HpackDecoder.access$000(HpackDecoder.java:54)
	at io.netty.handler.codec.http2.HpackDecoder$Http2HeadersSink.appendToHeaderList(HpackDecoder.java:559)
	at io.netty.handler.codec.http2.HpackDecoder.insertHeader(HpackDecoder.java:426)
	at io.netty.handler.codec.http2.HpackDecoder.decode(HpackDecoder.java:287)
	at io.netty.handler.codec.http2.HpackDecoder.decode(HpackDecoder.java:124)
	at io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder.decodeHeaders(DefaultHttp2HeadersDecoder.java:127)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersBlockBuilder.headers(DefaultHttp2FrameReader.java:743)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

[info] ClassicH2CEndToEndTest:
[info] - h2c http/2: request header fields too large
[info] - h2c http/2: with default client-side ResponseClassifier
[info] - h2c http/2: with default server-side ResponseClassifier
[info] - h2c http/2: unhandled exceptions are converted into 500s
[info] - h2c http/2: client stack observes max header size
[info] - h2c http/2: client sets content length
[info] - h2c http/2: echo
[info] - h2c http/2: dtab
[info] - h2c http/2: (no) dtab
[info] - h2c http/2: context
[info] - h2c http/2: measure payload size
[info] - h2c http/2: interrupt requests
[info] - h2c http/2: interrupting requests doesn't interfere with others
[info] - h2c http/2: aggregates trailers when streams are aggregated
[info] - h2c http/2: trace
[info] - h2c http/2 (streaming): stream
[info] - h2c http/2 (streaming): stream via ResponseProxy filter
[info] - h2c http/2 (streaming): aggregates responses that must not have a body
[info] - h2c http/2 (streaming): stream via ResponseProxy class
[info] - h2c http/2 (streaming): streaming clients can decompress content
[info] - h2c http/2 (streaming): symmetric reader and getContent
[info] - h2c http/2 (streaming): transport closure propagates to request stream reader
[info] - h2c http/2 (streaming): transport closure propagates to request stream producer
[info] - h2c http/2 (streaming): request discard terminates remote stream producer
[info] - h2c http/2 (streaming): client discard terminates stream and frees up the connection
[info] - h2c http/2 (streaming): two fixed-length requests
[info] - h2c http/2 (streaming): measure chunk payload size
[info] - Responses with Content-length header larger than 8 KB are not aggregated
[info] - Responses with Content-length header equal to 8 KB are aggregated
[info] - Responses with Content-length header smaller than 8 KB are aggregated
[info] - h2c http/2: streaming requests can't be retried
[info] - h2c http/2: streaming session bi-directionally transmit trailing headers
[info] - h2c http/2: invalid trailer causes server to hang up
[info] - h2c http/2: PooledByteBufAllocator maxOrder is 7 for servers
[info] - h2c http/2: PooledByteBufAllocator maxOrder is 7 for clients
[info] - h2c http/2: nonretryable isn't retried
[info] - Client-side ResponseClassifier based on status code
[info] - server-side ResponseClassifier based on status code
[info] - codec should require a message size be less than 2Gb
[info] - client respects MaxResponseSize
[info] - server rejects illegal headers with a 400
[info] - server rejects illegal trailers with a 400
[info] - client rejects illegal headers with an exception
[info] - client rejects illegal trailer with an exception
[info] - obs-fold sequences are 'fixed' when received by clients
[info] - obs-fold sequences are 'fixed' when received by servers
[info] - server responds with 400 Bad Request if non-ascii character is present in uri
[info] - server responds 500 if an invalid header is being served
[info] - client respects MaxHeaderSize in response
[info] - non-streaming clients can decompress content
[info] - non-streaming clients can disable decompression
[info] - removing the compressor works
[info] - request remote address
[info] - out of order client requests are OK
[info] - h2c http/2 client handles cut connection properly
[info] - Does not retry service acquisition many times when not using FactoryToService
[info] - h2c http/2: Graceful shutdown & draining
[info] - h2c http/2: methodBuilder timeouts from Stack
[info] - h2c http/2: methodBuilder timeouts from ClientBuilder
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header field
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header fieldwhen non-empty body is returned
[info] - response with status code 100 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 102 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 204 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 304 must not have a message body *BUT* Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - client closes properly when closed
[info] - client doesn't honor the Netty stream dependency extension header
[info] - Upgrade stats are properly recorded
[info] - Upgrade ignored
[info] - Server sets & enforces MaxHeaderSize
[info] - H1 related connection headers are stripped
[info] - The TE header is allowed if its value is trailers
[info] - Upgrades to HTTP/2 only if both have the toggle on, and it's H2C, not H2
[info] - Configuration params take precedence over the toggle for the client
[info] - Configuration params take precedence over the toggle for the server
[info] - We delete the HTTP2-SETTINGS header properly
[info] - draining servers process pending requests
[info] - illegal headers produce a non-zero error code on the client
[info] Netty4MultipartDecoderTest:
[info] - Attribute
[info] - FileUpload (in-memory)
[info] - FileUpload (on-disk)
[info] - Not a multipart request
[debug] Test run started
[debug] Test com.twitter.finagle.http.service.HttpResponseClassifierCompilationTest.testApply started
[debug] Test com.twitter.finagle.http.service.HttpResponseClassifierCompilationTest.testApply finished, took 0.002 sec
[debug] Test com.twitter.finagle.http.service.HttpResponseClassifierCompilationTest.testServerErrorsAsFailures started
[debug] Test com.twitter.finagle.http.service.HttpResponseClassifierCompilationTest.testServerErrorsAsFailures finished, took 0.001 sec
[debug] Test run finished: 0 failed, 0 ignored, 2 total, 0.004s
[info] ClientTest:
[info] AddResponseHeadersFilterTest:
[info] - add headers
[debug] Test run started
[debug] Test com.twitter.finagle.http.service.MethodBuilderCompilationTest.testTimeouts started
[debug] Test com.twitter.finagle.http.service.MethodBuilderCompilationTest.testTimeouts finished, took 0.007 sec
[debug] Test com.twitter.finagle.http.service.MethodBuilderCompilationTest.testRetriesDisabled started
[debug] Test com.twitter.finagle.http.service.MethodBuilderCompilationTest.testRetriesDisabled finished, took 0.006 sec
[debug] Test com.twitter.finagle.http.service.MethodBuilderCompilationTest.testRetries started
[debug] Test com.twitter.finagle.http.service.MethodBuilderCompilationTest.testRetries finished, took 0.005 sec
[debug] Test run finished: 0 failed, 0 ignored, 3 total, 0.02s
Jul 30, 2019 5:21:52 PM com.twitter.finagle.http.filter.ClientNackFilter$$anonfun$com$twitter$finagle$http$filter$ClientNackFilter$$swallowNackBody$1 apply
WARNING: Received an excessively large nack response body.
Jul 30, 2019 5:21:52 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:39679, label: http).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: /0.0.0.0:39679, Downstream label: http, Trace Id: fd8a5f75134d166d.fd8a5f75134d166d<:fd8a5f75134d166d

[info] ClientNackFilterTest:
[info] - converts nacked requests into failures with the right flags
[info] - Lets a regular request through
[info] - Converts an aggregated Nack response
[info] - swallows the body of a HttpNack if it happens to come as a chunked response
[info] - fails on excessively large nack response
[info] - always marks streaming requests as non-retryable
[info] - adds the magic header to requests that aren't chunked
[info] - multiple nack headers are not added if the request is retried
Jul 30, 2019 5:21:53 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:38912, downstream address: n/a, label: server).
org.scalatest.exceptions.TestFailedException: "[]" did not equal "[hello]"
	at org.scalatest.Assertions$class.newAssertionFailedException(Assertions.scala:528)
	at org.scalatest.FunSuite.newAssertionFailedException(FunSuite.scala:1560)
	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:501)
	at com.twitter.finagle.http.AbstractStreamingTest$$anonfun$11$$anonfun$27.apply(AbstractStreamingTest.scala:368)
	at com.twitter.finagle.http.AbstractStreamingTest$$anonfun$11$$anonfun$27.apply(AbstractStreamingTest.scala:367)
	at com.twitter.finagle.Service$$anon$2.apply(Service.scala:29)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter$$anonfun$apply$1.apply(HttpNackFilter.scala:159)
	at com.twitter.finagle.http.filter.HttpNackFilter$$anonfun$apply$1.apply(HttpNackFilter.scala:159)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:158)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:36)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.HttpServerExpectContinueHandler.channelRead(HttpServerExpectContinueHandler.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.http.handler.PayloadSizeHandler.channelRead(PayloadSizeHandler.scala:59)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.Http2CleartextServerInitializer$MaybeUpgradeHandler.channelRead(Http2CleartextServerInitializer.scala:105)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:426)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:71)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:21:53 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:35865, label: client).
java.lang.Exception
	at com.twitter.finagle.http.AbstractStreamingTest$$anonfun$30.apply(AbstractStreamingTest.scala:424)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at org.scalatest.FunSuite.run(FunSuite.scala:1560)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

[info] Http2StreamingTest:
[info] - client: request stream fails on write
[info] - client: response stream fails on read
[info] - client: server disconnect on pending response should fail request
[info] - client: client closes transport after server disconnects
[info] - client: fail request writer
[info] - client: discard respond reader
[info] - server: request stream fails read
[info] - server: response stream fails write
[info] - server: fail response writer
[info] - server: fail request reader
[info] - server: empty buf doesn't close response stream
[info] - client: empty buf doesn't close request stream
[info] - end-to-end: server gets content for chunked request made to client with content length
[info] - end-to-end: client may process multiple streaming requests simultaneously
[info] - server: inbound stream (reader) propagates closures initiated remotely
[info] - server: outbound stream (writer) propagates closures initiated remotely
[info] - client: inbound stream (reader) propagates closures initiated remotely
[info] - client: outbound stream (writer) propagates closures initiated remotely
[info] MultiplexedHttp2AlpnTest:
[info] - alpn http/2-multiplex: request header fields too large !!! IGNORED !!!
[info] - alpn http/2-multiplex: with default client-side ResponseClassifier !!! IGNORED !!!
[info] - alpn http/2-multiplex: with default server-side ResponseClassifier !!! IGNORED !!!
[info] - alpn http/2-multiplex: unhandled exceptions are converted into 500s !!! IGNORED !!!
[info] - alpn http/2-multiplex: client stack observes max header size !!! IGNORED !!!
[info] - alpn http/2-multiplex: client sets content length !!! IGNORED !!!
[info] - alpn http/2-multiplex: echo !!! IGNORED !!!
[info] - alpn http/2-multiplex: dtab !!! IGNORED !!!
[info] - alpn http/2-multiplex: (no) dtab !!! IGNORED !!!
[info] - alpn http/2-multiplex: context !!! IGNORED !!!
[info] - alpn http/2-multiplex: measure payload size !!! IGNORED !!!
[info] - alpn http/2-multiplex: interrupt requests !!! IGNORED !!!
[info] - alpn http/2-multiplex: interrupting requests doesn't interfere with others !!! IGNORED !!!
[info] - alpn http/2-multiplex: aggregates trailers when streams are aggregated !!! IGNORED !!!
[info] - alpn http/2-multiplex: trace !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): stream !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): stream via ResponseProxy filter !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): aggregates responses that must not have a body !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): stream via ResponseProxy class !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): streaming clients can decompress content !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): symmetric reader and getContent !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): transport closure propagates to request stream reader !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): transport closure propagates to request stream producer !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): request discard terminates remote stream producer !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): client discard terminates stream and frees up the connection !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): two fixed-length requests !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): measure chunk payload size !!! IGNORED !!!
[info] - Responses with Content-length header larger than 8 KB are not aggregated !!! IGNORED !!!
[info] - Responses with Content-length header equal to 8 KB are aggregated !!! IGNORED !!!
[info] - Responses with Content-length header smaller than 8 KB are aggregated !!! IGNORED !!!
[info] - alpn http/2-multiplex: streaming requests can't be retried !!! IGNORED !!!
[info] - alpn http/2-multiplex: streaming session bi-directionally transmit trailing headers !!! IGNORED !!!
[info] - alpn http/2-multiplex: invalid trailer causes server to hang up !!! IGNORED !!!
[info] - alpn http/2-multiplex: PooledByteBufAllocator maxOrder is 7 for servers !!! IGNORED !!!
[info] - alpn http/2-multiplex: PooledByteBufAllocator maxOrder is 7 for clients !!! IGNORED !!!
[info] - alpn http/2-multiplex: nonretryable isn't retried !!! IGNORED !!!
[info] - Client-side ResponseClassifier based on status code !!! IGNORED !!!
[info] - server-side ResponseClassifier based on status code !!! IGNORED !!!
[info] - codec should require a message size be less than 2Gb !!! IGNORED !!!
[info] - client respects MaxResponseSize !!! IGNORED !!!
[info] - server rejects illegal headers with a 400 !!! IGNORED !!!
[info] - server rejects illegal trailers with a 400 !!! IGNORED !!!
[info] - client rejects illegal headers with an exception !!! IGNORED !!!
[info] - client rejects illegal trailer with an exception !!! IGNORED !!!
[info] - obs-fold sequences are 'fixed' when received by clients !!! IGNORED !!!
[info] - obs-fold sequences are 'fixed' when received by servers !!! IGNORED !!!
[info] - server responds with 400 Bad Request if non-ascii character is present in uri !!! IGNORED !!!
[info] - server responds 500 if an invalid header is being served !!! IGNORED !!!
[info] - client respects MaxHeaderSize in response !!! IGNORED !!!
[info] - non-streaming clients can decompress content !!! IGNORED !!!
[info] - non-streaming clients can disable decompression !!! IGNORED !!!
[info] - removing the compressor works !!! IGNORED !!!
[info] - request remote address !!! IGNORED !!!
[info] - out of order client requests are OK !!! IGNORED !!!
[info] - alpn http/2-multiplex client handles cut connection properly !!! IGNORED !!!
[info] - Does not retry service acquisition many times when not using FactoryToService !!! IGNORED !!!
[info] - alpn http/2-multiplex: Graceful shutdown & draining !!! IGNORED !!!
[info] - alpn http/2-multiplex: methodBuilder timeouts from Stack !!! IGNORED !!!
[info] - alpn http/2-multiplex: methodBuilder timeouts from ClientBuilder !!! IGNORED !!!
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header field !!! IGNORED !!!
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header fieldwhen non-empty body is returned !!! IGNORED !!!
[info] - response with status code 100 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 102 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 204 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 304 must not have a message body *BUT* Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - client closes properly when closed !!! IGNORED !!!
[info] - client doesn't honor the Netty stream dependency extension header !!! IGNORED !!!
[info] - An alpn connection counts as one upgrade for stats !!! IGNORED !!!
[info] - Upgrades to HTTP/2 only if both have the toggle on and it's H2, not H2C !!! IGNORED !!!
[info] - clients don't leak connections when h2 is rejected !!! IGNORED !!!
Jul 30, 2019 5:21:54 PM com.twitter.util.RootMonitor$$anonfun$2 applyOrElse
SEVERE: Exception propagated to the root monitor!
org.scalatest.exceptions.TestFailedException: Expected None; got close(Time.Bottom)
	at org.scalatest.Assertions$class.newAssertionFailedException(Assertions.scala:528)
	at org.scalatest.Assertions$.newAssertionFailedException(Assertions.scala:1387)
	at org.scalatest.Assertions$class.fail(Assertions.scala:1089)
	at org.scalatest.Assertions$.fail(Assertions.scala:1387)
	at com.twitter.finagle.http.codec.OpTransport.close(HttpClientDispatcherTest.scala:74)
	at com.twitter.finagle.http.exp.StreamTransportProxy.close(StreamTransport.scala:42)
	at com.twitter.util.Closable$class.close(Closable.scala:21)
	at com.twitter.finagle.http.exp.StreamTransportProxy.close(StreamTransport.scala:36)
	at com.twitter.finagle.http.codec.HttpClientDispatcher$$anonfun$dispatch$2.apply(HttpClientDispatcher.scala:45)
	at com.twitter.finagle.http.codec.HttpClientDispatcher$$anonfun$dispatch$2.apply(HttpClientDispatcher.scala:38)
	at com.twitter.util.Future$$anonfun$onFailure$1.apply(Future.scala:1943)
	at com.twitter.util.Future$$anonfun$onFailure$1.apply(Future.scala:1942)
	at com.twitter.util.Promise$Monitored.apply(Promise.scala:211)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:790)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setException(Promise.scala:752)
	at com.twitter.finagle.http.codec.HttpClientDispatcherTest$$anonfun$6.apply(HttpClientDispatcherTest.scala:237)
	at com.twitter.finagle.http.codec.HttpClientDispatcherTest$$anonfun$6.apply(HttpClientDispatcherTest.scala:214)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at org.scalatest.FunSuite.run(FunSuite.scala:1560)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:21:54 PM com.twitter.util.RootMonitor$$anonfun$2 applyOrElse
SEVERE: Exception propagated to the root monitor!
org.scalatest.exceptions.TestFailedException: Expected None; got close(Time.Bottom)
	at org.scalatest.Assertions$class.newAssertionFailedException(Assertions.scala:528)
	at org.scalatest.Assertions$.newAssertionFailedException(Assertions.scala:1387)
	at org.scalatest.Assertions$class.fail(Assertions.scala:1089)
	at org.scalatest.Assertions$.fail(Assertions.scala:1387)
	at com.twitter.finagle.http.codec.OpTransport.close(HttpClientDispatcherTest.scala:74)
	at com.twitter.finagle.http.exp.StreamTransportProxy.close(StreamTransport.scala:42)
	at com.twitter.util.Closable$class.close(Closable.scala:21)
	at com.twitter.finagle.http.exp.StreamTransportProxy.close(StreamTransport.scala:36)
	at com.twitter.finagle.http.codec.HttpClientDispatcher$$anonfun$dispatch$2.apply(HttpClientDispatcher.scala:45)
	at com.twitter.finagle.http.codec.HttpClientDispatcher$$anonfun$dispatch$2.apply(HttpClientDispatcher.scala:38)
	at com.twitter.util.Future$$anonfun$onFailure$1.apply(Future.scala:1943)
	at com.twitter.util.Future$$anonfun$onFailure$1.apply(Future.scala:1942)
	at com.twitter.util.Promise$Monitored.apply(Promise.scala:211)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:790)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setException(Promise.scala:752)
	at com.twitter.finagle.http.codec.HttpClientDispatcherTest$$anonfun$8.apply(HttpClientDispatcherTest.scala:268)
	at com.twitter.finagle.http.codec.HttpClientDispatcherTest$$anonfun$8.apply(HttpClientDispatcherTest.scala:243)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at org.scalatest.FunSuite.run(FunSuite.scala:1560)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:21:54 PM com.twitter.util.RootMonitor$$anonfun$2 applyOrElse
SEVERE: Exception propagated to the root monitor!
org.scalatest.exceptions.TestFailedException: Expected None; got close(Time.Bottom)
	at org.scalatest.Assertions$class.newAssertionFailedException(Assertions.scala:528)
	at org.scalatest.Assertions$.newAssertionFailedException(Assertions.scala:1387)
	at org.scalatest.Assertions$class.fail(Assertions.scala:1089)
	at org.scalatest.Assertions$.fail(Assertions.scala:1387)
	at com.twitter.finagle.http.codec.OpTransport.close(HttpClientDispatcherTest.scala:74)
	at com.twitter.finagle.http.exp.StreamTransportProxy.close(StreamTransport.scala:42)
	at com.twitter.util.Closable$class.close(Closable.scala:21)
	at com.twitter.finagle.http.exp.StreamTransportProxy.close(StreamTransport.scala:36)
	at com.twitter.finagle.http.codec.HttpClientDispatcher$$anonfun$dispatch$2.apply(HttpClientDispatcher.scala:45)
	at com.twitter.finagle.http.codec.HttpClientDispatcher$$anonfun$dispatch$2.apply(HttpClientDispatcher.scala:38)
	at com.twitter.util.Future$$anonfun$onFailure$1.apply(Future.scala:1943)
	at com.twitter.util.Future$$anonfun$onFailure$1.apply(Future.scala:1942)
	at com.twitter.util.Promise$Monitored.apply(Promise.scala:211)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:790)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setException(Promise.scala:752)
	at com.twitter.finagle.http.codec.HttpClientDispatcherTest$$anonfun$10.apply(HttpClientDispatcherTest.scala:306)
	at com.twitter.finagle.http.codec.HttpClientDispatcherTest$$anonfun$10.apply(HttpClientDispatcherTest.scala:276)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at org.scalatest.FunSuite.run(FunSuite.scala:1560)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

[info] HttpClientDispatcherTest:
[info] - streaming request body
[info] - invalid message
[info] - not chunked
[info] - chunked
[info] - error mid-chunk
[info] - upstream interrupt: before write
[info] - upstream interrupt: during req stream (read)
[info] - upstream interrupt: during req stream (write)
[info] PayloadSizeFilterTest:
[info] - nonStreaming -- traces sizes when actively tracing
[info] - nonStreaming -- doesn't trace sizes when not actively tracing
[info] - nonStreaming -- records metrics
[info] - streaming -- traces sizes when actively tracing
[info] - streaming -- doesn't trace sizes when not actively tracing
[info] - streaming -- records metrics
[info] HttpServerDispatcherTest:
[info] - invalid message
[info] - don't clobber service 'Connection: close' headers set by service
[info] - streaming request body
[info] - client abort before dispatch
[info] - client abort after dispatch
[info] - server response fails mid-stream
[info] ClassicHttp2AlpnTest:
[info] - alpn http/2: request header fields too large !!! IGNORED !!!
[info] - alpn http/2: with default client-side ResponseClassifier !!! IGNORED !!!
[info] - alpn http/2: with default server-side ResponseClassifier !!! IGNORED !!!
[info] - alpn http/2: unhandled exceptions are converted into 500s !!! IGNORED !!!
[info] - alpn http/2: client stack observes max header size !!! IGNORED !!!
[info] - alpn http/2: client sets content length !!! IGNORED !!!
[info] - alpn http/2: echo !!! IGNORED !!!
[info] - alpn http/2: dtab !!! IGNORED !!!
[info] - alpn http/2: (no) dtab !!! IGNORED !!!
[info] - alpn http/2: context !!! IGNORED !!!
[info] - alpn http/2: measure payload size !!! IGNORED !!!
[info] - alpn http/2: interrupt requests !!! IGNORED !!!
[info] - alpn http/2: interrupting requests doesn't interfere with others !!! IGNORED !!!
[info] - alpn http/2: aggregates trailers when streams are aggregated !!! IGNORED !!!
[info] - alpn http/2: trace !!! IGNORED !!!
[info] - alpn http/2 (streaming): stream !!! IGNORED !!!
[info] - alpn http/2 (streaming): stream via ResponseProxy filter !!! IGNORED !!!
[info] - alpn http/2 (streaming): aggregates responses that must not have a body !!! IGNORED !!!
[info] - alpn http/2 (streaming): stream via ResponseProxy class !!! IGNORED !!!
[info] - alpn http/2 (streaming): streaming clients can decompress content !!! IGNORED !!!
[info] - alpn http/2 (streaming): symmetric reader and getContent !!! IGNORED !!!
[info] - alpn http/2 (streaming): transport closure propagates to request stream reader !!! IGNORED !!!
[info] - alpn http/2 (streaming): transport closure propagates to request stream producer !!! IGNORED !!!
[info] - alpn http/2 (streaming): request discard terminates remote stream producer !!! IGNORED !!!
[info] - alpn http/2 (streaming): client discard terminates stream and frees up the connection !!! IGNORED !!!
[info] - alpn http/2 (streaming): two fixed-length requests !!! IGNORED !!!
[info] - alpn http/2 (streaming): measure chunk payload size !!! IGNORED !!!
[info] - Responses with Content-length header larger than 8 KB are not aggregated !!! IGNORED !!!
[info] - Responses with Content-length header equal to 8 KB are aggregated !!! IGNORED !!!
[info] - Responses with Content-length header smaller than 8 KB are aggregated !!! IGNORED !!!
[info] - alpn http/2: streaming requests can't be retried !!! IGNORED !!!
[info] - alpn http/2: streaming session bi-directionally transmit trailing headers !!! IGNORED !!!
[info] - alpn http/2: invalid trailer causes server to hang up !!! IGNORED !!!
[info] - alpn http/2: PooledByteBufAllocator maxOrder is 7 for servers !!! IGNORED !!!
[info] - alpn http/2: PooledByteBufAllocator maxOrder is 7 for clients !!! IGNORED !!!
[info] - alpn http/2: nonretryable isn't retried !!! IGNORED !!!
[info] - Client-side ResponseClassifier based on status code !!! IGNORED !!!
[info] - server-side ResponseClassifier based on status code !!! IGNORED !!!
[info] - codec should require a message size be less than 2Gb !!! IGNORED !!!
[info] - client respects MaxResponseSize !!! IGNORED !!!
[info] - server rejects illegal headers with a 400 !!! IGNORED !!!
[info] - server rejects illegal trailers with a 400 !!! IGNORED !!!
[info] - client rejects illegal headers with an exception !!! IGNORED !!!
[info] - client rejects illegal trailer with an exception !!! IGNORED !!!
[info] - obs-fold sequences are 'fixed' when received by clients !!! IGNORED !!!
[info] - obs-fold sequences are 'fixed' when received by servers !!! IGNORED !!!
[info] - server responds with 400 Bad Request if non-ascii character is present in uri !!! IGNORED !!!
[info] - server responds 500 if an invalid header is being served !!! IGNORED !!!
[info] - client respects MaxHeaderSize in response !!! IGNORED !!!
[info] - non-streaming clients can decompress content !!! IGNORED !!!
[info] - non-streaming clients can disable decompression !!! IGNORED !!!
[info] - removing the compressor works !!! IGNORED !!!
[info] - request remote address !!! IGNORED !!!
[info] - out of order client requests are OK !!! IGNORED !!!
[info] - alpn http/2 client handles cut connection properly !!! IGNORED !!!
[info] - Does not retry service acquisition many times when not using FactoryToService !!! IGNORED !!!
[info] - alpn http/2: Graceful shutdown & draining !!! IGNORED !!!
[info] - alpn http/2: methodBuilder timeouts from Stack !!! IGNORED !!!
[info] - alpn http/2: methodBuilder timeouts from ClientBuilder !!! IGNORED !!!
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header field !!! IGNORED !!!
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header fieldwhen non-empty body is returned !!! IGNORED !!!
[info] - response with status code 100 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 102 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 204 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 304 must not have a message body *BUT* Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - client closes properly when closed !!! IGNORED !!!
[info] - client doesn't honor the Netty stream dependency extension header !!! IGNORED !!!
[info] - An alpn connection counts as one upgrade for stats !!! IGNORED !!!
[info] - Upgrades to HTTP/2 only if both have the toggle on and it's H2, not H2C !!! IGNORED !!!
[debug] Test run started
[debug] Test com.twitter.finagle.http.HttpMuxerCompilationTest.testHttpMuxer started
[debug] Test com.twitter.finagle.http.HttpMuxerCompilationTest.testHttpMuxer finished, took 0.002 sec
[debug] Test run finished: 0 failed, 0 ignored, 1 total, 0.003s
[info] StatsFilterTest:
[info] - increment stats
[info] - status and time counters and stats are memoized
[info] RequestBuilderTest:
[info] - reject non-http urls
[info] - set the HOST header
[info] - set the HOST header when the HOST contains underscores
[info] - set the Authorization header when userInfo is present
[info] - replace the empty path with /
[info] - not include the fragment in the resource
[info] - not include the empty query string
[info] - set the correct protocol version
[info] - set the correct method
[info] - set headers
[info] - build form
[info] - build multipart form
[info] HeadFilterTest:
[info] - convert GET to HEAD
[info] - GET is normal
[debug] Test run started
[debug] Test com.twitter.finagle.http2.param.StackParamCompilationTest.testParams started
[debug] Test com.twitter.finagle.http2.param.StackParamCompilationTest.testParams finished, took 0.001 sec
[debug] Test run finished: 0 failed, 0 ignored, 1 total, 0.001s
[info] JsonpFilterTest:
[info] - wrap json
[info] - ignore non-json
[info] - ignore HEAD
[info] - ignore empty callback
Jul 30, 2019 5:21:54 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:48290, downstream address: n/a, label: server).
java.lang.IllegalArgumentException: bad news
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:217)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:216)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.ThreadUsage$ThreadUsageFilter.apply(ThreadUsage.scala:130)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.DtabStatsFilter.apply(DtabStatsFilter.scala:37)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.StatsFilter.apply(StatsFilter.scala:258)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ServerStatsFilter.apply(ServerStatsFilter.scala:55)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:131)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:92)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelRequestStatsHandler.channelRead(ChannelRequestStatsHandler.scala:48)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:21:54 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:39830, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply$mcV$sp(AbstractEndToEndTest.scala:474)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:21:54 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:35732, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply$mcV$sp(AbstractEndToEndTest.scala:515)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:21:56 PM com.twitter.finagle.http2.transport.H2Filter$$anonfun$1$$anon$4 run
INFO: Graceful draining period lapsed. Sending final GOAWAY and closing the connection.
Jul 30, 2019 5:21:58 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:35147, label: client).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: localhost/127.0.0.1:35147, Downstream label: client, Trace Id: fcc6164c6dc3ffa1.fcc6164c6dc3ffa1<:fcc6164c6dc3ffa1

Jul 30, 2019 5:21:58 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:34671, label: http).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: /0.0.0.0:34671, Downstream label: http, Trace Id: a473a6d4abc709f6.a473a6d4abc709f6<:a473a6d4abc709f6

Jul 30, 2019 5:21:58 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:34512, downstream address: n/a, label: ).
com.twitter.finagle.http.Rfc7230HeaderValidation$ValueValidationException: Header 'foo': value contains a prohibited character '0xc': 
	at com.twitter.finagle.http.Rfc7230HeaderValidation$.validateValue(Rfc7230HeaderValidation.scala:140)
	at com.twitter.finagle.http.DefaultHeaderMap$.com$twitter$finagle$http$DefaultHeaderMap$$foldReplacingValidateValue(DefaultHeaderMap.scala:103)
	at com.twitter.finagle.http.DefaultHeaderMap.add(DefaultHeaderMap.scala:33)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1340)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1337)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:21:59 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleHeadResponse
INFO: Received response to HEAD request (Request("HEAD /", from /127.0.0.1:48918)) that contained a static body of length 10. Discarding body. If this is desired behavior, consider adding HeadFilter to your service
[info] Netty4EndToEndTest:
[info] - netty4 http/1.1: request header fields too large
[info] - netty4 http/1.1: with default client-side ResponseClassifier
[info] - netty4 http/1.1: with default server-side ResponseClassifier
[info] - netty4 http/1.1: unhandled exceptions are converted into 500s
[info] - netty4 http/1.1: client stack observes max header size
[info] - netty4 http/1.1: client sets content length
[info] - netty4 http/1.1: echo
[info] - netty4 http/1.1: dtab
[info] - netty4 http/1.1: (no) dtab
[info] - netty4 http/1.1: context
[info] - netty4 http/1.1: measure payload size
[info] - netty4 http/1.1: interrupt requests
[info] - netty4 http/1.1: interrupting requests doesn't interfere with others
[info] - netty4 http/1.1: aggregates trailers when streams are aggregated
[info] - netty4 http/1.1: trace
[info] - netty4 http/1.1 (streaming): stream
[info] - netty4 http/1.1 (streaming): stream via ResponseProxy filter
[info] - netty4 http/1.1 (streaming): aggregates responses that must not have a body
[info] - netty4 http/1.1 (streaming): stream via ResponseProxy class
[info] - netty4 http/1.1 (streaming): streaming clients can decompress content
[info] - netty4 http/1.1 (streaming): symmetric reader and getContent
[info] - netty4 http/1.1 (streaming): transport closure propagates to request stream reader
[info] - netty4 http/1.1 (streaming): transport closure propagates to request stream producer
[info] - netty4 http/1.1 (streaming): request discard terminates remote stream producer
[info] - netty4 http/1.1 (streaming): client discard terminates stream and frees up the connection
[info] - netty4 http/1.1 (streaming): two fixed-length requests
[info] - netty4 http/1.1 (streaming): measure chunk payload size
[info] - Responses with Content-length header larger than 8 KB are not aggregated
[info] - Responses with Content-length header equal to 8 KB are aggregated
[info] - Responses with Content-length header smaller than 8 KB are aggregated
[info] - netty4 http/1.1: streaming requests can't be retried
[info] - netty4 http/1.1: streaming session bi-directionally transmit trailing headers
[info] - netty4 http/1.1: invalid trailer causes server to hang up
[info] - netty4 http/1.1: PooledByteBufAllocator maxOrder is 7 for servers
[info] - netty4 http/1.1: PooledByteBufAllocator maxOrder is 7 for clients
[info] - netty4 http/1.1: nonretryable isn't retried
[info] - Client-side ResponseClassifier based on status code
[info] - server-side ResponseClassifier based on status code
[info] - codec should require a message size be less than 2Gb
[info] - client respects MaxResponseSize
[info] - server rejects illegal headers with a 400
[info] - server rejects illegal trailers with a 400
[info] - client rejects illegal headers with an exception
[info] - client rejects illegal trailer with an exception
[info] - obs-fold sequences are 'fixed' when received by clients
[info] - obs-fold sequences are 'fixed' when received by servers
[info] - server responds with 400 Bad Request if non-ascii character is present in uri
[info] - server responds 500 if an invalid header is being served
[info] - client respects MaxHeaderSize in response
[info] - non-streaming clients can decompress content
[info] - non-streaming clients can disable decompression
[info] - removing the compressor works
[info] - request remote address
[info] - out of order client requests are OK
[info] - netty4 http/1.1 client handles cut connection properly
[info] - Does not retry service acquisition many times when not using FactoryToService
[info] - netty4 http/1.1: Graceful shutdown & draining
[info] - netty4 http/1.1: methodBuilder timeouts from Stack
[info] - netty4 http/1.1: methodBuilder timeouts from ClientBuilder
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header field !!! IGNORED !!!
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header fieldwhen non-empty body is returned !!! IGNORED !!!
[info] - response with status code 100 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 102 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 204 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 304 must not have a message body *BUT* Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - netty4 http/1.1: HTTP/1.0
[info] - netty4 http/1.1: initial request line too long
[info] - netty4 http/1.1 (non-streaming): Request with 'Connection: close'
[info] - netty4 http/1.1 (non-streaming): Response with 'Connection: close'
[info] - netty4 http/1.1 (non-streaming): : closes the connection on request header fields too large
[info] - netty4 http/1.1 (non-streaming): HTTP/1.0
[info] - netty4 http/1.1 (streaming): Request with 'Connection: close'
[info] - netty4 http/1.1 (streaming): Response with 'Connection: close'
[info] - netty4 http/1.1 (streaming): : closes the connection on request header fields too large
[info] - netty4 http/1.1 (streaming): HTTP/1.0
[info] - non-streaming server handles expect continue header when autoContinue is disabled
[info] - non-streaming server handles expect continue header when autoContinue is enabled
[info] - streaming server handles expect continue header when autoContinue is disabled
[info] - streaming server handles expect continue header when autoContinue is enabled
[info] - mishandled HEAD request doesn't foul the connection
[info] - mishandled HEAD request with chunked response doesn't foul the connection
[info] - streaming server does not stream sufficiently small fixed length messages
[info] - streaming server won't accept fixed length messages that exceed maxRequestSize
[info] - netty4 http/1.1: Can initialize multiple pipelines
[info] - netty4 http/1.1(streaming): Can initialize multiple pipelines
Jul 30, 2019 5:21:59 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:42610, label: http).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: /0.0.0.0:42610, Downstream label: http, Trace Id: 7a47ea038d663c83.7a47ea038d663c83<:7a47ea038d663c83

Jul 30, 2019 5:21:59 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:34771, label: http).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: /0.0.0.0:34771, Downstream label: http, Trace Id: 2cfb43a65a3f3455.2cfb43a65a3f3455<:2cfb43a65a3f3455

Jul 30, 2019 5:21:59 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:47896, downstream address: n/a, label: myservice).
java.lang.Exception
	at com.twitter.finagle.http.NackTest$ClientCtx$$anon$1.apply(NackTest.scala:21)
	at com.twitter.finagle.http.NackTest$ClientCtx$$anon$1.apply(NackTest.scala:18)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.ThreadUsage$ThreadUsageFilter.apply(ThreadUsage.scala:130)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.DtabStatsFilter.apply(DtabStatsFilter.scala:37)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.StatsFilter.apply(StatsFilter.scala:258)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ServerStatsFilter.apply(ServerStatsFilter.scala:55)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:131)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:92)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelRequestStatsHandler.channelRead(ChannelRequestStatsHandler.scala:48)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

[info] NackTest:
[info] - automatically retries with HttpNack if restartable
[info] - converts non-restartable/non-retryable Failures
[info] - HttpNack works with ClientBuilder
[info] - HttpNack works with ServerBuilder
[info] - a server that doesn't support HttpNack fails the request
[info] - HttpNack does not convert non-rejected, non-restartable failures
[info] RoutingServiceTest:
[info] - RoutingService.byPath
[info] - RoutingService.byPathObject
[info] - RoutingService.byMethodAndPath
[info] - RoutingService.byMethodAndPathObject
[info] LoggingFilterTest:
[info] - log
[info] - escape() escapes non-printable, non-ASCII
[info] - DateFormat keeps consistent
[info] ScalaTest
[info] Run completed in 1 minute, 19 seconds.
[info] Total number of tests run: 724
[info] Suites: completed 42, aborted 0
[info] Tests: succeeded 723, failed 1, canceled 0, ignored 162, pending 0
[info] *** 1 TEST FAILED ***
[error] Failed: Total 735, Failed 1, Errors 0, Passed 734, Ignored 162
[error] Failed tests:
[error] 	com.twitter.finagle.http.Http2PriorKnowledgeTest
[error] (finagle-http / Test / test) sbt.TestsFailedException: Tests unsuccessful
[error] Total time: 93 s, completed Jul 30, 2019 5:22:02 PM

[31;1mThe command "./sbt ++2.11.12 coverage finagle-http/test coverageReport" failed. Retrying, 3 of 3.[0m

[info] Loading settings from build.sbt,unidoc.sbt,plugins.sbt ...
[info] Loading project definition from /home/travis/build/twitter/finagle/project
[info] Loading settings from build.sbt ...
[info] Resolving key references (17383 settings) ...
[info] Using Netty SNAPSHOT build mode: false
[info] Netty version: 4.1.35.Final
[info] Netty tcnative version 2.0.25.Final
[info] Set current project to finagle (in build file:/home/travis/build/twitter/finagle/)
[info] Setting Scala version to 2.11.12 on 30 projects.
[info] Reapplying settings...
[info] Using Netty SNAPSHOT build mode: false
[info] Netty version: 4.1.35.Final
[info] Netty tcnative version 2.0.25.Final
[info] Set current project to finagle (in build file:/home/travis/build/twitter/finagle/)
[info] Defining ThisBuild / coverageEnabled
[info] The new value will be used by Compile / compile / scalacOptions, finagle-base-http / Compile / compile / scalacOptions and 57 others.
[info] 	Run `last` for details.
[info] Reapplying settings...
[info] Using Netty SNAPSHOT build mode: false
[info] Netty version: 4.1.35.Final
[info] Netty tcnative version 2.0.25.Final
[info] Set current project to finagle (in build file:/home/travis/build/twitter/finagle/)
[warn] javaOptions will be ignored, fork is set to false
Jul 30, 2019 5:22:47 PM com.twitter.finagle.http.filter.ExceptionFilter$$anonfun$apply$1 applyOrElse
WARNING: exception: uri:/?exception=true exception:java.lang.Exception
java.lang.Exception
	at com.twitter.finagle.http.filter.ExceptionFilterTest$$anon$1.apply(ExceptionFilterTest.scala:17)
	at com.twitter.finagle.http.filter.ExceptionFilterTest$$anon$1.apply(ExceptionFilterTest.scala:11)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ExceptionFilter.liftedTree1$1(ExceptionFilter.scala:24)
	at com.twitter.finagle.http.filter.ExceptionFilter.apply(ExceptionFilter.scala:23)
	at com.twitter.finagle.http.filter.ExceptionFilter.apply(ExceptionFilter.scala:17)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.filter.ExceptionFilterTest$$anonfun$2.apply(ExceptionFilterTest.scala:40)
	at com.twitter.finagle.http.filter.ExceptionFilterTest$$anonfun$2.apply(ExceptionFilterTest.scala:38)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at org.scalatest.FunSuite.run(FunSuite.scala:1560)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:22:47 PM com.twitter.finagle.http.filter.ExceptionFilter$$anonfun$apply$1 applyOrElse
WARNING: exception: uri:/?throw=true exception:java.lang.Exception
java.lang.Exception
	at com.twitter.finagle.http.filter.ExceptionFilterTest$$anon$1.apply(ExceptionFilterTest.scala:19)
	at com.twitter.finagle.http.filter.ExceptionFilterTest$$anon$1.apply(ExceptionFilterTest.scala:11)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ExceptionFilter.liftedTree1$1(ExceptionFilter.scala:24)
	at com.twitter.finagle.http.filter.ExceptionFilter.apply(ExceptionFilter.scala:23)
	at com.twitter.finagle.http.filter.ExceptionFilter.apply(ExceptionFilter.scala:17)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.filter.ExceptionFilterTest$$anonfun$3.apply(ExceptionFilterTest.scala:49)
	at com.twitter.finagle.http.filter.ExceptionFilterTest$$anonfun$3.apply(ExceptionFilterTest.scala:47)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at org.scalatest.FunSuite.run(FunSuite.scala:1560)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:22:47 PM com.twitter.finagle.http.filter.ExceptionFilter$$anonfun$apply$1 applyOrElse
WARNING: cancelled request: uri:/?cancel=true
[info] ExceptionFilterTest:
[info] - ignore success
[info] - handle exception
[info] - handle throw
[info] - handle cancel
Jul 30, 2019 5:22:49 PM com.twitter.finagle.Init$$anonfun$6 apply$mcV$sp
INFO: Finagle version 19.8.0-SNAPSHOT (rev=a05a747a6f57b649a02d88436c2ccb7bbde26ff5) built at 20190730-172241
[info] HttpTest:
[info] - client stack includes exactly one NackAdmissionFilter
[info] - client uses custom response classifier by default
[info] - responseClassifierParam toggled off
[info] - responseClassifierParam toggled on
[info] - client and server emit http specific stats when enabled
[info] - server uses custom response classifier when specified
[info] - Netty 4 is a default implementation
[debug] Test run started
[debug] Test com.twitter.finagle.http.RequestCompilationTest.testMain started
[debug] Test com.twitter.finagle.http.RequestCompilationTest.testMain finished, took 0.002 sec
[debug] Test run finished: 0 failed, 0 ignored, 1 total, 0.007s
[info] PathTest:
[info] - construct by list
[info] - path separator extrator
[info] - file extension extractor
[info] - /foo/bar
[info] - foo/bar
[info] - :? extractor
[info] - :? extractor with ParamMatcher
[info] - :? extractor with IntParamMatcher and LongParamMatcher
[info] - ~ extractor on Path
[info] - ~ extractor on filename foo.json
[info] - ~ extractor on filename foo
[info] - -> extractor
[info] - Root extractor
[info] - Root extractor, no partial match
[info] - Root extractor, empty path
[info] - / extractor
[info] - Integer extractor
[info] - Integer extractor, negative int
[info] - Integer extractor, invalid int
[info] - Integer extractor, number format error
[info] - Long extractor
[info] - Long extractor, invalid int
[info] - Long extractor, number format error
[info] HttpCodecTest:
[info] - encodeRequestToString
[info] - decodeStringToRequest
[info] - decodeBytesToRequest
[info] - encodeResponseToString
[info] - decodeStringToResponse
[info] - decodeBytesToResponse
Jul 30, 2019 5:22:52 PM io.netty.handler.codec.http2.Http2FrameCodec onHttp2UnknownStreamError
WARNING: Stream exception thrown for unkown stream 1.
io.netty.handler.codec.http2.Http2Exception$HeaderListSizeException: Header size exceeded max allowed size (8192)
	at io.netty.handler.codec.http2.Http2Exception.headerListSizeError(Http2Exception.java:171)
	at io.netty.handler.codec.http2.Http2CodecUtil.headerListSizeExceeded(Http2CodecUtil.java:228)
	at io.netty.handler.codec.http2.HpackDecoder$Http2HeadersSink.finish(HpackDecoder.java:541)
	at io.netty.handler.codec.http2.HpackDecoder.decode(HpackDecoder.java:128)
	at io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder.decodeHeaders(DefaultHttp2HeadersDecoder.java:127)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersBlockBuilder.headers(DefaultHttp2FrameReader.java:743)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:22:52 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:37472, downstream address: n/a, label: server).
java.lang.IllegalArgumentException: bad news
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:217)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:216)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.ThreadUsage$ThreadUsageFilter.apply(ThreadUsage.scala:130)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.DtabStatsFilter.apply(DtabStatsFilter.scala:37)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.StatsFilter.apply(StatsFilter.scala:258)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ServerStatsFilter.apply(ServerStatsFilter.scala:55)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:131)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:92)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelRequestStatsHandler.channelRead(ChannelRequestStatsHandler.scala:48)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:607)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:254)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:106)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:22:53 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:38688, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply$mcV$sp(AbstractEndToEndTest.scala:474)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:22:53 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:40406, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply$mcV$sp(AbstractEndToEndTest.scala:515)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:22:57 PM com.twitter.finagle.http2.transport.StreamTransportFactory$StreamTransport com$twitter$finagle$http2$transport$StreamTransportFactory$StreamTransport$$handleBadState
ERROR: Stream 1 bad state: Write to dead stream: DefaultHttpContent(data: ReadOnlyByteBuf(ridx: 0, widx: 1, cap: 1/1, unwrapped: UnpooledHeapByteBuf(ridx: 0, widx: 1, cap: 1/1)), decoderResult: success)
Jul 30, 2019 5:22:57 PM com.twitter.finagle.http2.transport.StreamTransportFactory$StreamTransport com$twitter$finagle$http2$transport$StreamTransportFactory$StreamTransport$$handleBadState
ERROR: Stream 1 bad state: Write to dead stream: DefaultHttpContent(data: ReadOnlyByteBuf(ridx: 0, widx: 1, cap: 1/1, unwrapped: UnpooledHeapByteBuf(ridx: 0, widx: 1, cap: 1/1)), decoderResult: success)
Jul 30, 2019 5:22:58 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:33919, label: http).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: /0.0.0.0:33919, Downstream label: http, Trace Id: ba1272a48057baf9.ba1272a48057baf9<:ba1272a48057baf9

Jul 30, 2019 5:22:58 PM com.twitter.finagle.http2.transport.PriorKnowledgeTransporter$$anonfun$apply$2$$anonfun$apply$1 applyOrElse
WARNING: A previously successful connection to address localhost/127.0.0.1:41351 stopped being successful.
com.twitter.finagle.http2.DeadConnectionException: assigned an already dead connection to address localhost/127.0.0.1:41351
	at com.twitter.finagle.http2.transport.StreamTransportFactory$$anon$3.run(StreamTransportFactory.scala:282)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:405)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:338)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:22:58 PM com.twitter.finagle.http2.transport.PriorKnowledgeTransporter$$anonfun$apply$2$$anonfun$apply$1 applyOrElse
WARNING: A previously successful connection to address localhost/127.0.0.1:41351 stopped being successful.
com.twitter.finagle.http2.DeadConnectionException: assigned an already dead connection to address localhost/127.0.0.1:41351
	at com.twitter.finagle.http2.transport.StreamTransportFactory$$anon$3.run(StreamTransportFactory.scala:282)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:405)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:338)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:22:58 PM com.twitter.finagle.liveness.FailureAccrualFactory$$anon$2$$anon$1 didMarkDead
INFO: FailureAccrualFactory marking connection to "client" as dead. Remote Address: Inet(localhost/127.0.0.1:41351,Map())
Jul 30, 2019 5:22:58 PM com.twitter.finagle.http2.transport.PriorKnowledgeTransporter$$anonfun$apply$2$$anonfun$apply$1 applyOrElse
WARNING: A previously successful connection to address localhost/127.0.0.1:41351 stopped being successful.
com.twitter.finagle.http2.DeadConnectionException: assigned an already dead connection to address localhost/127.0.0.1:41351
	at com.twitter.finagle.http2.transport.StreamTransportFactory$$anon$3.run(StreamTransportFactory.scala:282)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:405)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:338)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:22:58 PM com.twitter.finagle.http2.transport.PriorKnowledgeTransporter$$anonfun$apply$2$$anonfun$apply$1 applyOrElse
WARNING: A previously successful connection to address localhost/127.0.0.1:35314 stopped being successful.
com.twitter.finagle.http2.DeadConnectionException: assigned an already dead connection to address localhost/127.0.0.1:35314
	at com.twitter.finagle.http2.transport.StreamTransportFactory$$anon$3.run(StreamTransportFactory.scala:282)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:405)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:338)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:22:58 PM com.twitter.finagle.http2.transport.PriorKnowledgeTransporter$$anonfun$apply$2$$anonfun$apply$1 applyOrElse
WARNING: A previously successful connection to address localhost/127.0.0.1:35314 stopped being successful.
com.twitter.finagle.http2.DeadConnectionException: assigned an already dead connection to address localhost/127.0.0.1:35314
	at com.twitter.finagle.http2.transport.StreamTransportFactory$$anon$3.run(StreamTransportFactory.scala:282)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:405)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:338)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:22:58 PM com.twitter.finagle.liveness.FailureAccrualFactory$$anon$2$$anon$1 didMarkDead
INFO: FailureAccrualFactory marking connection to "client" as dead. Remote Address: Inet(localhost/127.0.0.1:35314,Map())
Jul 30, 2019 5:22:58 PM com.twitter.finagle.http2.transport.PriorKnowledgeTransporter$$anonfun$apply$2$$anonfun$apply$1 applyOrElse
WARNING: A previously successful connection to address localhost/127.0.0.1:35314 stopped being successful.
com.twitter.finagle.http2.DeadConnectionException: assigned an already dead connection to address localhost/127.0.0.1:35314
	at com.twitter.finagle.http2.transport.StreamTransportFactory$$anon$3.run(StreamTransportFactory.scala:282)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:405)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:338)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:22:58 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:47092, downstream address: n/a, label: ).
com.twitter.finagle.http.Rfc7230HeaderValidation$ValueValidationException: Header 'foo': value contains a prohibited character '0xc': 
	at com.twitter.finagle.http.Rfc7230HeaderValidation$.validateValue(Rfc7230HeaderValidation.scala:140)
	at com.twitter.finagle.http.DefaultHeaderMap$.com$twitter$finagle$http$DefaultHeaderMap$$foldReplacingValidateValue(DefaultHeaderMap.scala:103)
	at com.twitter.finagle.http.DefaultHeaderMap.add(DefaultHeaderMap.scala:33)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1340)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1337)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:607)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:254)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:106)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:22:59 PM com.twitter.finagle.http2.transport.PriorKnowledgeTransporter$$anonfun$apply$2$$anonfun$apply$1 applyOrElse
WARNING: A previously successful connection to address localhost/127.0.0.1:34540 stopped being successful.
com.twitter.finagle.http2.DeadConnectionException: assigned an already dead connection to address localhost/127.0.0.1:34540
	at com.twitter.finagle.http2.transport.StreamTransportFactory$$anon$3.run(StreamTransportFactory.scala:282)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:405)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:338)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:22:59 PM com.twitter.finagle.http2.transport.H2Filter close
INFO: Closing h2 session with deadline 2019-07-30 17:23:04 +0000
Jul 30, 2019 5:22:59 PM com.twitter.finagle.http2.transport.PriorKnowledgeTransporter$$anonfun$apply$2$$anonfun$apply$1 applyOrElse
WARNING: A previously successful connection to address /0.0.0.0:42059 stopped being successful.
com.twitter.finagle.http2.DeadConnectionException: assigned an already dead connection to address /0.0.0.0:42059
	at com.twitter.finagle.http2.transport.StreamTransportFactory$$anon$3.run(StreamTransportFactory.scala:282)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:405)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:338)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:22:59 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:00 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:00 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:00 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 304 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:00 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:00 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:23:00 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:00 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:23:00 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:00 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:23:00 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 304 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:00 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:40020, downstream address: n/a, label: ).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$initService$1.apply(AbstractEndToEndTest.scala:68)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$initService$1.apply(AbstractEndToEndTest.scala:67)
	at com.twitter.finagle.Service$$anon$2.apply(Service.scala:29)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:607)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:254)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:106)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:00 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:40152, downstream address: n/a, label: ).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$initService$1.apply(AbstractEndToEndTest.scala:68)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$initService$1.apply(AbstractEndToEndTest.scala:67)
	at com.twitter.finagle.Service$$anon$2.apply(Service.scala:29)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:607)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:254)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:106)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

[info] ClassicHttp2PriorKnowledgeTest:
[info] - prior knowledge http/2: request header fields too large
[info] - prior knowledge http/2: with default client-side ResponseClassifier
[info] - prior knowledge http/2: with default server-side ResponseClassifier
[info] - prior knowledge http/2: unhandled exceptions are converted into 500s
[info] - prior knowledge http/2: client stack observes max header size
[info] - prior knowledge http/2: client sets content length
[info] - prior knowledge http/2: echo
[info] - prior knowledge http/2: dtab
[info] - prior knowledge http/2: (no) dtab
[info] - prior knowledge http/2: context
[info] - prior knowledge http/2: measure payload size
[info] - prior knowledge http/2: interrupt requests
[info] - prior knowledge http/2: interrupting requests doesn't interfere with others
[info] - prior knowledge http/2: aggregates trailers when streams are aggregated
[info] - prior knowledge http/2: trace
[info] - prior knowledge http/2 (streaming): stream
[info] - prior knowledge http/2 (streaming): stream via ResponseProxy filter
[info] - prior knowledge http/2 (streaming): aggregates responses that must not have a body
[info] - prior knowledge http/2 (streaming): stream via ResponseProxy class
[info] - prior knowledge http/2 (streaming): streaming clients can decompress content
[info] - prior knowledge http/2 (streaming): symmetric reader and getContent
[info] - prior knowledge http/2 (streaming): transport closure propagates to request stream reader
[info] - prior knowledge http/2 (streaming): transport closure propagates to request stream producer
[info] - prior knowledge http/2 (streaming): request discard terminates remote stream producer
[info] - prior knowledge http/2 (streaming): client discard terminates stream and frees up the connection
[info] - prior knowledge http/2 (streaming): two fixed-length requests
[info] - prior knowledge http/2 (streaming): measure chunk payload size
[info] - Responses with Content-length header larger than 8 KB are not aggregated
[info] - Responses with Content-length header equal to 8 KB are aggregated
[info] - Responses with Content-length header smaller than 8 KB are aggregated
[info] - prior knowledge http/2: streaming requests can't be retried
[info] - prior knowledge http/2: streaming session bi-directionally transmit trailing headers
[info] - prior knowledge http/2: invalid trailer causes server to hang up
[info] - prior knowledge http/2: PooledByteBufAllocator maxOrder is 7 for servers
[info] - prior knowledge http/2: PooledByteBufAllocator maxOrder is 7 for clients
[info] - prior knowledge http/2: nonretryable isn't retried
[info] - Client-side ResponseClassifier based on status code
[info] - server-side ResponseClassifier based on status code
[info] - codec should require a message size be less than 2Gb
[info] - client respects MaxResponseSize
[info] - server rejects illegal headers with a 400
[info] - server rejects illegal trailers with a 400
[info] - client rejects illegal headers with an exception
[info] - client rejects illegal trailer with an exception
[info] - obs-fold sequences are 'fixed' when received by clients
[info] - obs-fold sequences are 'fixed' when received by servers
[info] - server responds with 400 Bad Request if non-ascii character is present in uri !!! IGNORED !!!
[info] - server responds 500 if an invalid header is being served
[info] - client respects MaxHeaderSize in response
[info] - non-streaming clients can decompress content
[info] - non-streaming clients can disable decompression
[info] - removing the compressor works
[info] - request remote address
[info] - out of order client requests are OK
[info] - prior knowledge http/2 client handles cut connection properly
[info] - Does not retry service acquisition many times when not using FactoryToService
[info] - prior knowledge http/2: Graceful shutdown & draining
[info] - prior knowledge http/2: methodBuilder timeouts from Stack
[info] - prior knowledge http/2: methodBuilder timeouts from ClientBuilder
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header field
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header fieldwhen non-empty body is returned
[info] - response with status code 100 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 102 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 204 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 304 must not have a message body *BUT* Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - client closes properly when closed
[info] - client doesn't honor the Netty stream dependency extension header
[info] - A prior knowledge connection counts as one upgrade for stats
[info] TraceInitializationTest:
[info] - TraceId is propagated through the protocol
[info] - TraceId is propagated through the protocol (builder)
[info] SameSiteEndToEndTest:
[info] - response should contain Lax if set in laxService
[info] - response should contain Strict if set in strictService
[info] - response should contain no SameSite attribute if set to None
[info] - server should not see SameSite.Lax if set by client
[info] - server should not see SameSite.Strict if set by client
[debug] Test run started
[debug] Test com.twitter.finagle.HttpCompilationTest.testClient started
[debug] Test com.twitter.finagle.HttpCompilationTest.testClient finished, took 0.003 sec
[debug] Test com.twitter.finagle.HttpCompilationTest.testServer started
[debug] Test com.twitter.finagle.HttpCompilationTest.testServer finished, took 0.001 sec
[debug] Test run finished: 0 failed, 0 ignored, 2 total, 0.012s
[info] HttpSslTest:
[info] - Peer certificate is available to HTTP/1.1 service
[info] - Peer certificate is available to HTTP/2 service
[info] MethodRequiredFilterTest:
[info] - return 407 when disallowed method is used
[info] - return 200 when allowed method is used
[info] TracingTest:
[info] - set header
[info] - record only path of url
[info] - parse header
[info] - parse header (128-bit TraceIDs)
[info] - parse header with sampled as 1
[info] - not parse header if no trace id
[info] - survive bad flags entry
[info] - survive no flags entry
[info] - hasAllRequiredHeaders with all
[info] DirectPayloadsLifecycleTest:
[info] - [HTTP/1.1] should never leak direct paylods into the user space
[info] - [HTTP/2] should never leak direct paylods into the user space
[info] - [HTTP/2 client <-> HTTP/1.1 server] should never leak direct paylods into the user space
[info] - [Prior Knowledge HTTP/2] should never leak direct paylods into the user space
Jul 30, 2019 5:23:02 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:54316, downstream address: n/a, label: server).
java.lang.IllegalArgumentException: bad news
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:217)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:216)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.ThreadUsage$ThreadUsageFilter.apply(ThreadUsage.scala:130)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.DtabStatsFilter.apply(DtabStatsFilter.scala:37)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.StatsFilter.apply(StatsFilter.scala:258)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ServerStatsFilter.apply(ServerStatsFilter.scala:55)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:131)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:92)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelRequestStatsHandler.channelRead(ChannelRequestStatsHandler.scala:48)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:71)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:02 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:42950, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply$mcV$sp(AbstractEndToEndTest.scala:474)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:02 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:33937, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply$mcV$sp(AbstractEndToEndTest.scala:515)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:04 PM com.twitter.finagle.http2.transport.H2Filter$$anonfun$1$$anon$4 run
INFO: Graceful draining period lapsed. Sending final GOAWAY and closing the connection.
Jul 30, 2019 5:23:06 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:37409, label: client).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: localhost/127.0.0.1:37409, Downstream label: client, Trace Id: a025fa22f1bf6cd5.a025fa22f1bf6cd5<:a025fa22f1bf6cd5

Jul 30, 2019 5:23:06 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:40670, label: http).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: /0.0.0.0:40670, Downstream label: http, Trace Id: e978203893a9e1cc.e978203893a9e1cc<:e978203893a9e1cc

Jul 30, 2019 5:23:06 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:51984, downstream address: n/a, label: ).
com.twitter.finagle.http.Rfc7230HeaderValidation$ValueValidationException: Header 'foo': value contains a prohibited character '0xc': 
	at com.twitter.finagle.http.Rfc7230HeaderValidation$.validateValue(Rfc7230HeaderValidation.scala:140)
	at com.twitter.finagle.http.DefaultHeaderMap$.com$twitter$finagle$http$DefaultHeaderMap$$foldReplacingValidateValue(DefaultHeaderMap.scala:103)
	at com.twitter.finagle.http.DefaultHeaderMap.add(DefaultHeaderMap.scala:33)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1340)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1337)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:71)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:08 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleHeadResponse
INFO: Received response to HEAD request (Request("HEAD /", from /127.0.0.1:56336)) that contained a static body of length 10. Discarding body. If this is desired behavior, consider adding HeadFilter to your service
[info] ServerFailHttp2UpgradeTest:
[info] - http/1.1 client, http/2 server: request header fields too large
[info] - http/1.1 client, http/2 server: with default client-side ResponseClassifier
[info] - http/1.1 client, http/2 server: with default server-side ResponseClassifier
[info] - http/1.1 client, http/2 server: unhandled exceptions are converted into 500s
[info] - http/1.1 client, http/2 server: client stack observes max header size
[info] - http/1.1 client, http/2 server: client sets content length
[info] - http/1.1 client, http/2 server: echo
[info] - http/1.1 client, http/2 server: dtab
[info] - http/1.1 client, http/2 server: (no) dtab
[info] - http/1.1 client, http/2 server: context
[info] - http/1.1 client, http/2 server: measure payload size
[info] - http/1.1 client, http/2 server: interrupt requests
[info] - http/1.1 client, http/2 server: interrupting requests doesn't interfere with others
[info] - http/1.1 client, http/2 server: aggregates trailers when streams are aggregated
[info] - http/1.1 client, http/2 server: trace
[info] - http/1.1 client, http/2 server (streaming): stream
[info] - http/1.1 client, http/2 server (streaming): stream via ResponseProxy filter
[info] - http/1.1 client, http/2 server (streaming): aggregates responses that must not have a body
[info] - http/1.1 client, http/2 server (streaming): stream via ResponseProxy class
[info] - http/1.1 client, http/2 server (streaming): streaming clients can decompress content
[info] - http/1.1 client, http/2 server (streaming): symmetric reader and getContent
[info] - http/1.1 client, http/2 server (streaming): transport closure propagates to request stream reader
[info] - http/1.1 client, http/2 server (streaming): transport closure propagates to request stream producer
[info] - http/1.1 client, http/2 server (streaming): request discard terminates remote stream producer
[info] - http/1.1 client, http/2 server (streaming): client discard terminates stream and frees up the connection
[info] - http/1.1 client, http/2 server (streaming): two fixed-length requests
[info] - http/1.1 client, http/2 server (streaming): measure chunk payload size
[info] - Responses with Content-length header larger than 8 KB are not aggregated
[info] - Responses with Content-length header equal to 8 KB are aggregated
[info] - Responses with Content-length header smaller than 8 KB are aggregated
[info] - http/1.1 client, http/2 server: streaming requests can't be retried
[info] - http/1.1 client, http/2 server: streaming session bi-directionally transmit trailing headers
[info] - http/1.1 client, http/2 server: invalid trailer causes server to hang up
[info] - http/1.1 client, http/2 server: PooledByteBufAllocator maxOrder is 7 for servers
[info] - http/1.1 client, http/2 server: PooledByteBufAllocator maxOrder is 7 for clients
[info] - http/1.1 client, http/2 server: nonretryable isn't retried
[info] - Client-side ResponseClassifier based on status code
[info] - server-side ResponseClassifier based on status code
[info] - codec should require a message size be less than 2Gb
[info] - client respects MaxResponseSize
[info] - server rejects illegal headers with a 400
[info] - server rejects illegal trailers with a 400
[info] - client rejects illegal headers with an exception
[info] - client rejects illegal trailer with an exception
[info] - obs-fold sequences are 'fixed' when received by clients
[info] - obs-fold sequences are 'fixed' when received by servers
[info] - server responds with 400 Bad Request if non-ascii character is present in uri
[info] - server responds 500 if an invalid header is being served
[info] - client respects MaxHeaderSize in response
[info] - non-streaming clients can decompress content
[info] - non-streaming clients can disable decompression
[info] - removing the compressor works
[info] - request remote address
[info] - out of order client requests are OK
[info] - http/1.1 client, http/2 server client handles cut connection properly
[info] - Does not retry service acquisition many times when not using FactoryToService
[info] - http/1.1 client, http/2 server: Graceful shutdown & draining
[info] - http/1.1 client, http/2 server: methodBuilder timeouts from Stack
[info] - http/1.1 client, http/2 server: methodBuilder timeouts from ClientBuilder
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header field !!! IGNORED !!!
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header fieldwhen non-empty body is returned !!! IGNORED !!!
[info] - response with status code 100 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 102 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 204 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 304 must not have a message body *BUT* Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - http/1.1 client, http/2 server: HTTP/1.0
[info] - http/1.1 client, http/2 server: initial request line too long
[info] - http/1.1 client, http/2 server (non-streaming): Request with 'Connection: close'
[info] - http/1.1 client, http/2 server (non-streaming): Response with 'Connection: close'
[info] - http/1.1 client, http/2 server (non-streaming): : closes the connection on request header fields too large
[info] - http/1.1 client, http/2 server (non-streaming): HTTP/1.0
[info] - http/1.1 client, http/2 server (streaming): Request with 'Connection: close'
[info] - http/1.1 client, http/2 server (streaming): Response with 'Connection: close'
[info] - http/1.1 client, http/2 server (streaming): : closes the connection on request header fields too large
[info] - http/1.1 client, http/2 server (streaming): HTTP/1.0
[info] - non-streaming server handles expect continue header when autoContinue is disabled
[info] - non-streaming server handles expect continue header when autoContinue is enabled
[info] - streaming server handles expect continue header when autoContinue is disabled
[info] - streaming server handles expect continue header when autoContinue is enabled
[info] - mishandled HEAD request doesn't foul the connection
[info] - mishandled HEAD request with chunked response doesn't foul the connection
[info] - streaming server does not stream sufficiently small fixed length messages
[info] - streaming server won't accept fixed length messages that exceed maxRequestSize
[info] - http/1.1 client, http/2 server: Can initialize multiple pipelines
[info] - http/1.1 client, http/2 server(streaming): Can initialize multiple pipelines
[info] - Upgrade counters are not incremented
Jul 30, 2019 5:23:08 PM io.netty.handler.codec.http2.Http2FrameCodec onHttp2UnknownStreamError
WARNING: Stream exception thrown for unkown stream 3.
io.netty.handler.codec.http2.Http2Exception$HeaderListSizeException: Header size exceeded max allowed size (8192)
	at io.netty.handler.codec.http2.Http2Exception.headerListSizeError(Http2Exception.java:171)
	at io.netty.handler.codec.http2.Http2CodecUtil.headerListSizeExceeded(Http2CodecUtil.java:228)
	at io.netty.handler.codec.http2.HpackDecoder$Http2HeadersSink.finish(HpackDecoder.java:541)
	at io.netty.handler.codec.http2.HpackDecoder.decode(HpackDecoder.java:128)
	at io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder.decodeHeaders(DefaultHttp2HeadersDecoder.java:127)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersBlockBuilder.headers(DefaultHttp2FrameReader.java:743)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:08 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:60314, downstream address: n/a, label: server).
java.lang.IllegalArgumentException: bad news
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:217)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:216)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.ThreadUsage$ThreadUsageFilter.apply(ThreadUsage.scala:130)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.DtabStatsFilter.apply(DtabStatsFilter.scala:37)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.StatsFilter.apply(StatsFilter.scala:258)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ServerStatsFilter.apply(ServerStatsFilter.scala:55)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:131)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:92)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelRequestStatsHandler.channelRead(ChannelRequestStatsHandler.scala:48)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:607)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:254)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:106)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:08 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:42682, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply$mcV$sp(AbstractEndToEndTest.scala:474)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:08 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:36950, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply$mcV$sp(AbstractEndToEndTest.scala:515)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:12 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0xa6e43946, L:/127.0.0.1:36386 - R:localhost/127.0.0.1:36747] ignoring DATA frame for stream RST_STREAM sent.
Jul 30, 2019 5:23:12 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0xa6e43946, L:/127.0.0.1:36386 - R:localhost/127.0.0.1:36747] ignoring DATA frame for stream RST_STREAM sent.
Jul 30, 2019 5:23:12 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0xa6e43946, L:/127.0.0.1:36386 - R:localhost/127.0.0.1:36747] ignoring DATA frame for stream RST_STREAM sent.
Jul 30, 2019 5:23:12 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0xa6e43946, L:/127.0.0.1:36386 - R:localhost/127.0.0.1:36747] ignoring DATA frame for stream RST_STREAM sent.
Jul 30, 2019 5:23:12 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0xa6e43946, L:/127.0.0.1:36386 - R:localhost/127.0.0.1:36747] ignoring DATA frame for stream RST_STREAM sent.
Jul 30, 2019 5:23:12 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:34192, downstream address: n/a, label: ).
com.twitter.finagle.http.Rfc7230HeaderValidation$ValueValidationException: Header 'foo': value contains a prohibited character '0xc': 
	at com.twitter.finagle.http.Rfc7230HeaderValidation$.validateValue(Rfc7230HeaderValidation.scala:140)
	at com.twitter.finagle.http.DefaultHeaderMap$.com$twitter$finagle$http$DefaultHeaderMap$$foldReplacingValidateValue(DefaultHeaderMap.scala:103)
	at com.twitter.finagle.http.DefaultHeaderMap.add(DefaultHeaderMap.scala:33)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1340)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1337)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:607)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:254)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:106)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:13 PM com.twitter.finagle.http2.transport.H2Filter close
INFO: Closing h2 session with deadline 2019-07-30 17:23:18 +0000
Jul 30, 2019 5:23:13 PM com.twitter.finagle.http2.transport.H2Filter$$anon$3 operationComplete
INFO: Channel closed, session terminated.
Jul 30, 2019 5:23:13 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:13 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:13 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:13 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 304 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:13 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:13 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:23:13 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:13 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:23:13 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:13 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:23:13 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 304 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:13 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:54610, downstream address: n/a, label: ).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$initService$1.apply(AbstractEndToEndTest.scala:68)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$initService$1.apply(AbstractEndToEndTest.scala:67)
	at com.twitter.finagle.Service$$anon$2.apply(Service.scala:29)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:607)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:254)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:106)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:14 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:40348, downstream address: n/a, label: ).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$initService$1.apply(AbstractEndToEndTest.scala:68)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$initService$1.apply(AbstractEndToEndTest.scala:67)
	at com.twitter.finagle.Service$$anon$2.apply(Service.scala:29)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:607)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:254)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:106)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

[info] Http2PriorKnowledgeTest:
[info] - prior knowledge http/2: request header fields too large
[info] - prior knowledge http/2: with default client-side ResponseClassifier
[info] - prior knowledge http/2: with default server-side ResponseClassifier
[info] - prior knowledge http/2: unhandled exceptions are converted into 500s
[info] - prior knowledge http/2: client stack observes max header size
[info] - prior knowledge http/2: client sets content length
[info] - prior knowledge http/2: echo
[info] - prior knowledge http/2: dtab
[info] - prior knowledge http/2: (no) dtab
[info] - prior knowledge http/2: context
[info] - prior knowledge http/2: measure payload size
[info] - prior knowledge http/2: interrupt requests
[info] - prior knowledge http/2: interrupting requests doesn't interfere with others
[info] - prior knowledge http/2: aggregates trailers when streams are aggregated
[info] - prior knowledge http/2: trace
[info] - prior knowledge http/2 (streaming): stream
[info] - prior knowledge http/2 (streaming): stream via ResponseProxy filter *** FAILED ***
[info]   com.twitter.finagle.netty4.transport.ChannelTransport$NoStackTraceChannelClosedException: ChannelException at remote address: localhost/127.0.0.1:37080. Remote Info: Not Available
[info]   ...
[info] - prior knowledge http/2 (streaming): aggregates responses that must not have a body
[info] - prior knowledge http/2 (streaming): stream via ResponseProxy class
[info] - prior knowledge http/2 (streaming): streaming clients can decompress content
[info] - prior knowledge http/2 (streaming): symmetric reader and getContent
[info] - prior knowledge http/2 (streaming): transport closure propagates to request stream reader
[info] - prior knowledge http/2 (streaming): transport closure propagates to request stream producer
[info] - prior knowledge http/2 (streaming): request discard terminates remote stream producer
[info] - prior knowledge http/2 (streaming): client discard terminates stream and frees up the connection
[info] - prior knowledge http/2 (streaming): two fixed-length requests
[info] - prior knowledge http/2 (streaming): measure chunk payload size
[info] - Responses with Content-length header larger than 8 KB are not aggregated
[info] - Responses with Content-length header equal to 8 KB are aggregated
[info] - Responses with Content-length header smaller than 8 KB are aggregated
[info] - prior knowledge http/2: streaming requests can't be retried
[info] - prior knowledge http/2: streaming session bi-directionally transmit trailing headers
[info] - prior knowledge http/2: invalid trailer causes server to hang up
[info] - prior knowledge http/2: PooledByteBufAllocator maxOrder is 7 for servers
[info] - prior knowledge http/2: PooledByteBufAllocator maxOrder is 7 for clients
[info] - prior knowledge http/2: nonretryable isn't retried
[info] - Client-side ResponseClassifier based on status code
[info] - server-side ResponseClassifier based on status code
[info] - codec should require a message size be less than 2Gb
[info] - client respects MaxResponseSize
[info] - server rejects illegal headers with a 400
[info] - server rejects illegal trailers with a 400
[info] - client rejects illegal headers with an exception
[info] - client rejects illegal trailer with an exception
[info] - obs-fold sequences are 'fixed' when received by clients
[info] - obs-fold sequences are 'fixed' when received by servers
[info] - server responds with 400 Bad Request if non-ascii character is present in uri !!! IGNORED !!!
[info] - server responds 500 if an invalid header is being served
[info] - client respects MaxHeaderSize in response !!! IGNORED !!!
[info] - non-streaming clients can decompress content
[info] - non-streaming clients can disable decompression
[info] - removing the compressor works
[info] - request remote address
[info] - out of order client requests are OK
[info] - prior knowledge http/2 client handles cut connection properly
[info] - Does not retry service acquisition many times when not using FactoryToService
[info] - prior knowledge http/2: Graceful shutdown & draining
[info] - prior knowledge http/2: methodBuilder timeouts from Stack
[info] - prior knowledge http/2: methodBuilder timeouts from ClientBuilder
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header field
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header fieldwhen non-empty body is returned
[info] - response with status code 100 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 102 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 204 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 304 must not have a message body *BUT* Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - client closes properly when closed
[info] - client doesn't honor the Netty stream dependency extension header
[info] - A prior knowledge connection counts as one upgrade for stats
[info] HttpResponseClassifierTest:
[info] - ServerErrorsAsFailures
[info] - ServerErrorsAsFailures for nacks
[info] - apply
[info] StreamingStatsFilterTest:
[info] - streaming failures in request are populated correctly
[info] - streaming failures in response are populated correctly
[info] - opened stream count and finished stream count are populated correctly
[info] - pending stream gauges are populated correctly
[info] - stream duration stats are populated correctly
[info] CorsTest:
[info] - Cors.HttpFilter handles preflight requests
[info] - Http.CorsFilter responds to invalid preflight requests without CORS headers
[info] - Http.CorsFilter responds to unacceptable cross-origin requests without CORS headers
[info] - Http.CorsFilter handles simple requests
[info] - Http.CorsFilter does not add response headers to simple requests if request headers aren't present
[debug] Test run started
[debug] Test com.twitter.finagle.http.javaapi.DtabFilterTest.tesDtab started
[debug] Test com.twitter.finagle.http.javaapi.DtabFilterTest.tesDtab finished, took 0.0 sec
[debug] Test run finished: 0 failed, 0 ignored, 1 total, 0.001s
[info] TlsFilterTest:
[info] - filter
[info] - module
Jul 30, 2019 5:23:29 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:40694, downstream address: n/a, label: server).
org.scalatest.exceptions.TestFailedException: "[]" did not equal "[hello]"
	at org.scalatest.Assertions$class.newAssertionFailedException(Assertions.scala:528)
	at org.scalatest.FunSuite.newAssertionFailedException(FunSuite.scala:1560)
	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:501)
	at com.twitter.finagle.http.AbstractStreamingTest$$anonfun$11$$anonfun$27.apply(AbstractStreamingTest.scala:368)
	at com.twitter.finagle.http.AbstractStreamingTest$$anonfun$11$$anonfun$27.apply(AbstractStreamingTest.scala:367)
	at com.twitter.finagle.Service$$anon$2.apply(Service.scala:29)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter$$anonfun$apply$1.apply(HttpNackFilter.scala:159)
	at com.twitter.finagle.http.filter.HttpNackFilter$$anonfun$apply$1.apply(HttpNackFilter.scala:159)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:158)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:36)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.HttpServerExpectContinueHandler.channelRead(HttpServerExpectContinueHandler.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.http.handler.PayloadSizeHandler.channelRead(PayloadSizeHandler.scala:59)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:29 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:35784, label: client).
java.lang.Exception
	at com.twitter.finagle.http.AbstractStreamingTest$$anonfun$30.apply(AbstractStreamingTest.scala:424)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at org.scalatest.FunSuite.run(FunSuite.scala:1560)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

[info] Netty4StreamingTest:
[info] - client: request stream fails on write
[info] - client: response stream fails on read
[info] - client: server disconnect on pending response should fail request
[info] - client: client closes transport after server disconnects
[info] - client: fail request writer
[info] - client: discard respond reader
[info] - server: request stream fails read
[info] - server: response stream fails write
[info] - server: fail response writer
[info] - server: fail request reader
[info] - server: empty buf doesn't close response stream
[info] - client: empty buf doesn't close request stream
[info] - end-to-end: server gets content for chunked request made to client with content length
[info] - end-to-end: client may process multiple streaming requests simultaneously
[info] - server: inbound stream (reader) propagates closures initiated remotely
[info] - server: outbound stream (writer) propagates closures initiated remotely
[info] - client: inbound stream (reader) propagates closures initiated remotely
[info] - client: outbound stream (writer) propagates closures initiated remotely
[info] HttpMuxerTest:
[info] - handles params properly
[info] - normalize basics
[info] - normalize duplicate slashes
[info] - prefix matching is handled correctly
[info] - exact matching is handled correctly
[info] - special cases "" and "/" are handled correctly
[info] - Registering a service with an existing name will overwrite the old
[info] - RouteIndex only allows GET and POST
[info] - Closing the HttpMuxer closes the individual handlers
Jul 30, 2019 5:23:30 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:57228, downstream address: n/a, label: server).
java.lang.IllegalArgumentException: bad news
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:217)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:216)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.ThreadUsage$ThreadUsageFilter.apply(ThreadUsage.scala:130)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.DtabStatsFilter.apply(DtabStatsFilter.scala:37)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.StatsFilter.apply(StatsFilter.scala:258)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ServerStatsFilter.apply(ServerStatsFilter.scala:55)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:131)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:92)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelRequestStatsHandler.channelRead(ChannelRequestStatsHandler.scala:48)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:30 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:38736, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply$mcV$sp(AbstractEndToEndTest.scala:474)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:30 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:38046, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply$mcV$sp(AbstractEndToEndTest.scala:515)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:33 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:46874, label: client).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: localhost/127.0.0.1:46874, Downstream label: client, Trace Id: eefaa74c17c665a1.eefaa74c17c665a1<:eefaa74c17c665a1

Jul 30, 2019 5:23:34 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:34724, label: http).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: /0.0.0.0:34724, Downstream label: http, Trace Id: f51ec597a936bdcb.f51ec597a936bdcb<:f51ec597a936bdcb

Jul 30, 2019 5:23:34 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:40998, downstream address: n/a, label: ).
com.twitter.finagle.http.Rfc7230HeaderValidation$ValueValidationException: Header 'foo': value contains a prohibited character '0xc': 
	at com.twitter.finagle.http.Rfc7230HeaderValidation$.validateValue(Rfc7230HeaderValidation.scala:140)
	at com.twitter.finagle.http.DefaultHeaderMap$.com$twitter$finagle$http$DefaultHeaderMap$$foldReplacingValidateValue(DefaultHeaderMap.scala:103)
	at com.twitter.finagle.http.DefaultHeaderMap.add(DefaultHeaderMap.scala:33)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1340)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1337)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:35 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleHeadResponse
INFO: Received response to HEAD request (Request("HEAD /", from /127.0.0.1:41602)) that contained a static body of length 10. Discarding body. If this is desired behavior, consider adding HeadFilter to your service
[info] ClientFailHttp2UpgradeTest:
[info] - http/2 client, http/1.1 server: request header fields too large
[info] - http/2 client, http/1.1 server: with default client-side ResponseClassifier
[info] - http/2 client, http/1.1 server: with default server-side ResponseClassifier
[info] - http/2 client, http/1.1 server: unhandled exceptions are converted into 500s
[info] - http/2 client, http/1.1 server: client stack observes max header size
[info] - http/2 client, http/1.1 server: client sets content length
[info] - http/2 client, http/1.1 server: echo
[info] - http/2 client, http/1.1 server: dtab
[info] - http/2 client, http/1.1 server: (no) dtab
[info] - http/2 client, http/1.1 server: context
[info] - http/2 client, http/1.1 server: measure payload size
[info] - http/2 client, http/1.1 server: interrupt requests
[info] - http/2 client, http/1.1 server: interrupting requests doesn't interfere with others
[info] - http/2 client, http/1.1 server: aggregates trailers when streams are aggregated
[info] - http/2 client, http/1.1 server: trace
[info] - http/2 client, http/1.1 server (streaming): stream
[info] - http/2 client, http/1.1 server (streaming): stream via ResponseProxy filter
[info] - http/2 client, http/1.1 server (streaming): aggregates responses that must not have a body
[info] - http/2 client, http/1.1 server (streaming): stream via ResponseProxy class
[info] - http/2 client, http/1.1 server (streaming): streaming clients can decompress content
[info] - http/2 client, http/1.1 server (streaming): symmetric reader and getContent
[info] - http/2 client, http/1.1 server (streaming): transport closure propagates to request stream reader
[info] - http/2 client, http/1.1 server (streaming): transport closure propagates to request stream producer
[info] - http/2 client, http/1.1 server (streaming): request discard terminates remote stream producer
[info] - http/2 client, http/1.1 server (streaming): client discard terminates stream and frees up the connection
[info] - http/2 client, http/1.1 server (streaming): two fixed-length requests
[info] - http/2 client, http/1.1 server (streaming): measure chunk payload size
[info] - Responses with Content-length header larger than 8 KB are not aggregated
[info] - Responses with Content-length header equal to 8 KB are aggregated
[info] - Responses with Content-length header smaller than 8 KB are aggregated
[info] - http/2 client, http/1.1 server: streaming requests can't be retried
[info] - http/2 client, http/1.1 server: streaming session bi-directionally transmit trailing headers
[info] - http/2 client, http/1.1 server: invalid trailer causes server to hang up
[info] - http/2 client, http/1.1 server: PooledByteBufAllocator maxOrder is 7 for servers
[info] - http/2 client, http/1.1 server: PooledByteBufAllocator maxOrder is 7 for clients
[info] - http/2 client, http/1.1 server: nonretryable isn't retried
[info] - Client-side ResponseClassifier based on status code
[info] - server-side ResponseClassifier based on status code
[info] - codec should require a message size be less than 2Gb
[info] - client respects MaxResponseSize
[info] - server rejects illegal headers with a 400
[info] - server rejects illegal trailers with a 400
[info] - client rejects illegal headers with an exception
[info] - client rejects illegal trailer with an exception
[info] - obs-fold sequences are 'fixed' when received by clients
[info] - obs-fold sequences are 'fixed' when received by servers
[info] - server responds with 400 Bad Request if non-ascii character is present in uri
[info] - server responds 500 if an invalid header is being served
[info] - client respects MaxHeaderSize in response
[info] - non-streaming clients can decompress content
[info] - non-streaming clients can disable decompression
[info] - removing the compressor works
[info] - request remote address
[info] - out of order client requests are OK
[info] - http/2 client, http/1.1 server client handles cut connection properly
[info] - Does not retry service acquisition many times when not using FactoryToService
[info] - http/2 client, http/1.1 server: Graceful shutdown & draining
[info] - http/2 client, http/1.1 server: methodBuilder timeouts from Stack
[info] - http/2 client, http/1.1 server: methodBuilder timeouts from ClientBuilder
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header field !!! IGNORED !!!
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header fieldwhen non-empty body is returned !!! IGNORED !!!
[info] - response with status code 100 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 102 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 204 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 304 must not have a message body *BUT* Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - http/2 client, http/1.1 server: HTTP/1.0
[info] - http/2 client, http/1.1 server: initial request line too long
[info] - http/2 client, http/1.1 server (non-streaming): Request with 'Connection: close'
[info] - http/2 client, http/1.1 server (non-streaming): Response with 'Connection: close'
[info] - http/2 client, http/1.1 server (non-streaming): : closes the connection on request header fields too large
[info] - http/2 client, http/1.1 server (non-streaming): HTTP/1.0
[info] - http/2 client, http/1.1 server (streaming): Request with 'Connection: close'
[info] - http/2 client, http/1.1 server (streaming): Response with 'Connection: close'
[info] - http/2 client, http/1.1 server (streaming): : closes the connection on request header fields too large
[info] - http/2 client, http/1.1 server (streaming): HTTP/1.0
[info] - non-streaming server handles expect continue header when autoContinue is disabled
[info] - non-streaming server handles expect continue header when autoContinue is enabled
[info] - streaming server handles expect continue header when autoContinue is disabled
[info] - streaming server handles expect continue header when autoContinue is enabled
[info] - mishandled HEAD request doesn't foul the connection
[info] - mishandled HEAD request with chunked response doesn't foul the connection
[info] - streaming server does not stream sufficiently small fixed length messages
[info] - streaming server won't accept fixed length messages that exceed maxRequestSize
[info] - http/2 client, http/1.1 server: Can initialize multiple pipelines
[info] - http/2 client, http/1.1 server(streaming): Can initialize multiple pipelines
[info] - Upgrade counters are not incremented
[info] ServerSideDecodingTest:
[info] - decode client-side encoded entity bodies
Jul 30, 2019 5:23:36 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:35972, downstream address: n/a, label: server).
java.lang.IllegalArgumentException: bad news
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:217)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:216)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.ThreadUsage$ThreadUsageFilter.apply(ThreadUsage.scala:130)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.DtabStatsFilter.apply(DtabStatsFilter.scala:37)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.StatsFilter.apply(StatsFilter.scala:258)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ServerStatsFilter.apply(ServerStatsFilter.scala:55)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:131)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:92)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelRequestStatsHandler.channelRead(ChannelRequestStatsHandler.scala:48)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:36 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:33623, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply$mcV$sp(AbstractEndToEndTest.scala:474)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:36 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:39015, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply$mcV$sp(AbstractEndToEndTest.scala:515)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:40 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0x173ef3bb, L:/127.0.0.1:45634 - R:localhost/127.0.0.1:41856] ignoring DATA frame for stream RST_STREAM sent.
Jul 30, 2019 5:23:40 PM io.netty.handler.codec.http2.Http2FrameCodec onHttp2UnknownStreamError
WARNING: Stream exception thrown for unkown stream 1.
io.netty.handler.codec.http2.Http2Exception$StreamException: Received DATA frame for an unknown stream 1
	at io.netty.handler.codec.http2.Http2Exception.streamError(Http2Exception.java:129)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.shouldIgnoreHeadersOrDataFrame(DefaultHttp2ConnectionDecoder.java:531)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onDataRead(DefaultHttp2ConnectionDecoder.java:183)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readDataFrame(DefaultHttp2FrameReader.java:422)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:251)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:40 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:38884, downstream address: n/a, label: ).
com.twitter.finagle.http.Rfc7230HeaderValidation$ValueValidationException: Header 'foo': value contains a prohibited character '0xc': 
	at com.twitter.finagle.http.Rfc7230HeaderValidation$.validateValue(Rfc7230HeaderValidation.scala:140)
	at com.twitter.finagle.http.DefaultHeaderMap$.com$twitter$finagle$http$DefaultHeaderMap$$foldReplacingValidateValue(DefaultHeaderMap.scala:103)
	at com.twitter.finagle.http.DefaultHeaderMap.add(DefaultHeaderMap.scala:33)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1340)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1337)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.InboundHttpToHttp2Adapter.handle(InboundHttpToHttp2Adapter.java:67)
	at io.netty.handler.codec.http2.Http2FrameCodec.userEventTriggered(Http2FrameCodec.java:255)
	at io.netty.channel.AbstractChannelHandlerContext.invokeUserEventTriggered(AbstractChannelHandlerContext.java:341)
	at io.netty.channel.AbstractChannelHandlerContext.invokeUserEventTriggered(AbstractChannelHandlerContext.java:327)
	at io.netty.channel.AbstractChannelHandlerContext.fireUserEventTriggered(AbstractChannelHandlerContext.java:319)
	at io.netty.handler.codec.http.HttpServerUpgradeHandler.upgrade(HttpServerUpgradeHandler.java:339)
	at io.netty.handler.codec.http.HttpServerUpgradeHandler.decode(HttpServerUpgradeHandler.java:239)
	at io.netty.handler.codec.http.HttpServerUpgradeHandler.decode(HttpServerUpgradeHandler.java:40)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:88)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:71)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:40 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:23:40 PM com.twitter.finagle.http2.transport.H2Filter close
INFO: Closing h2 session with deadline 2019-07-30 17:23:45 +0000
Jul 30, 2019 5:23:40 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:23:41 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:41 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:41 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:41 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 304 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:41 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:41 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:23:41 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:41 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:23:41 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:41 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:23:41 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 304 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:42 PM com.twitter.finagle.http2.transport.H2Filter close
INFO: Closing h2 session with deadline 2019-07-30 17:33:42 +0000
Jul 30, 2019 5:23:42 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:23:42 PM io.netty.handler.codec.http2.Http2FrameCodec onHttp2UnknownStreamError
WARNING: Stream exception thrown for unkown stream 3.
io.netty.handler.codec.http2.Http2Exception$StreamException: Invalid HTTP/2 pseudo-header ':invalid' encountered.
	at io.netty.handler.codec.http2.Http2Exception.streamError(Http2Exception.java:129)
	at io.netty.handler.codec.http2.HpackDecoder.validate(HpackDecoder.java:388)
	at io.netty.handler.codec.http2.HpackDecoder.access$000(HpackDecoder.java:54)
	at io.netty.handler.codec.http2.HpackDecoder$Http2HeadersSink.appendToHeaderList(HpackDecoder.java:559)
	at io.netty.handler.codec.http2.HpackDecoder.insertHeader(HpackDecoder.java:426)
	at io.netty.handler.codec.http2.HpackDecoder.decode(HpackDecoder.java:287)
	at io.netty.handler.codec.http2.HpackDecoder.decode(HpackDecoder.java:124)
	at io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder.decodeHeaders(DefaultHttp2HeadersDecoder.java:127)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersBlockBuilder.headers(DefaultHttp2FrameReader.java:743)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

[info] MultiplexedH2CEndToEndTest:
[info] - h2c http/2-multiplex: request header fields too large
[info] - h2c http/2-multiplex: with default client-side ResponseClassifier
[info] - h2c http/2-multiplex: with default server-side ResponseClassifier
[info] - h2c http/2-multiplex: unhandled exceptions are converted into 500s
[info] - h2c http/2-multiplex: client stack observes max header size
[info] - h2c http/2-multiplex: client sets content length
[info] - h2c http/2-multiplex: echo
[info] - h2c http/2-multiplex: dtab
[info] - h2c http/2-multiplex: (no) dtab
[info] - h2c http/2-multiplex: context
[info] - h2c http/2-multiplex: measure payload size
[info] - h2c http/2-multiplex: interrupt requests
[info] - h2c http/2-multiplex: interrupting requests doesn't interfere with others
[info] - h2c http/2-multiplex: aggregates trailers when streams are aggregated
[info] - h2c http/2-multiplex: trace
[info] - h2c http/2-multiplex (streaming): stream
[info] - h2c http/2-multiplex (streaming): stream via ResponseProxy filter
[info] - h2c http/2-multiplex (streaming): aggregates responses that must not have a body
[info] - h2c http/2-multiplex (streaming): stream via ResponseProxy class
[info] - h2c http/2-multiplex (streaming): streaming clients can decompress content
[info] - h2c http/2-multiplex (streaming): symmetric reader and getContent
[info] - h2c http/2-multiplex (streaming): transport closure propagates to request stream reader
[info] - h2c http/2-multiplex (streaming): transport closure propagates to request stream producer
[info] - h2c http/2-multiplex (streaming): request discard terminates remote stream producer
[info] - h2c http/2-multiplex (streaming): client discard terminates stream and frees up the connection
[info] - h2c http/2-multiplex (streaming): two fixed-length requests
[info] - h2c http/2-multiplex (streaming): measure chunk payload size
[info] - Responses with Content-length header larger than 8 KB are not aggregated
[info] - Responses with Content-length header equal to 8 KB are aggregated
[info] - Responses with Content-length header smaller than 8 KB are aggregated
[info] - h2c http/2-multiplex: streaming requests can't be retried
[info] - h2c http/2-multiplex: streaming session bi-directionally transmit trailing headers
[info] - h2c http/2-multiplex: invalid trailer causes server to hang up
[info] - h2c http/2-multiplex: PooledByteBufAllocator maxOrder is 7 for servers
[info] - h2c http/2-multiplex: PooledByteBufAllocator maxOrder is 7 for clients
[info] - h2c http/2-multiplex: nonretryable isn't retried
[info] - Client-side ResponseClassifier based on status code
[info] - server-side ResponseClassifier based on status code
[info] - codec should require a message size be less than 2Gb
[info] - client respects MaxResponseSize
[info] - server rejects illegal headers with a 400
[info] - server rejects illegal trailers with a 400
[info] - client rejects illegal headers with an exception
[info] - client rejects illegal trailer with an exception
[info] - obs-fold sequences are 'fixed' when received by clients
[info] - obs-fold sequences are 'fixed' when received by servers
[info] - server responds with 400 Bad Request if non-ascii character is present in uri
[info] - server responds 500 if an invalid header is being served
[info] - client respects MaxHeaderSize in response !!! IGNORED !!!
[info] - non-streaming clients can decompress content
[info] - non-streaming clients can disable decompression
[info] - removing the compressor works
[info] - request remote address
[info] - out of order client requests are OK
[info] - h2c http/2-multiplex client handles cut connection properly
[info] - Does not retry service acquisition many times when not using FactoryToService
[info] - h2c http/2-multiplex: Graceful shutdown & draining
[info] - h2c http/2-multiplex: methodBuilder timeouts from Stack
[info] - h2c http/2-multiplex: methodBuilder timeouts from ClientBuilder
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header field
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header fieldwhen non-empty body is returned
[info] - response with status code 100 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 102 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 204 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 304 must not have a message body *BUT* Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - client closes properly when closed
[info] - client doesn't honor the Netty stream dependency extension header
[info] - Upgrade stats are properly recorded
[info] - Upgrade ignored
[info] - Server sets & enforces MaxHeaderSize
[info] - H1 related connection headers are stripped
[info] - The TE header is allowed if its value is trailers
[info] - Upgrades to HTTP/2 only if both have the toggle on, and it's H2C, not H2
[info] - Configuration params take precedence over the toggle for the client
[info] - Configuration params take precedence over the toggle for the server
[info] - We delete the HTTP2-SETTINGS header properly
[info] - draining servers process pending requests
[info] - illegal headers produce a non-zero error code on the client
[info] SpnegoAuthenticatorTest:
[info] - no header
[info] - bad header
[info] - malformed token
[info] - success
[info] - isLoginValid returns correct result
Jul 30, 2019 5:23:42 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:60068, downstream address: n/a, label: server).
java.lang.IllegalArgumentException: bad news
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:217)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:216)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.ThreadUsage$ThreadUsageFilter.apply(ThreadUsage.scala:130)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.DtabStatsFilter.apply(DtabStatsFilter.scala:37)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.StatsFilter.apply(StatsFilter.scala:258)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ServerStatsFilter.apply(ServerStatsFilter.scala:55)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:131)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:92)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelRequestStatsHandler.channelRead(ChannelRequestStatsHandler.scala:48)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:543)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onHeadersRead(DefaultHttp2ConnectionDecoder.java:317)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:43 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:43679, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply$mcV$sp(AbstractEndToEndTest.scala:474)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:43 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:40781, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply$mcV$sp(AbstractEndToEndTest.scala:515)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:45 PM com.twitter.finagle.http2.transport.H2Filter$$anonfun$1$$anon$4 run
INFO: Graceful draining period lapsed. Sending final GOAWAY and closing the connection.
Jul 30, 2019 5:23:46 PM com.twitter.finagle.http2.transport.StreamTransportFactory$StreamTransport com$twitter$finagle$http2$transport$StreamTransportFactory$StreamTransport$$handleBadState
ERROR: Stream 3 bad state: Write to dead stream: DefaultHttpContent(data: ReadOnlyByteBuf(ridx: 0, widx: 1, cap: 1/1, unwrapped: UnpooledHeapByteBuf(ridx: 0, widx: 1, cap: 1/1)), decoderResult: success)
Jul 30, 2019 5:23:46 PM com.twitter.finagle.http2.transport.StreamTransportFactory$StreamTransport com$twitter$finagle$http2$transport$StreamTransportFactory$StreamTransport$$handleBadState
ERROR: Stream 3 bad state: Write to dead stream: DefaultHttpContent(data: ReadOnlyByteBuf(ridx: 0, widx: 1, cap: 1/1, unwrapped: UnpooledHeapByteBuf(ridx: 0, widx: 1, cap: 1/1)), decoderResult: success)
Jul 30, 2019 5:23:46 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:34843, label: http).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: /0.0.0.0:34843, Downstream label: http, Trace Id: 00e88482016d434c.00e88482016d434c<:00e88482016d434c

Jul 30, 2019 5:23:47 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:23:47 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:23:47 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:23:47 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:23:47 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:23:47 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:23:47 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:46318, downstream address: n/a, label: ).
com.twitter.finagle.http.Rfc7230HeaderValidation$ValueValidationException: Header 'foo': value contains a prohibited character '0xc': 
	at com.twitter.finagle.http.Rfc7230HeaderValidation$.validateValue(Rfc7230HeaderValidation.scala:140)
	at com.twitter.finagle.http.DefaultHeaderMap$.com$twitter$finagle$http$DefaultHeaderMap$$foldReplacingValidateValue(DefaultHeaderMap.scala:103)
	at com.twitter.finagle.http.DefaultHeaderMap.add(DefaultHeaderMap.scala:33)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1340)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1337)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.Http2StreamMessageHandler.channelRead(Http2StreamMessageHandler.scala:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.http2.transport.StripHeadersHandler$.channelRead(StripHeadersHandler.scala:24)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:1061)
	at io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:770)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:233)
	at io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onHeadersRead(Http2FrameCodec.java:549)
	at io.netty.handler.codec.http2.InboundHttpToHttp2Adapter.handle(InboundHttpToHttp2Adapter.java:67)
	at io.netty.handler.codec.http2.Http2FrameCodec.userEventTriggered(Http2FrameCodec.java:255)
	at io.netty.channel.AbstractChannelHandlerContext.invokeUserEventTriggered(AbstractChannelHandlerContext.java:341)
	at io.netty.channel.AbstractChannelHandlerContext.invokeUserEventTriggered(AbstractChannelHandlerContext.java:327)
	at io.netty.channel.AbstractChannelHandlerContext.fireUserEventTriggered(AbstractChannelHandlerContext.java:319)
	at io.netty.handler.codec.http.HttpServerUpgradeHandler.upgrade(HttpServerUpgradeHandler.java:339)
	at io.netty.handler.codec.http.HttpServerUpgradeHandler.decode(HttpServerUpgradeHandler.java:239)
	at io.netty.handler.codec.http.HttpServerUpgradeHandler.decode(HttpServerUpgradeHandler.java:40)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:88)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:71)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:47 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:23:47 PM com.twitter.finagle.http2.transport.H2Filter close
INFO: Closing h2 session with deadline 2019-07-30 17:23:52 +0000
Jul 30, 2019 5:23:47 PM com.twitter.finagle.http2.transport.Http2NegotiatingTransporter$$anonfun$useExistingConnection$1 apply
INFO: Existing session is closed.
Jul 30, 2019 5:23:48 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:48 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:48 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:48 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 304 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:48 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:48 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 100 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:23:48 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:48 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 102 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:23:48 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:48 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 204 must not have a Content-Length header field thus the field has been removed. Content-Length: 9
Jul 30, 2019 5:23:48 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleNoMessageResponse
INFO: Response with a status code of 304 must not have a body-message but it has a 9-byte payload, thus the content has been removed.
Jul 30, 2019 5:23:48 PM com.twitter.finagle.http2.transport.H2Filter close
INFO: Closing h2 session with deadline 2019-07-30 17:33:48 +0000
Jul 30, 2019 5:23:48 PM io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener shouldIgnoreHeadersOrDataFrame
INFO: [id: 0xb6618cbe, L:/127.0.0.1:46578 - R:/127.0.0.1:38602] ignoring HEADERS frame for stream RST_STREAM sent.
Jul 30, 2019 5:23:48 PM io.netty.handler.codec.http2.Http2FrameCodec onHttp2UnknownStreamError
WARNING: Stream exception thrown for unkown stream 3.
io.netty.handler.codec.http2.Http2Exception$StreamException: Invalid HTTP/2 pseudo-header ':invalid' encountered.
	at io.netty.handler.codec.http2.Http2Exception.streamError(Http2Exception.java:129)
	at io.netty.handler.codec.http2.HpackDecoder.validate(HpackDecoder.java:388)
	at io.netty.handler.codec.http2.HpackDecoder.access$000(HpackDecoder.java:54)
	at io.netty.handler.codec.http2.HpackDecoder$Http2HeadersSink.appendToHeaderList(HpackDecoder.java:559)
	at io.netty.handler.codec.http2.HpackDecoder.insertHeader(HpackDecoder.java:426)
	at io.netty.handler.codec.http2.HpackDecoder.decode(HpackDecoder.java:287)
	at io.netty.handler.codec.http2.HpackDecoder.decode(HpackDecoder.java:124)
	at io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder.decodeHeaders(DefaultHttp2HeadersDecoder.java:127)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersBlockBuilder.headers(DefaultHttp2FrameReader.java:743)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader$1.processFragment(DefaultHttp2FrameReader.java:457)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readHeadersFrame(DefaultHttp2FrameReader.java:464)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:254)
	at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)
	at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

[info] ClassicH2CEndToEndTest:
[info] - h2c http/2: request header fields too large
[info] - h2c http/2: with default client-side ResponseClassifier
[info] - h2c http/2: with default server-side ResponseClassifier
[info] - h2c http/2: unhandled exceptions are converted into 500s
[info] - h2c http/2: client stack observes max header size
[info] - h2c http/2: client sets content length
[info] - h2c http/2: echo
[info] - h2c http/2: dtab
[info] - h2c http/2: (no) dtab
[info] - h2c http/2: context
[info] - h2c http/2: measure payload size
[info] - h2c http/2: interrupt requests
[info] - h2c http/2: interrupting requests doesn't interfere with others
[info] - h2c http/2: aggregates trailers when streams are aggregated
[info] - h2c http/2: trace
[info] - h2c http/2 (streaming): stream
[info] - h2c http/2 (streaming): stream via ResponseProxy filter
[info] - h2c http/2 (streaming): aggregates responses that must not have a body
[info] - h2c http/2 (streaming): stream via ResponseProxy class
[info] - h2c http/2 (streaming): streaming clients can decompress content
[info] - h2c http/2 (streaming): symmetric reader and getContent
[info] - h2c http/2 (streaming): transport closure propagates to request stream reader
[info] - h2c http/2 (streaming): transport closure propagates to request stream producer
[info] - h2c http/2 (streaming): request discard terminates remote stream producer
[info] - h2c http/2 (streaming): client discard terminates stream and frees up the connection
[info] - h2c http/2 (streaming): two fixed-length requests
[info] - h2c http/2 (streaming): measure chunk payload size
[info] - Responses with Content-length header larger than 8 KB are not aggregated
[info] - Responses with Content-length header equal to 8 KB are aggregated
[info] - Responses with Content-length header smaller than 8 KB are aggregated
[info] - h2c http/2: streaming requests can't be retried
[info] - h2c http/2: streaming session bi-directionally transmit trailing headers
[info] - h2c http/2: invalid trailer causes server to hang up
[info] - h2c http/2: PooledByteBufAllocator maxOrder is 7 for servers
[info] - h2c http/2: PooledByteBufAllocator maxOrder is 7 for clients
[info] - h2c http/2: nonretryable isn't retried
[info] - Client-side ResponseClassifier based on status code
[info] - server-side ResponseClassifier based on status code
[info] - codec should require a message size be less than 2Gb
[info] - client respects MaxResponseSize
[info] - server rejects illegal headers with a 400
[info] - server rejects illegal trailers with a 400
[info] - client rejects illegal headers with an exception
[info] - client rejects illegal trailer with an exception
[info] - obs-fold sequences are 'fixed' when received by clients
[info] - obs-fold sequences are 'fixed' when received by servers
[info] - server responds with 400 Bad Request if non-ascii character is present in uri
[info] - server responds 500 if an invalid header is being served
[info] - client respects MaxHeaderSize in response
[info] - non-streaming clients can decompress content
[info] - non-streaming clients can disable decompression
[info] - removing the compressor works
[info] - request remote address
[info] - out of order client requests are OK
[info] - h2c http/2 client handles cut connection properly
[info] - Does not retry service acquisition many times when not using FactoryToService
[info] - h2c http/2: Graceful shutdown & draining
[info] - h2c http/2: methodBuilder timeouts from Stack
[info] - h2c http/2: methodBuilder timeouts from ClientBuilder
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header field
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header fieldwhen non-empty body is returned
[info] - response with status code 100 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 102 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 204 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - response with status code 304 must not have a message body *BUT* Content-Length header field when non-empty body with explicit Content-Length is returned
[info] - client closes properly when closed
[info] - client doesn't honor the Netty stream dependency extension header
[info] - Upgrade stats are properly recorded
[info] - Upgrade ignored
[info] - Server sets & enforces MaxHeaderSize
[info] - H1 related connection headers are stripped
[info] - The TE header is allowed if its value is trailers
[info] - Upgrades to HTTP/2 only if both have the toggle on, and it's H2C, not H2
[info] - Configuration params take precedence over the toggle for the client
[info] - Configuration params take precedence over the toggle for the server
[info] - We delete the HTTP2-SETTINGS header properly
[info] - draining servers process pending requests
[info] - illegal headers produce a non-zero error code on the client
[info] Netty4MultipartDecoderTest:
[info] - Attribute
[info] - FileUpload (in-memory)
[info] - FileUpload (on-disk)
[info] - Not a multipart request
[debug] Test run started
[debug] Test com.twitter.finagle.http.service.HttpResponseClassifierCompilationTest.testApply started
[debug] Test com.twitter.finagle.http.service.HttpResponseClassifierCompilationTest.testApply finished, took 0.002 sec
[debug] Test com.twitter.finagle.http.service.HttpResponseClassifierCompilationTest.testServerErrorsAsFailures started
[debug] Test com.twitter.finagle.http.service.HttpResponseClassifierCompilationTest.testServerErrorsAsFailures finished, took 0.0 sec
[debug] Test run finished: 0 failed, 0 ignored, 2 total, 0.003s
[info] ClientTest:
[info] AddResponseHeadersFilterTest:
[info] - add headers
[debug] Test run started
[debug] Test com.twitter.finagle.http.service.MethodBuilderCompilationTest.testTimeouts started
[debug] Test com.twitter.finagle.http.service.MethodBuilderCompilationTest.testTimeouts finished, took 0.006 sec
[debug] Test com.twitter.finagle.http.service.MethodBuilderCompilationTest.testRetriesDisabled started
[debug] Test com.twitter.finagle.http.service.MethodBuilderCompilationTest.testRetriesDisabled finished, took 0.004 sec
[debug] Test com.twitter.finagle.http.service.MethodBuilderCompilationTest.testRetries started
[debug] Test com.twitter.finagle.http.service.MethodBuilderCompilationTest.testRetries finished, took 0.003 sec
[debug] Test run finished: 0 failed, 0 ignored, 3 total, 0.016s
Jul 30, 2019 5:23:49 PM com.twitter.finagle.http.filter.ClientNackFilter$$anonfun$com$twitter$finagle$http$filter$ClientNackFilter$$swallowNackBody$1 apply
WARNING: Received an excessively large nack response body.
Jul 30, 2019 5:23:49 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:45442, label: http).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: /0.0.0.0:45442, Downstream label: http, Trace Id: aded048b9a9997e3.aded048b9a9997e3<:aded048b9a9997e3

[info] ClientNackFilterTest:
[info] - converts nacked requests into failures with the right flags
[info] - Lets a regular request through
[info] - Converts an aggregated Nack response
[info] - swallows the body of a HttpNack if it happens to come as a chunked response
[info] - fails on excessively large nack response
[info] - always marks streaming requests as non-retryable
[info] - adds the magic header to requests that aren't chunked
[info] - multiple nack headers are not added if the request is retried
Jul 30, 2019 5:23:49 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:60388, downstream address: n/a, label: server).
org.scalatest.exceptions.TestFailedException: "[]" did not equal "[hello]"
	at org.scalatest.Assertions$class.newAssertionFailedException(Assertions.scala:528)
	at org.scalatest.FunSuite.newAssertionFailedException(FunSuite.scala:1560)
	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:501)
	at com.twitter.finagle.http.AbstractStreamingTest$$anonfun$11$$anonfun$27.apply(AbstractStreamingTest.scala:368)
	at com.twitter.finagle.http.AbstractStreamingTest$$anonfun$11$$anonfun$27.apply(AbstractStreamingTest.scala:367)
	at com.twitter.finagle.Service$$anon$2.apply(Service.scala:29)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter$$anonfun$apply$1.apply(HttpNackFilter.scala:159)
	at com.twitter.finagle.http.filter.HttpNackFilter$$anonfun$apply$1.apply(HttpNackFilter.scala:159)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:158)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:36)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.HttpServerExpectContinueHandler.channelRead(HttpServerExpectContinueHandler.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.http.handler.PayloadSizeHandler.channelRead(PayloadSizeHandler.scala:59)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.Http2CleartextServerInitializer$MaybeUpgradeHandler.channelRead(Http2CleartextServerInitializer.scala:105)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:426)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.http2.transport.PriorKnowledgeHandler.channelRead(PriorKnowledgeHandler.scala:71)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:49 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:45479, label: client).
java.lang.Exception
	at com.twitter.finagle.http.AbstractStreamingTest$$anonfun$30.apply(AbstractStreamingTest.scala:424)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at org.scalatest.FunSuite.run(FunSuite.scala:1560)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

[info] Http2StreamingTest:
[info] - client: request stream fails on write
[info] - client: response stream fails on read
[info] - client: server disconnect on pending response should fail request
[info] - client: client closes transport after server disconnects
[info] - client: fail request writer
[info] - client: discard respond reader
[info] - server: request stream fails read
[info] - server: response stream fails write
[info] - server: fail response writer
[info] - server: fail request reader
[info] - server: empty buf doesn't close response stream
[info] - client: empty buf doesn't close request stream
[info] - end-to-end: server gets content for chunked request made to client with content length
[info] - end-to-end: client may process multiple streaming requests simultaneously
[info] - server: inbound stream (reader) propagates closures initiated remotely
[info] - server: outbound stream (writer) propagates closures initiated remotely
[info] - client: inbound stream (reader) propagates closures initiated remotely
[info] - client: outbound stream (writer) propagates closures initiated remotely
[info] MultiplexedHttp2AlpnTest:
[info] - alpn http/2-multiplex: request header fields too large !!! IGNORED !!!
[info] - alpn http/2-multiplex: with default client-side ResponseClassifier !!! IGNORED !!!
[info] - alpn http/2-multiplex: with default server-side ResponseClassifier !!! IGNORED !!!
[info] - alpn http/2-multiplex: unhandled exceptions are converted into 500s !!! IGNORED !!!
[info] - alpn http/2-multiplex: client stack observes max header size !!! IGNORED !!!
[info] - alpn http/2-multiplex: client sets content length !!! IGNORED !!!
[info] - alpn http/2-multiplex: echo !!! IGNORED !!!
[info] - alpn http/2-multiplex: dtab !!! IGNORED !!!
[info] - alpn http/2-multiplex: (no) dtab !!! IGNORED !!!
[info] - alpn http/2-multiplex: context !!! IGNORED !!!
[info] - alpn http/2-multiplex: measure payload size !!! IGNORED !!!
[info] - alpn http/2-multiplex: interrupt requests !!! IGNORED !!!
[info] - alpn http/2-multiplex: interrupting requests doesn't interfere with others !!! IGNORED !!!
[info] - alpn http/2-multiplex: aggregates trailers when streams are aggregated !!! IGNORED !!!
[info] - alpn http/2-multiplex: trace !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): stream !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): stream via ResponseProxy filter !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): aggregates responses that must not have a body !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): stream via ResponseProxy class !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): streaming clients can decompress content !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): symmetric reader and getContent !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): transport closure propagates to request stream reader !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): transport closure propagates to request stream producer !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): request discard terminates remote stream producer !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): client discard terminates stream and frees up the connection !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): two fixed-length requests !!! IGNORED !!!
[info] - alpn http/2-multiplex (streaming): measure chunk payload size !!! IGNORED !!!
[info] - Responses with Content-length header larger than 8 KB are not aggregated !!! IGNORED !!!
[info] - Responses with Content-length header equal to 8 KB are aggregated !!! IGNORED !!!
[info] - Responses with Content-length header smaller than 8 KB are aggregated !!! IGNORED !!!
[info] - alpn http/2-multiplex: streaming requests can't be retried !!! IGNORED !!!
[info] - alpn http/2-multiplex: streaming session bi-directionally transmit trailing headers !!! IGNORED !!!
[info] - alpn http/2-multiplex: invalid trailer causes server to hang up !!! IGNORED !!!
[info] - alpn http/2-multiplex: PooledByteBufAllocator maxOrder is 7 for servers !!! IGNORED !!!
[info] - alpn http/2-multiplex: PooledByteBufAllocator maxOrder is 7 for clients !!! IGNORED !!!
[info] - alpn http/2-multiplex: nonretryable isn't retried !!! IGNORED !!!
[info] - Client-side ResponseClassifier based on status code !!! IGNORED !!!
[info] - server-side ResponseClassifier based on status code !!! IGNORED !!!
[info] - codec should require a message size be less than 2Gb !!! IGNORED !!!
[info] - client respects MaxResponseSize !!! IGNORED !!!
[info] - server rejects illegal headers with a 400 !!! IGNORED !!!
[info] - server rejects illegal trailers with a 400 !!! IGNORED !!!
[info] - client rejects illegal headers with an exception !!! IGNORED !!!
[info] - client rejects illegal trailer with an exception !!! IGNORED !!!
[info] - obs-fold sequences are 'fixed' when received by clients !!! IGNORED !!!
[info] - obs-fold sequences are 'fixed' when received by servers !!! IGNORED !!!
[info] - server responds with 400 Bad Request if non-ascii character is present in uri !!! IGNORED !!!
[info] - server responds 500 if an invalid header is being served !!! IGNORED !!!
[info] - client respects MaxHeaderSize in response !!! IGNORED !!!
[info] - non-streaming clients can decompress content !!! IGNORED !!!
[info] - non-streaming clients can disable decompression !!! IGNORED !!!
[info] - removing the compressor works !!! IGNORED !!!
[info] - request remote address !!! IGNORED !!!
[info] - out of order client requests are OK !!! IGNORED !!!
[info] - alpn http/2-multiplex client handles cut connection properly !!! IGNORED !!!
[info] - Does not retry service acquisition many times when not using FactoryToService !!! IGNORED !!!
[info] - alpn http/2-multiplex: Graceful shutdown & draining !!! IGNORED !!!
[info] - alpn http/2-multiplex: methodBuilder timeouts from Stack !!! IGNORED !!!
[info] - alpn http/2-multiplex: methodBuilder timeouts from ClientBuilder !!! IGNORED !!!
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header field !!! IGNORED !!!
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header fieldwhen non-empty body is returned !!! IGNORED !!!
[info] - response with status code 100 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 102 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 204 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 304 must not have a message body *BUT* Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - client closes properly when closed !!! IGNORED !!!
[info] - client doesn't honor the Netty stream dependency extension header !!! IGNORED !!!
[info] - An alpn connection counts as one upgrade for stats !!! IGNORED !!!
[info] - Upgrades to HTTP/2 only if both have the toggle on and it's H2, not H2C !!! IGNORED !!!
[info] - clients don't leak connections when h2 is rejected !!! IGNORED !!!
Jul 30, 2019 5:23:50 PM com.twitter.util.RootMonitor$$anonfun$2 applyOrElse
SEVERE: Exception propagated to the root monitor!
org.scalatest.exceptions.TestFailedException: Expected None; got close(Time.Bottom)
	at org.scalatest.Assertions$class.newAssertionFailedException(Assertions.scala:528)
	at org.scalatest.Assertions$.newAssertionFailedException(Assertions.scala:1387)
	at org.scalatest.Assertions$class.fail(Assertions.scala:1089)
	at org.scalatest.Assertions$.fail(Assertions.scala:1387)
	at com.twitter.finagle.http.codec.OpTransport.close(HttpClientDispatcherTest.scala:74)
	at com.twitter.finagle.http.exp.StreamTransportProxy.close(StreamTransport.scala:42)
	at com.twitter.util.Closable$class.close(Closable.scala:21)
	at com.twitter.finagle.http.exp.StreamTransportProxy.close(StreamTransport.scala:36)
	at com.twitter.finagle.http.codec.HttpClientDispatcher$$anonfun$dispatch$2.apply(HttpClientDispatcher.scala:45)
	at com.twitter.finagle.http.codec.HttpClientDispatcher$$anonfun$dispatch$2.apply(HttpClientDispatcher.scala:38)
	at com.twitter.util.Future$$anonfun$onFailure$1.apply(Future.scala:1943)
	at com.twitter.util.Future$$anonfun$onFailure$1.apply(Future.scala:1942)
	at com.twitter.util.Promise$Monitored.apply(Promise.scala:211)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:790)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setException(Promise.scala:752)
	at com.twitter.finagle.http.codec.HttpClientDispatcherTest$$anonfun$6.apply(HttpClientDispatcherTest.scala:237)
	at com.twitter.finagle.http.codec.HttpClientDispatcherTest$$anonfun$6.apply(HttpClientDispatcherTest.scala:214)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at org.scalatest.FunSuite.run(FunSuite.scala:1560)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:50 PM com.twitter.util.RootMonitor$$anonfun$2 applyOrElse
SEVERE: Exception propagated to the root monitor!
org.scalatest.exceptions.TestFailedException: Expected None; got close(Time.Bottom)
	at org.scalatest.Assertions$class.newAssertionFailedException(Assertions.scala:528)
	at org.scalatest.Assertions$.newAssertionFailedException(Assertions.scala:1387)
	at org.scalatest.Assertions$class.fail(Assertions.scala:1089)
	at org.scalatest.Assertions$.fail(Assertions.scala:1387)
	at com.twitter.finagle.http.codec.OpTransport.close(HttpClientDispatcherTest.scala:74)
	at com.twitter.finagle.http.exp.StreamTransportProxy.close(StreamTransport.scala:42)
	at com.twitter.util.Closable$class.close(Closable.scala:21)
	at com.twitter.finagle.http.exp.StreamTransportProxy.close(StreamTransport.scala:36)
	at com.twitter.finagle.http.codec.HttpClientDispatcher$$anonfun$dispatch$2.apply(HttpClientDispatcher.scala:45)
	at com.twitter.finagle.http.codec.HttpClientDispatcher$$anonfun$dispatch$2.apply(HttpClientDispatcher.scala:38)
	at com.twitter.util.Future$$anonfun$onFailure$1.apply(Future.scala:1943)
	at com.twitter.util.Future$$anonfun$onFailure$1.apply(Future.scala:1942)
	at com.twitter.util.Promise$Monitored.apply(Promise.scala:211)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:790)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setException(Promise.scala:752)
	at com.twitter.finagle.http.codec.HttpClientDispatcherTest$$anonfun$8.apply(HttpClientDispatcherTest.scala:268)
	at com.twitter.finagle.http.codec.HttpClientDispatcherTest$$anonfun$8.apply(HttpClientDispatcherTest.scala:243)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at org.scalatest.FunSuite.run(FunSuite.scala:1560)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:50 PM com.twitter.util.RootMonitor$$anonfun$2 applyOrElse
SEVERE: Exception propagated to the root monitor!
org.scalatest.exceptions.TestFailedException: Expected None; got close(Time.Bottom)
	at org.scalatest.Assertions$class.newAssertionFailedException(Assertions.scala:528)
	at org.scalatest.Assertions$.newAssertionFailedException(Assertions.scala:1387)
	at org.scalatest.Assertions$class.fail(Assertions.scala:1089)
	at org.scalatest.Assertions$.fail(Assertions.scala:1387)
	at com.twitter.finagle.http.codec.OpTransport.close(HttpClientDispatcherTest.scala:74)
	at com.twitter.finagle.http.exp.StreamTransportProxy.close(StreamTransport.scala:42)
	at com.twitter.util.Closable$class.close(Closable.scala:21)
	at com.twitter.finagle.http.exp.StreamTransportProxy.close(StreamTransport.scala:36)
	at com.twitter.finagle.http.codec.HttpClientDispatcher$$anonfun$dispatch$2.apply(HttpClientDispatcher.scala:45)
	at com.twitter.finagle.http.codec.HttpClientDispatcher$$anonfun$dispatch$2.apply(HttpClientDispatcher.scala:38)
	at com.twitter.util.Future$$anonfun$onFailure$1.apply(Future.scala:1943)
	at com.twitter.util.Future$$anonfun$onFailure$1.apply(Future.scala:1942)
	at com.twitter.util.Promise$Monitored.apply(Promise.scala:211)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:790)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setException(Promise.scala:752)
	at com.twitter.finagle.http.codec.HttpClientDispatcherTest$$anonfun$10.apply(HttpClientDispatcherTest.scala:306)
	at com.twitter.finagle.http.codec.HttpClientDispatcherTest$$anonfun$10.apply(HttpClientDispatcherTest.scala:276)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at org.scalatest.FunSuite.run(FunSuite.scala:1560)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

[info] HttpClientDispatcherTest:
[info] - streaming request body
[info] - invalid message
[info] - not chunked
[info] - chunked
[info] - error mid-chunk
[info] - upstream interrupt: before write
[info] - upstream interrupt: during req stream (read)
[info] - upstream interrupt: during req stream (write)
[info] PayloadSizeFilterTest:
[info] - nonStreaming -- traces sizes when actively tracing
[info] - nonStreaming -- doesn't trace sizes when not actively tracing
[info] - nonStreaming -- records metrics
[info] - streaming -- traces sizes when actively tracing
[info] - streaming -- doesn't trace sizes when not actively tracing
[info] - streaming -- records metrics
[info] HttpServerDispatcherTest:
[info] - invalid message
[info] - don't clobber service 'Connection: close' headers set by service
[info] - streaming request body
[info] - client abort before dispatch
[info] - client abort after dispatch
[info] - server response fails mid-stream
[info] ClassicHttp2AlpnTest:
[info] - alpn http/2: request header fields too large !!! IGNORED !!!
[info] - alpn http/2: with default client-side ResponseClassifier !!! IGNORED !!!
[info] - alpn http/2: with default server-side ResponseClassifier !!! IGNORED !!!
[info] - alpn http/2: unhandled exceptions are converted into 500s !!! IGNORED !!!
[info] - alpn http/2: client stack observes max header size !!! IGNORED !!!
[info] - alpn http/2: client sets content length !!! IGNORED !!!
[info] - alpn http/2: echo !!! IGNORED !!!
[info] - alpn http/2: dtab !!! IGNORED !!!
[info] - alpn http/2: (no) dtab !!! IGNORED !!!
[info] - alpn http/2: context !!! IGNORED !!!
[info] - alpn http/2: measure payload size !!! IGNORED !!!
[info] - alpn http/2: interrupt requests !!! IGNORED !!!
[info] - alpn http/2: interrupting requests doesn't interfere with others !!! IGNORED !!!
[info] - alpn http/2: aggregates trailers when streams are aggregated !!! IGNORED !!!
[info] - alpn http/2: trace !!! IGNORED !!!
[info] - alpn http/2 (streaming): stream !!! IGNORED !!!
[info] - alpn http/2 (streaming): stream via ResponseProxy filter !!! IGNORED !!!
[info] - alpn http/2 (streaming): aggregates responses that must not have a body !!! IGNORED !!!
[info] - alpn http/2 (streaming): stream via ResponseProxy class !!! IGNORED !!!
[info] - alpn http/2 (streaming): streaming clients can decompress content !!! IGNORED !!!
[info] - alpn http/2 (streaming): symmetric reader and getContent !!! IGNORED !!!
[info] - alpn http/2 (streaming): transport closure propagates to request stream reader !!! IGNORED !!!
[info] - alpn http/2 (streaming): transport closure propagates to request stream producer !!! IGNORED !!!
[info] - alpn http/2 (streaming): request discard terminates remote stream producer !!! IGNORED !!!
[info] - alpn http/2 (streaming): client discard terminates stream and frees up the connection !!! IGNORED !!!
[info] - alpn http/2 (streaming): two fixed-length requests !!! IGNORED !!!
[info] - alpn http/2 (streaming): measure chunk payload size !!! IGNORED !!!
[info] - Responses with Content-length header larger than 8 KB are not aggregated !!! IGNORED !!!
[info] - Responses with Content-length header equal to 8 KB are aggregated !!! IGNORED !!!
[info] - Responses with Content-length header smaller than 8 KB are aggregated !!! IGNORED !!!
[info] - alpn http/2: streaming requests can't be retried !!! IGNORED !!!
[info] - alpn http/2: streaming session bi-directionally transmit trailing headers !!! IGNORED !!!
[info] - alpn http/2: invalid trailer causes server to hang up !!! IGNORED !!!
[info] - alpn http/2: PooledByteBufAllocator maxOrder is 7 for servers !!! IGNORED !!!
[info] - alpn http/2: PooledByteBufAllocator maxOrder is 7 for clients !!! IGNORED !!!
[info] - alpn http/2: nonretryable isn't retried !!! IGNORED !!!
[info] - Client-side ResponseClassifier based on status code !!! IGNORED !!!
[info] - server-side ResponseClassifier based on status code !!! IGNORED !!!
[info] - codec should require a message size be less than 2Gb !!! IGNORED !!!
[info] - client respects MaxResponseSize !!! IGNORED !!!
[info] - server rejects illegal headers with a 400 !!! IGNORED !!!
[info] - server rejects illegal trailers with a 400 !!! IGNORED !!!
[info] - client rejects illegal headers with an exception !!! IGNORED !!!
[info] - client rejects illegal trailer with an exception !!! IGNORED !!!
[info] - obs-fold sequences are 'fixed' when received by clients !!! IGNORED !!!
[info] - obs-fold sequences are 'fixed' when received by servers !!! IGNORED !!!
[info] - server responds with 400 Bad Request if non-ascii character is present in uri !!! IGNORED !!!
[info] - server responds 500 if an invalid header is being served !!! IGNORED !!!
[info] - client respects MaxHeaderSize in response !!! IGNORED !!!
[info] - non-streaming clients can decompress content !!! IGNORED !!!
[info] - non-streaming clients can disable decompression !!! IGNORED !!!
[info] - removing the compressor works !!! IGNORED !!!
[info] - request remote address !!! IGNORED !!!
[info] - out of order client requests are OK !!! IGNORED !!!
[info] - alpn http/2 client handles cut connection properly !!! IGNORED !!!
[info] - Does not retry service acquisition many times when not using FactoryToService !!! IGNORED !!!
[info] - alpn http/2: Graceful shutdown & draining !!! IGNORED !!!
[info] - alpn http/2: methodBuilder timeouts from Stack !!! IGNORED !!!
[info] - alpn http/2: methodBuilder timeouts from ClientBuilder !!! IGNORED !!!
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header field !!! IGNORED !!!
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header fieldwhen non-empty body is returned !!! IGNORED !!!
[info] - response with status code 100 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 102 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 204 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 304 must not have a message body *BUT* Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - client closes properly when closed !!! IGNORED !!!
[info] - client doesn't honor the Netty stream dependency extension header !!! IGNORED !!!
[info] - An alpn connection counts as one upgrade for stats !!! IGNORED !!!
[info] - Upgrades to HTTP/2 only if both have the toggle on and it's H2, not H2C !!! IGNORED !!!
[info] - clients don't leak connections when h2 is rejected !!! IGNORED !!!
[debug] Test run started
[debug] Test com.twitter.finagle.http.HttpMuxerCompilationTest.testHttpMuxer started
[debug] Test com.twitter.finagle.http.HttpMuxerCompilationTest.testHttpMuxer finished, took 0.002 sec
[debug] Test run finished: 0 failed, 0 ignored, 1 total, 0.003s
[info] StatsFilterTest:
[info] - increment stats
[info] - status and time counters and stats are memoized
[info] RequestBuilderTest:
[info] - reject non-http urls
[info] - set the HOST header
[info] - set the HOST header when the HOST contains underscores
[info] - set the Authorization header when userInfo is present
[info] - replace the empty path with /
[info] - not include the fragment in the resource
[info] - not include the empty query string
[info] - set the correct protocol version
[info] - set the correct method
[info] - set headers
[info] - build form
[info] - build multipart form
[info] HeadFilterTest:
[info] - convert GET to HEAD
[info] - GET is normal
[debug] Test run started
[debug] Test com.twitter.finagle.http2.param.StackParamCompilationTest.testParams started
[debug] Test com.twitter.finagle.http2.param.StackParamCompilationTest.testParams finished, took 0.001 sec
[debug] Test run finished: 0 failed, 0 ignored, 1 total, 0.002s
[info] JsonpFilterTest:
[info] - wrap json
[info] - ignore non-json
[info] - ignore HEAD
[info] - ignore empty callback
Jul 30, 2019 5:23:50 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:52428, downstream address: n/a, label: server).
java.lang.IllegalArgumentException: bad news
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:217)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardErrors$4$$anon$6.apply(AbstractEndToEndTest.scala:216)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.ThreadUsage$ThreadUsageFilter.apply(ThreadUsage.scala:130)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.DtabStatsFilter.apply(DtabStatsFilter.scala:37)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.StatsFilter.apply(StatsFilter.scala:258)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ServerStatsFilter.apply(ServerStatsFilter.scala:55)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:131)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:92)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelRequestStatsHandler.channelRead(ChannelRequestStatsHandler.scala:48)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:50 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:33014, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply$mcV$sp(AbstractEndToEndTest.scala:474)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$9.apply(AbstractEndToEndTest.scala:451)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:50 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:38683, label: client).
java.lang.Exception: boom!
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply$mcV$sp(AbstractEndToEndTest.scala:515)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$standardBehaviour$10.apply(AbstractEndToEndTest.scala:485)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:203)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:131)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:181)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTest(OneInstancePerTest.scala:128)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTest(AbstractEndToEndTest.scala:28)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$OneInstancePerTest$$super$runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.OneInstancePerTest$class.runTests(OneInstancePerTest.scala:188)
	at com.twitter.finagle.http.AbstractEndToEndTest.runTests(AbstractEndToEndTest.scala:28)
	at org.scalatest.Suite$class.run(Suite.scala:1147)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
	at com.twitter.finagle.http.AbstractEndToEndTest.org$scalatest$BeforeAndAfter$$super$run(AbstractEndToEndTest.scala:28)
	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:258)
	at com.twitter.finagle.http.AbstractEndToEndTest.run(AbstractEndToEndTest.scala:28)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:472)
	at sbt.TestRunner.runTest$1(TestFramework.scala:106)
	at sbt.TestRunner.run(TestFramework.scala:117)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:262)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:233)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:262)
	at sbt.TestFunction.apply(TestFramework.scala:271)
	at sbt.Tests$.processRunnable$1(Tests.scala:307)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:313)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:66)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:262)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:271)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:262)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:174)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:52 PM com.twitter.finagle.http2.transport.H2Filter$$anonfun$1$$anon$4 run
INFO: Graceful draining period lapsed. Sending final GOAWAY and closing the connection.
Jul 30, 2019 5:23:54 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: localhost/127.0.0.1:41590, label: client).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: localhost/127.0.0.1:41590, Downstream label: client, Trace Id: 64e5090b5060d56a.64e5090b5060d56a<:64e5090b5060d56a

Jul 30, 2019 5:23:54 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:45555, label: http).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: /0.0.0.0:45555, Downstream label: http, Trace Id: 26d441575e70fa6c.26d441575e70fa6c<:26d441575e70fa6c

Jul 30, 2019 5:23:54 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:51958, downstream address: n/a, label: ).
com.twitter.finagle.http.Rfc7230HeaderValidation$ValueValidationException: Header 'foo': value contains a prohibited character '0xc': 
	at com.twitter.finagle.http.Rfc7230HeaderValidation$.validateValue(Rfc7230HeaderValidation.scala:140)
	at com.twitter.finagle.http.DefaultHeaderMap$.com$twitter$finagle$http$DefaultHeaderMap$$foldReplacingValidateValue(DefaultHeaderMap.scala:103)
	at com.twitter.finagle.http.DefaultHeaderMap.add(DefaultHeaderMap.scala:33)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1340)
	at com.twitter.finagle.http.AbstractEndToEndTest$$anonfun$72$$anon$34.apply(AbstractEndToEndTest.scala:1337)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Jul 30, 2019 5:23:55 PM com.twitter.finagle.http.codec.ResponseConformanceFilter$ handleHeadResponse
INFO: Received response to HEAD request (Request("HEAD /", from /127.0.0.1:39758)) that contained a static body of length 10. Discarding body. If this is desired behavior, consider adding HeadFilter to your service
[info] Netty4EndToEndTest:
[info] - netty4 http/1.1: request header fields too large
[info] - netty4 http/1.1: with default client-side ResponseClassifier
[info] - netty4 http/1.1: with default server-side ResponseClassifier
[info] - netty4 http/1.1: unhandled exceptions are converted into 500s
[info] - netty4 http/1.1: client stack observes max header size
[info] - netty4 http/1.1: client sets content length
[info] - netty4 http/1.1: echo
[info] - netty4 http/1.1: dtab
[info] - netty4 http/1.1: (no) dtab
[info] - netty4 http/1.1: context
[info] - netty4 http/1.1: measure payload size
[info] - netty4 http/1.1: interrupt requests
[info] - netty4 http/1.1: interrupting requests doesn't interfere with others
[info] - netty4 http/1.1: aggregates trailers when streams are aggregated
[info] - netty4 http/1.1: trace
[info] - netty4 http/1.1 (streaming): stream
[info] - netty4 http/1.1 (streaming): stream via ResponseProxy filter
[info] - netty4 http/1.1 (streaming): aggregates responses that must not have a body
[info] - netty4 http/1.1 (streaming): stream via ResponseProxy class
[info] - netty4 http/1.1 (streaming): streaming clients can decompress content
[info] - netty4 http/1.1 (streaming): symmetric reader and getContent
[info] - netty4 http/1.1 (streaming): transport closure propagates to request stream reader
[info] - netty4 http/1.1 (streaming): transport closure propagates to request stream producer
[info] - netty4 http/1.1 (streaming): request discard terminates remote stream producer
[info] - netty4 http/1.1 (streaming): client discard terminates stream and frees up the connection
[info] - netty4 http/1.1 (streaming): two fixed-length requests
[info] - netty4 http/1.1 (streaming): measure chunk payload size
[info] - Responses with Content-length header larger than 8 KB are not aggregated
[info] - Responses with Content-length header equal to 8 KB are aggregated
[info] - Responses with Content-length header smaller than 8 KB are aggregated
[info] - netty4 http/1.1: streaming requests can't be retried
[info] - netty4 http/1.1: streaming session bi-directionally transmit trailing headers
[info] - netty4 http/1.1: invalid trailer causes server to hang up
[info] - netty4 http/1.1: PooledByteBufAllocator maxOrder is 7 for servers
[info] - netty4 http/1.1: PooledByteBufAllocator maxOrder is 7 for clients
[info] - netty4 http/1.1: nonretryable isn't retried
[info] - Client-side ResponseClassifier based on status code
[info] - server-side ResponseClassifier based on status code
[info] - codec should require a message size be less than 2Gb
[info] - client respects MaxResponseSize
[info] - server rejects illegal headers with a 400
[info] - server rejects illegal trailers with a 400
[info] - client rejects illegal headers with an exception
[info] - client rejects illegal trailer with an exception
[info] - obs-fold sequences are 'fixed' when received by clients
[info] - obs-fold sequences are 'fixed' when received by servers
[info] - server responds with 400 Bad Request if non-ascii character is present in uri
[info] - server responds 500 if an invalid header is being served
[info] - client respects MaxHeaderSize in response
[info] - non-streaming clients can decompress content
[info] - non-streaming clients can disable decompression
[info] - removing the compressor works
[info] - request remote address
[info] - out of order client requests are OK
[info] - netty4 http/1.1 client handles cut connection properly
[info] - Does not retry service acquisition many times when not using FactoryToService
[info] - netty4 http/1.1: Graceful shutdown & draining
[info] - netty4 http/1.1: methodBuilder timeouts from Stack
[info] - netty4 http/1.1: methodBuilder timeouts from ClientBuilder
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header field !!! IGNORED !!!
[info] - response with status code {1xx, 204 and 304} must not have a message body nor Content-Length header fieldwhen non-empty body is returned !!! IGNORED !!!
[info] - response with status code 100 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 102 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 204 must not have a message body nor Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - response with status code 304 must not have a message body *BUT* Content-Length header field when non-empty body with explicit Content-Length is returned !!! IGNORED !!!
[info] - netty4 http/1.1: HTTP/1.0
[info] - netty4 http/1.1: initial request line too long
[info] - netty4 http/1.1 (non-streaming): Request with 'Connection: close'
[info] - netty4 http/1.1 (non-streaming): Response with 'Connection: close'
[info] - netty4 http/1.1 (non-streaming): : closes the connection on request header fields too large
[info] - netty4 http/1.1 (non-streaming): HTTP/1.0
[info] - netty4 http/1.1 (streaming): Request with 'Connection: close'
[info] - netty4 http/1.1 (streaming): Response with 'Connection: close'
[info] - netty4 http/1.1 (streaming): : closes the connection on request header fields too large
[info] - netty4 http/1.1 (streaming): HTTP/1.0
[info] - non-streaming server handles expect continue header when autoContinue is disabled
[info] - non-streaming server handles expect continue header when autoContinue is enabled
[info] - streaming server handles expect continue header when autoContinue is disabled
[info] - streaming server handles expect continue header when autoContinue is enabled
[info] - mishandled HEAD request doesn't foul the connection
[info] - mishandled HEAD request with chunked response doesn't foul the connection
[info] - streaming server does not stream sufficiently small fixed length messages
[info] - streaming server won't accept fixed length messages that exceed maxRequestSize
[info] - netty4 http/1.1: Can initialize multiple pipelines
[info] - netty4 http/1.1(streaming): Can initialize multiple pipelines
Jul 30, 2019 5:23:55 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:45597, label: http).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: /0.0.0.0:45597, Downstream label: http, Trace Id: c2d0fb947b8aae09.c2d0fb947b8aae09<:c2d0fb947b8aae09

Jul 30, 2019 5:23:55 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: n/a, downstream address: /0.0.0.0:33947, label: http).
Failure(The request was Nacked by the server and should not be retried, flags=0x18) with RemoteInfo -> Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: /0.0.0.0:33947, Downstream label: http, Trace Id: ff5f9136380b6a9b.ff5f9136380b6a9b<:ff5f9136380b6a9b

Jul 30, 2019 5:23:55 PM com.twitter.finagle.util.DefaultMonitor logWithRemoteInfo
WARNING: Exception propagated to the default monitor (upstream address: /127.0.0.1:35748, downstream address: n/a, label: myservice).
java.lang.Exception
	at com.twitter.finagle.http.NackTest$ClientCtx$$anon$1.apply(NackTest.scala:21)
	at com.twitter.finagle.http.NackTest$ClientCtx$$anon$1.apply(NackTest.scala:18)
	at com.twitter.finagle.ServiceProxy.apply(ServiceProxy.scala:12)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.ThreadUsage$ThreadUsageFilter.apply(ThreadUsage.scala:130)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.ServerDestTracingFilter.apply(DestinationTracing.scala:38)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.DeadlineFilter.apply(DeadlineFilter.scala:265)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.DtabStatsFilter.apply(DtabStatsFilter.scala:37)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.service.StatsFilter.apply(StatsFilter.scala:258)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:50)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(MkJvmFilter.scala:30)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.ServerStatsFilter.apply(ServerStatsFilter.scala:55)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:140)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:156)
	at com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:113)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:123)
	at com.twitter.finagle.http.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:47)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.server.BackupRequest$$anon$1$$anon$2.apply(BackupRequest.scala:31)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:15)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:104)
	at com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:90)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:15)
	at com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$1.apply(TraceInfo.scala:105)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.MarshalledContext.letLocal(MarshalledContext.scala:157)
	at com.twitter.finagle.context.MarshalledContext.let(MarshalledContext.scala:90)
	at com.twitter.finagle.tracing.Trace$.letId(Trace.scala:104)
	at com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(TraceInfo.scala:103)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1$$anonfun$apply$1.apply(HttpServerTraceInitializer.scala:20)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:124)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:19)
	at com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$1.apply(HttpServerTraceInitializer.scala:18)
	at com.twitter.finagle.Filter$$anon$10.apply(Filter.scala:406)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:66)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:25)
	at com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:131)
	at com.twitter.finagle.http.filter.StreamingStatsFilter.apply(StreamingStatsFilter.scala:92)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:23)
	at com.twitter.finagle.http.codec.ResponseConformanceFilter$.apply(ResponseConformanceFilter.scala:18)
	at com.twitter.finagle.Filter$$anon$2.apply(Filter.scala:93)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:42)
	at com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:23)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:79)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3$$anonfun$4.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.util.Local.let(Local.scala:4979)
	at com.twitter.finagle.context.LocalContext.letLocal(LocalContext.scala:53)
	at com.twitter.finagle.context.LocalContext.let(LocalContext.scala:24)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:77)
	at com.twitter.finagle.http.exp.GenStreamingSerialServerDispatcher$$anonfun$3.apply(GenStreamingSerialServerDispatcher.scala:72)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1798)
	at com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1797)
	at com.twitter.util.Promise$FutureTransformer.liftedTree1$1(Promise.scala:250)
	at com.twitter.util.Promise$FutureTransformer.k(Promise.scala:250)
	at com.twitter.util.Promise$Transformer.apply(Promise.scala:225)
	at com.twitter.util.Promise$WaitQueue.com$twitter$util$Promise$WaitQueue$$run(Promise.scala:101)
	at com.twitter.util.Promise$WaitQueue$$anon$4.run(Promise.scala:96)
	at com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:167)
	at com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:126)
	at com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:243)
	at com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:78)
	at com.twitter.util.Promise$WaitQueue.runInScheduler(Promise.scala:96)
	at com.twitter.util.Promise.updateIfEmpty(Promise.scala:797)
	at com.twitter.util.Promise.update(Promise.scala:769)
	at com.twitter.util.Promise.setValue(Promise.scala:745)
	at com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:123)
	at com.twitter.finagle.netty4.transport.ChannelTransport$$anon$1.channelRead(ChannelTransport.scala:169)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelRequestStatsHandler.channelRead(ChannelRequestStatsHandler.scala:48)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UnpoolHttpHandler$.channelRead(UnpoolHttpHandler.scala:32)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.BadRequestHandler.channelRead(BadRequestHandler.scala:41)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.HeaderValidatorHandler$.channelRead(HeaderValidatorHandler.scala:51)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.twitter.finagle.netty4.http.handler.UriValidatorHandler$.channelRead(UriValidatorHandler.scala:29)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at com.twitter.finagle.netty4.channel.ChannelStatsHandler.channelRead(ChannelStatsHandler.scala:155)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:796)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:432)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

[info] NackTest:
[info] - automatically retries with HttpNack if restartable
[info] - converts non-restartable/non-retryable Failures
[info] - HttpNack works with ClientBuilder
[info] - HttpNack works with ServerBuilder
[info] - a server that doesn't support HttpNack fails the request
[info] - HttpNack does not convert non-rejected, non-restartable failures
[info] RoutingServiceTest:
[info] - RoutingService.byPath
[info] - RoutingService.byPathObject
[info] - RoutingService.byMethodAndPath
[info] - RoutingService.byMethodAndPathObject
[info] LoggingFilterTest:
[info] - log
[info] - escape() escapes non-printable, non-ASCII
[info] - DateFormat keeps consistent
[info] ScalaTest
[info] Run completed in 1 minute, 9 seconds.
[info] Total number of tests run: 724
[info] Suites: completed 42, aborted 0
[info] Tests: succeeded 723, failed 1, canceled 0, ignored 162, pending 0
[info] *** 1 TEST FAILED ***
[error] Failed: Total 735, Failed 1, Errors 0, Passed 734, Ignored 162
[error] Failed tests:
[error] 	com.twitter.finagle.http.Http2PriorKnowledgeTest
[error] (finagle-http / Test / test) sbt.TestsFailedException: Tests unsuccessful
[error] Total time: 82 s, completed Jul 30, 2019 5:23:58 PM

[31;1mThe command "./sbt ++2.11.12 coverage finagle-http/test coverageReport" failed 3 times.[0m

travis_time:end:0afd794c:start=1564506931821088429,finish=1564507439564586557,duration=507743498128[0K[31;1mThe command "travis_retry ./sbt ++$TRAVIS_SCALA_VERSION coverage "$PROJECT/test" coverageReport" exited with 1.[0m

travis_fold:start:before_cache.1[0Ktravis_time:start:2890c710[0K$ find $HOME/.ivy2/cache  -name "ivydata-*.properties" -delete
travis_time:end:2890c710:start=1564507439572299368,finish=1564507439586509018,duration=14209650[0Ktravis_fold:end:before_cache.1[0Ktravis_fold:start:before_cache.2[0Ktravis_time:start:0d009984[0K$ find $HOME/.sbt         -name "*.lock"               -delete
travis_time:end:0d009984:start=1564507439595074926,finish=1564507439602812651,duration=7737725[0Ktravis_fold:end:before_cache.2[0Ktravis_fold:start:cache.2[0Kstore build cache
travis_time:start:04530f6c[0Ktravis_time:end:04530f6c:start=1564507439610726828,finish=1564507439615595064,duration=4868236[0Ktravis_time:start:07de370b[0K[32;1mnothing changed[0m
travis_time:end:07de370b:start=1564507439623945885,finish=1564507441550540845,duration=1926594960[0Ktravis_fold:end:cache.2[0K

Done. Your build exited with 1.
