travis_fold:start:worker_info[0K[33;1mWorker information[0m
hostname: 8e29eae1-01c1-461b-aede-1d57f94890fa@1.production-1-worker-org-gce-h13n
version: v6.2.0 https://github.com/travis-ci/worker/tree/5e5476e01646095f48eec13196fdb3faf8f5cbf7
instance: travis-job-02950fd3-bcce-41ae-88b0-58860890aaba travis-ci-amethyst-trusty-1512508224-986baf0 (via amqp)
startup: 6.672074707s
travis_fold:end:worker_info[0Ktravis_fold:start:system_info[0K[33;1mBuild system information[0m
Build language: elixir
Build group: stable
Build dist: trusty
Build id: 513586826
Job id: 513586827
Runtime kernel version: 4.4.0-101-generic
travis-build version: d6b12fc73
[34m[1mBuild image provisioning date and time[0m
Tue Dec  5 21:46:03 UTC 2017
[34m[1mOperating System Details[0m
Distributor ID:	Ubuntu
Description:	Ubuntu 14.04.5 LTS
Release:	14.04
Codename:	trusty
[34m[1mCookbooks Version[0m
7c2c6a6 https://github.com/travis-ci/travis-cookbooks/tree/7c2c6a6
[34m[1mgit version[0m
git version 2.15.1
[34m[1mbash version[0m
GNU bash, version 4.3.11(1)-release (x86_64-pc-linux-gnu)
[34m[1mgcc version[0m
gcc (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

[34m[1mdocker version[0m
Client:
 Version:      17.09.0-ce
 API version:  1.32
 Go version:   go1.8.3
 Git commit:   afdb6d4
 Built:        Tue Sep 26 22:42:38 2017
 OS/Arch:      linux/amd64

Server:
 Version:      17.09.0-ce
 API version:  1.32 (minimum version 1.12)
 Go version:   go1.8.3
 Git commit:   afdb6d4
 Built:        Tue Sep 26 22:41:20 2017
 OS/Arch:      linux/amd64
 Experimental: false
[34m[1mclang version[0m
clang version 5.0.0 (tags/RELEASE_500/final)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /usr/local/clang-5.0.0/bin
[34m[1mjq version[0m
jq-1.5
[34m[1mbats version[0m
Bats 0.4.0
[34m[1mshellcheck version[0m
0.4.6
[34m[1mshfmt version[0m
v2.0.0
[34m[1mccache version[0m
ccache version 3.1.9

Copyright (C) 2002-2007 Andrew Tridgell
Copyright (C) 2009-2011 Joel Rosdahl

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 3 of the License, or (at your option) any later
version.
[34m[1mcmake version[0m
cmake version 3.9.2

CMake suite maintained and supported by Kitware (kitware.com/cmake).
[34m[1mheroku version[0m
heroku-cli/6.14.39-addc925 (linux-x64) node-v9.2.0
[34m[1mimagemagick version[0m
Version: ImageMagick 6.7.7-10 2017-07-31 Q16 http://www.imagemagick.org
[34m[1mmd5deep version[0m
4.2
[34m[1mmercurial version[0m
Mercurial Distributed SCM (version 4.2.2)
(see https://mercurial-scm.org for more information)

Copyright (C) 2005-2017 Matt Mackall and others
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
[34m[1mmysql version[0m
mysql  Ver 14.14 Distrib 5.6.33, for debian-linux-gnu (x86_64) using  EditLine wrapper
[34m[1mopenssl version[0m
OpenSSL 1.0.1f 6 Jan 2014
[34m[1mpacker version[0m
Packer v1.0.2

Your version of Packer is out of date! The latest version
is 1.1.2. You can update by downloading from www.packer.io
[34m[1mpostgresql client version[0m
psql (PostgreSQL) 9.6.6
[34m[1mragel version[0m
Ragel State Machine Compiler version 6.8 Feb 2013
Copyright (c) 2001-2009 by Adrian Thurston
[34m[1msubversion version[0m
svn, version 1.8.8 (r1568071)
   compiled Aug 10 2017, 17:20:39 on x86_64-pc-linux-gnu

Copyright (C) 2013 The Apache Software Foundation.
This software consists of contributions made by many people;
see the NOTICE file for more information.
Subversion is open source software, see http://subversion.apache.org/

The following repository access (RA) modules are available:

* ra_svn : Module for accessing a repository using the svn network protocol.
  - with Cyrus SASL authentication
  - handles 'svn' scheme
* ra_local : Module for accessing a repository on local disk.
  - handles 'file' scheme
* ra_serf : Module for accessing a repository via WebDAV protocol using serf.
  - using serf 1.3.3
  - handles 'http' scheme
  - handles 'https' scheme

[34m[1msudo version[0m
Sudo version 1.8.9p5
Configure options: --prefix=/usr -v --with-all-insults --with-pam --with-fqdn --with-logging=syslog --with-logfac=authpriv --with-env-editor --with-editor=/usr/bin/editor --with-timeout=15 --with-password-timeout=0 --with-passprompt=[sudo] password for %p:  --without-lecture --with-tty-tickets --disable-root-mailer --enable-admin-flag --with-sendmail=/usr/sbin/sendmail --with-timedir=/var/lib/sudo --mandir=/usr/share/man --libexecdir=/usr/lib/sudo --with-sssd --with-sssd-lib=/usr/lib/x86_64-linux-gnu --with-selinux
Sudoers policy plugin version 1.8.9p5
Sudoers file grammar version 43

Sudoers path: /etc/sudoers
Authentication methods: 'pam'
Syslog facility if syslog is being used for logging: authpriv
Syslog priority to use when user authenticates successfully: notice
Syslog priority to use when user authenticates unsuccessfully: alert
Send mail if the user is not in sudoers
Use a separate timestamp for each user/tty combo
Lecture user the first time they run sudo
Root may run sudo
Allow some information gathering to give useful error messages
Require fully-qualified hostnames in the sudoers file
Visudo will honor the EDITOR environment variable
Set the LOGNAME and USER environment variables
Length at which to wrap log file lines (0 for no wrap): 80
Authentication timestamp timeout: 15.0 minutes
Password prompt timeout: 0.0 minutes
Number of tries to enter a password: 3
Umask to use or 0777 to use user's: 022
Path to mail program: /usr/sbin/sendmail
Flags for mail program: -t
Address to send mail to: root
Subject line for mail messages: *** SECURITY information for %h ***
Incorrect password message: Sorry, try again.
Path to authentication timestamp dir: /var/lib/sudo
Default password prompt: [sudo] password for %p: 
Default user to run commands as: root
Value to override user's $PATH with: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin
Path to the editor for use by visudo: /usr/bin/editor
When to require a password for 'list' pseudocommand: any
When to require a password for 'verify' pseudocommand: all
File descriptors >= 3 will be closed before executing a command
Environment variables to check for sanity:
	TZ
	TERM
	LINGUAS
	LC_*
	LANGUAGE
	LANG
	COLORTERM
Environment variables to remove:
	RUBYOPT
	RUBYLIB
	PYTHONUSERBASE
	PYTHONINSPECT
	PYTHONPATH
	PYTHONHOME
	TMPPREFIX
	ZDOTDIR
	READNULLCMD
	NULLCMD
	FPATH
	PERL5DB
	PERL5OPT
	PERL5LIB
	PERLLIB
	PERLIO_DEBUG 
	JAVA_TOOL_OPTIONS
	SHELLOPTS
	GLOBIGNORE
	PS4
	BASH_ENV
	ENV
	TERMCAP
	TERMPATH
	TERMINFO_DIRS
	TERMINFO
	_RLD*
	LD_*
	PATH_LOCALE
	NLSPATH
	HOSTALIASES
	RES_OPTIONS
	LOCALDOMAIN
	CDPATH
	IFS
Environment variables to preserve:
	JAVA_HOME
	TRAVIS
	CI
	DEBIAN_FRONTEND
	XAUTHORIZATION
	XAUTHORITY
	PS2
	PS1
	PATH
	LS_COLORS
	KRB5CCNAME
	HOSTNAME
	HOME
	DISPLAY
	COLORS
Locale to use while parsing sudoers: C
Directory in which to store input/output logs: /var/log/sudo-io
File in which to store the input/output log: %{seq}
Add an entry to the utmp/utmpx file when allocating a pty
PAM service name to use
PAM service name to use for login shells
Create a new PAM session for the command to run in
Maximum I/O log sequence number: 0

Local IP address and netmask pairs:
	10.240.0.24/255.255.255.255
	172.17.0.1/255.255.0.0

Sudoers I/O plugin version 1.8.9p5
[34m[1mgzip version[0m
gzip 1.6
Copyright (C) 2007, 2010, 2011 Free Software Foundation, Inc.
Copyright (C) 1993 Jean-loup Gailly.
This is free software.  You may redistribute copies of it under the terms of
the GNU General Public License <http://www.gnu.org/licenses/gpl.html>.
There is NO WARRANTY, to the extent permitted by law.

Written by Jean-loup Gailly.
[34m[1mzip version[0m
Copyright (c) 1990-2008 Info-ZIP - Type 'zip "-L"' for software license.
This is Zip 3.0 (July 5th 2008), by Info-ZIP.
Currently maintained by E. Gordon.  Please send bug reports to
the authors using the web page at www.info-zip.org; see README for details.

Latest sources and executables are at ftp://ftp.info-zip.org/pub/infozip,
as of above date; see http://www.info-zip.org/ for other sites.

Compiled with gcc 4.8.2 for Unix (Linux ELF) on Oct 21 2013.

Zip special compilation options:
	USE_EF_UT_TIME       (store Universal Time)
	BZIP2_SUPPORT        (bzip2 library version 1.0.6, 6-Sept-2010)
	    bzip2 code and library copyright (c) Julian R Seward
	    (See the bzip2 license for terms of use)
	SYMLINK_SUPPORT      (symbolic links supported)
	LARGE_FILE_SUPPORT   (can read and write large files on file system)
	ZIP64_SUPPORT        (use Zip64 to store large files in archives)
	UNICODE_SUPPORT      (store and read UTF-8 Unicode paths)
	STORE_UNIX_UIDs_GIDs (store UID/GID sizes/values using new extra field)
	UIDGID_NOT_16BIT     (old Unix 16-bit UID/GID extra field not used)
	[encryption, version 2.91 of 05 Jan 2007] (modified for Zip 3)

Encryption notice:
	The encryption code of this program is not copyrighted and is
	put in the public domain.  It was originally written in Europe
	and, to the best of our knowledge, can be freely distributed
	in both source and object forms from any country, including
	the USA under License Exception TSU of the U.S. Export
	Administration Regulations (section 740.13(e)) of 6 June 2002.

Zip environment options:
             ZIP:  [none]
          ZIPOPT:  [none]
[34m[1mvim version[0m
VIM - Vi IMproved 7.4 (2013 Aug 10, compiled Nov 24 2016 16:43:18)
Included patches: 1-52
Extra patches: 8.0.0056
Modified by pkg-vim-maintainers@lists.alioth.debian.org
Compiled by buildd@
Huge version without GUI.  Features included (+) or not (-):
+acl             +farsi           +mouse_netterm   +syntax
+arabic          +file_in_path    +mouse_sgr       +tag_binary
+autocmd         +find_in_path    -mouse_sysmouse  +tag_old_static
-balloon_eval    +float           +mouse_urxvt     -tag_any_white
-browse          +folding         +mouse_xterm     -tcl
++builtin_terms  -footer          +multi_byte      +terminfo
+byte_offset     +fork()          +multi_lang      +termresponse
+cindent         +gettext         -mzscheme        +textobjects
-clientserver    -hangul_input    +netbeans_intg   +title
-clipboard       +iconv           +path_extra      -toolbar
+cmdline_compl   +insert_expand   -perl            +user_commands
+cmdline_hist    +jumplist        +persistent_undo +vertsplit
+cmdline_info    +keymap          +postscript      +virtualedit
+comments        +langmap         +printer         +visual
+conceal         +libcall         +profile         +visualextra
+cryptv          +linebreak       +python          +viminfo
+cscope          +lispindent      -python3         +vreplace
+cursorbind      +listcmds        +quickfix        +wildignore
+cursorshape     +localmap        +reltime         +wildmenu
+dialog_con      -lua             +rightleft       +windows
+diff            +menu            -ruby            +writebackup
+digraphs        +mksession       +scrollbind      -X11
-dnd             +modify_fname    +signs           -xfontset
-ebcdic          +mouse           +smartindent     -xim
+emacs_tags      -mouseshape      -sniff           -xsmp
+eval            +mouse_dec       +startuptime     -xterm_clipboard
+ex_extra        +mouse_gpm       +statusline      -xterm_save
+extra_search    -mouse_jsbterm   -sun_workshop    -xpm
   system vimrc file: "$VIM/vimrc"
     user vimrc file: "$HOME/.vimrc"
 2nd user vimrc file: "~/.vim/vimrc"
      user exrc file: "$HOME/.exrc"
  fall-back for $VIM: "/usr/share/vim"
Compilation: gcc -c -I. -Iproto -DHAVE_CONFIG_H     -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1      
Linking: gcc   -Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,--as-needed -o vim        -lm -ltinfo -lnsl  -lselinux  -lacl -lattr -lgpm -ldl    -L/usr/lib/python2.7/config-x86_64-linux-gnu -lpython2.7 -lpthread -ldl -lutil -lm -Xlinker -export-dynamic -Wl,-O1 -Wl,-Bsymbolic-functions      
[34m[1miptables version[0m
iptables v1.4.21
[34m[1mcurl version[0m
curl 7.35.0 (x86_64-pc-linux-gnu) libcurl/7.35.0 OpenSSL/1.0.1f zlib/1.2.8 libidn/1.28 librtmp/2.3
[34m[1mwget version[0m
GNU Wget 1.15 built on linux-gnu.
[34m[1mrsync version[0m
rsync  version 3.1.0  protocol version 31
[34m[1mgimme version[0m
v1.2.0
[34m[1mnvm version[0m
0.33.6
[34m[1mperlbrew version[0m
/home/travis/perl5/perlbrew/bin/perlbrew  - App::perlbrew/0.80
[34m[1mphpenv version[0m
rbenv 1.1.1-25-g6aa70b6
[34m[1mrvm version[0m
rvm 1.29.3 (latest) by Michal Papis, Piotr Kuczynski, Wayne E. Seguin [https://rvm.io]
[34m[1mdefault ruby version[0m
ruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-linux]
[34m[1mCouchDB version[0m
couchdb 1.6.1
[34m[1mElasticSearch version[0m
5.5.0
[34m[1mInstalled Firefox version[0m
firefox 56.0.2
[34m[1mMongoDB version[0m
MongoDB 3.4.10
[34m[1mPhantomJS version[0m
2.1.1
[34m[1mPre-installed PostgreSQL versions[0m
9.2.24
9.3.20
9.4.15
9.5.10
9.6.6
[34m[1mRabbitMQ Version[0m
3.6.14
[34m[1mRedis version[0m
redis-server 4.0.6
[34m[1mriak version[0m
2.2.3
[34m[1mkerl list installations[0m
19.0
18.3
[34m[1mkiex list[0m

kiex elixirs

   elixir-1.2.6
=* elixir-1.3.2

# => - current
# =* - current && default
#  * - default

[34m[1mrebar --version[0m
rebar 2.6.4 17 20160831_145136 git 2.6.4-dirty
[34m[1mperlbrew list[0m
  5.22 (5.22.0)
  5.22.0
  5.22-extras (5.22.4)
  5.22-shrplib (5.22.4)
  5.22.4
  5.24 (5.24.0)
  5.24.0
  5.24-extras (5.24.3)
  5.24-shrplib (5.24.3)
  5.24.3
travis_fold:end:system_info[0K

travis_fold:start:git.checkout[0Ktravis_time:start:3165474c[0K$ git clone --depth=50 https://github.com/h4cc/awesome-elixir.git h4cc/awesome-elixir
Cloning into 'h4cc/awesome-elixir'...
remote: Enumerating objects: 163, done.[K
remote: Counting objects:   0% (1/163)   [Kremote: Counting objects:   1% (2/163)   [Kremote: Counting objects:   2% (4/163)   [Kremote: Counting objects:   3% (5/163)   [Kremote: Counting objects:   4% (7/163)   [Kremote: Counting objects:   5% (9/163)   [Kremote: Counting objects:   6% (10/163)   [Kremote: Counting objects:   7% (12/163)   [Kremote: Counting objects:   8% (14/163)   [Kremote: Counting objects:   9% (15/163)   [Kremote: Counting objects:  10% (17/163)   [Kremote: Counting objects:  11% (18/163)   [Kremote: Counting objects:  12% (20/163)   [Kremote: Counting objects:  13% (22/163)   [Kremote: Counting objects:  14% (23/163)   [Kremote: Counting objects:  15% (25/163)   [Kremote: Counting objects:  16% (27/163)   [Kremote: Counting objects:  17% (28/163)   [Kremote: Counting objects:  18% (30/163)   [Kremote: Counting objects:  19% (31/163)   [Kremote: Counting objects:  20% (33/163)   [Kremote: Counting objects:  21% (35/163)   [Kremote: Counting objects:  22% (36/163)   [Kremote: Counting objects:  23% (38/163)   [Kremote: Counting objects:  24% (40/163)   [Kremote: Counting objects:  25% (41/163)   [Kremote: Counting objects:  26% (43/163)   [Kremote: Counting objects:  27% (45/163)   [Kremote: Counting objects:  28% (46/163)   [Kremote: Counting objects:  29% (48/163)   [Kremote: Counting objects:  30% (49/163)   [Kremote: Counting objects:  31% (51/163)   [Kremote: Counting objects:  32% (53/163)   [Kremote: Counting objects:  33% (54/163)   [Kremote: Counting objects:  34% (56/163)   [Kremote: Counting objects:  35% (58/163)   [Kremote: Counting objects:  36% (59/163)   [Kremote: Counting objects:  37% (61/163)   [Kremote: Counting objects:  38% (62/163)   [Kremote: Counting objects:  39% (64/163)   [Kremote: Counting objects:  40% (66/163)   [Kremote: Counting objects:  41% (67/163)   [Kremote: Counting objects:  42% (69/163)   [Kremote: Counting objects:  43% (71/163)   [Kremote: Counting objects:  44% (72/163)   [Kremote: Counting objects:  45% (74/163)   [Kremote: Counting objects:  46% (75/163)   [Kremote: Counting objects:  47% (77/163)   [Kremote: Counting objects:  48% (79/163)   [Kremote: Counting objects:  49% (80/163)   [Kremote: Counting objects:  50% (82/163)   [Kremote: Counting objects:  51% (84/163)   [Kremote: Counting objects:  52% (85/163)   [Kremote: Counting objects:  53% (87/163)   [Kremote: Counting objects:  54% (89/163)   [Kremote: Counting objects:  55% (90/163)   [Kremote: Counting objects:  56% (92/163)   [Kremote: Counting objects:  57% (93/163)   [Kremote: Counting objects:  58% (95/163)   [Kremote: Counting objects:  59% (97/163)   [Kremote: Counting objects:  60% (98/163)   [Kremote: Counting objects:  61% (100/163)   [Kremote: Counting objects:  62% (102/163)   [Kremote: Counting objects:  63% (103/163)   [Kremote: Counting objects:  64% (105/163)   [Kremote: Counting objects:  65% (106/163)   [Kremote: Counting objects:  66% (108/163)   [Kremote: Counting objects:  67% (110/163)   [Kremote: Counting objects:  68% (111/163)   [Kremote: Counting objects:  69% (113/163)   [Kremote: Counting objects:  70% (115/163)   [Kremote: Counting objects:  71% (116/163)   [Kremote: Counting objects:  72% (118/163)   remote: Counting objects:  73% (119/163)   [Kremote: Counting objects:  74% (121/163)   [Kremote: Counting objects:  75% (123/163)   [Kremote: Counting objects:  76% (124/163)   [Kremote: Counting objects:  77% (126/163)   [Kremote: Counting objects:  78% (128/163)   [Kremote: Counting objects:  79% (129/163)   [Kremote: Counting objects:  80% (131/163)   [Kremote: Counting objects:  81% (133/163)   [Kremote: Counting objects:  82% (134/163)   [Kremote: Counting objects:  83% (136/163)   [Kremote: Counting objects:  84% (137/163)   [Kremote: Counting objects:  85% (139/163)   [Kremote: Counting objects:  86% (141/163)   [Kremote: Counting objects:  87% (142/163)   [Kremote: Counting objects:  88% (144/163)   [Kremote: Counting objects:  89% (146/163)   [Kremote: Counting objects:  90% (147/163)   [Kremote: Counting objects:  91% (149/163)   [Kremote: Counting objects:  92% (150/163)   [Kremote: Counting objects:  93% (152/163)   [Kremote: Counting objects:  94% (154/163)   [Kremote: Counting objects:  95% (155/163)   [Kremote: Counting objects:  96% (157/163)   [Kremote: Counting objects:  97% (159/163)   [Kremote: Counting objects:  98% (160/163)   [Kremote: Counting objects:  99% (162/163)   [Kremote: Counting objects: 100% (163/163)   [Kremote: Counting objects: 100% (163/163), done.[K
remote: Compressing objects:   1% (1/73)   [Kremote: Compressing objects:   2% (2/73)   [Kremote: Compressing objects:   4% (3/73)   [Kremote: Compressing objects:   5% (4/73)   [Kremote: Compressing objects:   6% (5/73)   [Kremote: Compressing objects:   8% (6/73)   [Kremote: Compressing objects:   9% (7/73)   [Kremote: Compressing objects:  10% (8/73)   [Kremote: Compressing objects:  12% (9/73)   [Kremote: Compressing objects:  13% (10/73)   [Kremote: Compressing objects:  15% (11/73)   [Kremote: Compressing objects:  16% (12/73)   [Kremote: Compressing objects:  17% (13/73)   [Kremote: Compressing objects:  19% (14/73)   [Kremote: Compressing objects:  20% (15/73)   [Kremote: Compressing objects:  21% (16/73)   [Kremote: Compressing objects:  23% (17/73)   [Kremote: Compressing objects:  24% (18/73)   [Kremote: Compressing objects:  26% (19/73)   [Kremote: Compressing objects:  27% (20/73)   [Kremote: Compressing objects:  28% (21/73)   [Kremote: Compressing objects:  30% (22/73)   [Kremote: Compressing objects:  31% (23/73)   [Kremote: Compressing objects:  32% (24/73)   [Kremote: Compressing objects:  34% (25/73)   [Kremote: Compressing objects:  35% (26/73)   [Kremote: Compressing objects:  36% (27/73)   [Kremote: Compressing objects:  38% (28/73)   [Kremote: Compressing objects:  39% (29/73)   [Kremote: Compressing objects:  41% (30/73)   [Kremote: Compressing objects:  42% (31/73)   [Kremote: Compressing objects:  43% (32/73)   [Kremote: Compressing objects:  45% (33/73)   [Kremote: Compressing objects:  46% (34/73)   [Kremote: Compressing objects:  47% (35/73)   [Kremote: Compressing objects:  49% (36/73)   [Kremote: Compressing objects:  50% (37/73)   [Kremote: Compressing objects:  52% (38/73)   [Kremote: Compressing objects:  53% (39/73)   [Kremote: Compressing objects:  54% (40/73)   [Kremote: Compressing objects:  56% (41/73)   [Kremote: Compressing objects:  57% (42/73)   [Kremote: Compressing objects:  58% (43/73)   [Kremote: Compressing objects:  60% (44/73)   [Kremote: Compressing objects:  61% (45/73)   [Kremote: Compressing objects:  63% (46/73)   [Kremote: Compressing objects:  64% (47/73)   [Kremote: Compressing objects:  65% (48/73)   [Kremote: Compressing objects:  67% (49/73)   [Kremote: Compressing objects:  68% (50/73)   [Kremote: Compressing objects:  69% (51/73)   [Kremote: Compressing objects:  71% (52/73)   [Kremote: Compressing objects:  72% (53/73)   [Kremote: Compressing objects:  73% (54/73)   [Kremote: Compressing objects:  75% (55/73)   [Kremote: Compressing objects:  76% (56/73)   [Kremote: Compressing objects:  78% (57/73)   [Kremote: Compressing objects:  79% (58/73)   [Kremote: Compressing objects:  80% (59/73)   [Kremote: Compressing objects:  82% (60/73)   [Kremote: Compressing objects:  83% (61/73)   [Kremote: Compressing objects:  84% (62/73)   [Kremote: Compressing objects:  86% (63/73)   [Kremote: Compressing objects:  87% (64/73)   [Kremote: Compressing objects:  89% (65/73)   [Kremote: Compressing objects:  90% (66/73)   [Kremote: Compressing objects:  91% (67/73)   [Kremote: Compressing objects:  93% (68/73)   remote: Compressing objects:  94% (69/73)   [Kremote: Compressing objects:  95% (70/73)   [Kremote: Compressing objects:  97% (71/73)   [Kremote: Compressing objects:  98% (72/73)   [Kremote: Compressing objects: 100% (73/73)   [Kremote: Compressing objects: 100% (73/73), done.[K
Receiving objects:   0% (1/163)   Receiving objects:   1% (2/163)   Receiving objects:   2% (4/163)   Receiving objects:   3% (5/163)   Receiving objects:   4% (7/163)   Receiving objects:   5% (9/163)   Receiving objects:   6% (10/163)   Receiving objects:   7% (12/163)   Receiving objects:   8% (14/163)   Receiving objects:   9% (15/163)   Receiving objects:  10% (17/163)   Receiving objects:  11% (18/163)   Receiving objects:  12% (20/163)   Receiving objects:  13% (22/163)   Receiving objects:  14% (23/163)   Receiving objects:  15% (25/163)   Receiving objects:  16% (27/163)   Receiving objects:  17% (28/163)   Receiving objects:  18% (30/163)   Receiving objects:  19% (31/163)   Receiving objects:  20% (33/163)   Receiving objects:  21% (35/163)   Receiving objects:  22% (36/163)   Receiving objects:  23% (38/163)   Receiving objects:  24% (40/163)   Receiving objects:  25% (41/163)   Receiving objects:  26% (43/163)   Receiving objects:  27% (45/163)   Receiving objects:  28% (46/163)   Receiving objects:  29% (48/163)   Receiving objects:  30% (49/163)   Receiving objects:  31% (51/163)   Receiving objects:  32% (53/163)   Receiving objects:  33% (54/163)   Receiving objects:  34% (56/163)   Receiving objects:  35% (58/163)   Receiving objects:  36% (59/163)   Receiving objects:  37% (61/163)   Receiving objects:  38% (62/163)   remote: Total 163 (delta 99), reused 146 (delta 89), pack-reused 0[K
Receiving objects:  39% (64/163)   Receiving objects:  40% (66/163)   Receiving objects:  41% (67/163)   Receiving objects:  42% (69/163)   Receiving objects:  43% (71/163)   Receiving objects:  44% (72/163)   Receiving objects:  45% (74/163)   Receiving objects:  46% (75/163)   Receiving objects:  47% (77/163)   Receiving objects:  48% (79/163)   Receiving objects:  49% (80/163)   Receiving objects:  50% (82/163)   Receiving objects:  51% (84/163)   Receiving objects:  52% (85/163)   Receiving objects:  53% (87/163)   Receiving objects:  54% (89/163)   Receiving objects:  55% (90/163)   Receiving objects:  56% (92/163)   Receiving objects:  57% (93/163)   Receiving objects:  58% (95/163)   Receiving objects:  59% (97/163)   Receiving objects:  60% (98/163)   Receiving objects:  61% (100/163)   Receiving objects:  62% (102/163)   Receiving objects:  63% (103/163)   Receiving objects:  64% (105/163)   Receiving objects:  65% (106/163)   Receiving objects:  66% (108/163)   Receiving objects:  67% (110/163)   Receiving objects:  68% (111/163)   Receiving objects:  69% (113/163)   Receiving objects:  70% (115/163)   Receiving objects:  71% (116/163)   Receiving objects:  72% (118/163)   Receiving objects:  73% (119/163)   Receiving objects:  74% (121/163)   Receiving objects:  75% (123/163)   Receiving objects:  76% (124/163)   Receiving objects:  77% (126/163)   Receiving objects:  78% (128/163)   Receiving objects:  79% (129/163)   Receiving objects:  80% (131/163)   Receiving objects:  81% (133/163)   Receiving objects:  82% (134/163)   Receiving objects:  83% (136/163)   Receiving objects:  84% (137/163)   Receiving objects:  85% (139/163)   Receiving objects:  86% (141/163)   Receiving objects:  87% (142/163)   Receiving objects:  88% (144/163)   Receiving objects:  89% (146/163)   Receiving objects:  90% (147/163)   Receiving objects:  91% (149/163)   Receiving objects:  92% (150/163)   Receiving objects:  93% (152/163)   Receiving objects:  94% (154/163)   Receiving objects:  95% (155/163)   Receiving objects:  96% (157/163)   Receiving objects:  97% (159/163)   Receiving objects:  98% (160/163)   Receiving objects:  99% (162/163)   Receiving objects: 100% (163/163)   Receiving objects: 100% (163/163), 77.53 KiB | 3.88 MiB/s, done.
Resolving deltas:   0% (0/99)   Resolving deltas:  10% (10/99)   Resolving deltas:  14% (14/99)   Resolving deltas:  49% (49/99)   Resolving deltas:  50% (50/99)   Resolving deltas: 100% (99/99)   Resolving deltas: 100% (99/99), done.
travis_time:end:3165474c:start=1553979688529692270,finish=1553979689178854508,duration=649162238[0K$ cd h4cc/awesome-elixir
travis_time:start:0c5c0ffc[0K$ git fetch origin +refs/pull/4584/merge:
remote: Enumerating objects: 6, done.[K
remote: Counting objects:  16% (1/6)   [Kremote: Counting objects:  33% (2/6)   [Kremote: Counting objects:  50% (3/6)   [Kremote: Counting objects:  66% (4/6)   [Kremote: Counting objects:  83% (5/6)   [Kremote: Counting objects: 100% (6/6)   [Kremote: Counting objects: 100% (6/6), done.[K
remote: Compressing objects:  50% (1/2)   [Kremote: Compressing objects: 100% (2/2)   [Kremote: Compressing objects: 100% (2/2), done.[K
remote: Total 4 (delta 3), reused 2 (delta 2), pack-reused 0[K
Unpacking objects:  25% (1/4)   Unpacking objects:  50% (2/4)   Unpacking objects:  75% (3/4)   Unpacking objects: 100% (4/4)   Unpacking objects: 100% (4/4), done.
From https://github.com/h4cc/awesome-elixir
 * branch            refs/pull/4584/merge -> FETCH_HEAD
travis_time:end:0c5c0ffc:start=1553979689183309361,finish=1553979689630684488,duration=447375127[0K$ git checkout -qf FETCH_HEAD
travis_fold:end:git.checkout[0K
[33;1m19.3 is not installed. Downloading and installing pre-build binary.[0m
[33;1mDownloading archive: https://storage.googleapis.com/travis-ci-language-archives/erlang/binaries/ubuntu/14.04/x86_64/erlang-19.3-nonroot.tar.bz2[0m
travis_time:start:2c5961a0[0K$ wget -o ${TRAVIS_HOME}/erlang.tar.bz2 ${archive_url}
travis_time:end:2c5961a0:start=1553979689725978019,finish=1553979690277278752,duration=551300733[0Ktravis_time:start:2ed7f5fb[0K$ mkdir -p ~/otp && tar -xf erlang-19.3-nonroot.tar.bz2 -C ~/otp/
travis_time:end:2ed7f5fb:start=1553979690281383857,finish=1553979698379154245,duration=8097770388[0Ktravis_time:start:0640bc08[0K$ mkdir -p ~/.kerl
travis_time:end:0640bc08:start=1553979698383454165,finish=1553979698387307933,duration=3853768[0Ktravis_time:start:00ddb240[0K$ echo '19.3,19.3' >> ~/.kerl/otp_builds
travis_time:end:00ddb240:start=1553979698390954933,finish=1553979698399364494,duration=8409561[0Ktravis_time:start:290f2310[0K$ echo '19.3 ${TRAVIS_HOME}/otp/19.3' >> ~/.kerl/otp_builds
travis_time:end:290f2310:start=1553979698403317182,finish=1553979698405935197,duration=2618015[0Ktravis_time:start:101e8e34[0K$ source ${TRAVIS_HOME}/otp/19.3/activate
travis_time:end:101e8e34:start=1553979698410680879,finish=1553979698416832543,duration=6151664[0Ktravis_fold:start:elixir[0KInstalling Elixir 1.4.2
travis_time:start:0d051dd0[0K$ wget https://repo.hex.pm/builds/elixir/v1.4.2-otp-19.zip
--2019-03-30 21:01:38--  https://repo.hex.pm/builds/elixir/v1.4.2-otp-19.zip
Resolving repo.hex.pm (repo.hex.pm)... 151.101.2.2, 151.101.66.2, 151.101.130.2, ...
Connecting to repo.hex.pm (repo.hex.pm)|151.101.2.2|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 3754936 (3.6M) [application/zip]
Saving to: ‘v1.4.2-otp-19.zip’

 0% [                                       ] 0           --.-K/s              100%[======================================>] 3,754,936   --.-K/s   in 0.1s    

2019-03-30 21:01:38 (37.1 MB/s) - ‘v1.4.2-otp-19.zip’ saved [3754936/3754936]

travis_time:end:0d051dd0:start=1553979698420469261,finish=1553979698618873444,duration=198404183[0K$ echo 'export ELIXIR_VERSION=1.4.2
    export PATH=${TRAVIS_HOME}/.kiex/elixirs/elixir-1.4.2/bin:$PATH
    export MIX_ARCHIVES=${TRAVIS_HOME}/.kiex/mix/elixir-1.4.2' > ${TRAVIS_HOME}/.kiex/elixirs/elixir-1.4.2.env
$ kiex use 1.4.2
Using 1.4.2
travis_fold:end:elixir[0K$ elixir --version
Erlang/OTP 19 [erts-8.3] [source] [64-bit] [smp:2:2] [async-threads:10] [hipe] [kernel-poll:false]

Elixir 1.4.2
travis_fold:start:before_install[0Ktravis_time:start:03dd0d58[0K$ cd ./tests
travis_time:end:03dd0d58:start=1553979698930796838,finish=1553979698933533465,duration=2736627[0Ktravis_fold:end:before_install[0Ktravis_fold:start:install.rebar[0Ktravis_time:start:18b60211[0K$ mix local.rebar --force
[32m* creating [0m/home/travis/.mix/rebar[0m
[32m* creating [0m/home/travis/.mix/rebar3[0m
travis_time:end:18b60211:start=1553979698937783306,finish=1553979700122080276,duration=1184296970[0Ktravis_fold:end:install.rebar[0Ktravis_fold:start:install.hex[0Ktravis_time:start:19ee95b8[0K$ mix local.hex --force
[32m* creating [0m/home/travis/.kiex/mix/elixir-1.4.2/hex-0.19.0[0m
travis_time:end:19ee95b8:start=1553979700126414184,finish=1553979700991739759,duration=865325575[0Ktravis_fold:end:install.hex[0Ktravis_fold:start:install.deps[0Ktravis_time:start:0a6a7699[0K$ mix deps.get
Resolving Hex dependencies...
Dependency resolution completed:
Unchanged:
  certifi 1.1.0
  earmark 1.2.2
  hackney 1.8.0
  httpoison 0.11.2
  idna 4.0.0
  metrics 1.0.1
  mimerl 1.0.2
  ssl_verify_fun 1.1.1
* Getting earmark (Hex package)
* Getting httpoison (Hex package)
* Getting hackney (Hex package)
* Getting certifi (Hex package)
* Getting idna (Hex package)
* Getting metrics (Hex package)
* Getting mimerl (Hex package)
* Getting ssl_verify_fun (Hex package)
travis_time:end:0a6a7699:start=1553979700995955033,finish=1553979702069261157,duration=1073306124[0Ktravis_fold:end:install.deps[0Ktravis_time:start:0c38a48f[0K$ mix run check.exs
===> Compiling idna
===> Compiling mimerl
===> Compiling metrics
==> ssl_verify_fun (compile)
Compiled src/ssl_verify_util.erl
Compiled src/ssl_verify_fingerprint.erl
Compiled src/ssl_verify_pk.erl
Compiled src/ssl_verify_hostname.erl
===> Compiling certifi
===> Compiling hackney
==> earmark
Compiling 3 files (.erl)
Compiling 25 files (.ex)
[33mwarning: [0mimplementation not provided for predefined defp hard_line_breaks/2
  lib/earmark/inline.ex:248

Generated earmark app
==> httpoison
Compiling 2 files (.ex)
Generated httpoison app
==> awesome_elixir
Generated awesome_elixir app
[33mwarning: [0mvariable "t" is unused
  check.exs:55

[debug] Using Earmark to parse to data structure we can work with.
[debug] Ensure that there is a header at first.
[debug] Ensure that there is a introduction.
[debug] Ensure that there is a +1 hint paragraph.
[debug] Ensure that there is info about other curated lists of packages.
[debug] Ensure that there is a table of content list.
[debug] Parse table of content to list of categories.
[debug] Parse table of content to list of resources.
--------- START
-- Actors
	'dflow' https://github.com/dalmatinerdb/dflow 'Pipelined flow processing engine'
	'exactor' https://github.com/sasa1977/exactor 'Helpers for easier implementation of actors in Elixir'
	'exos' https://github.com/awetzel/exos 'A Port Wrapper which forwards cast and call to a linked Port'
	'flowex' https://github.com/antonmi/flowex 'Railway Flow-Based Programming with Elixir GenStage'
	'mon_handler' https://github.com/tattdcodemonkey/mon_handler 'A minimal GenServer that monitors a given GenEvent handler'
	'pool_ring' https://github.com/camshaft/pool_ring 'Create a pool based on a hash ring'
	'poolboy' https://github.com/devinus/poolboy 'A hunky Erlang worker pool factory'
	'pooler' https://github.com/seth/pooler 'An OTP Process Pool Application'
	'sbroker' https://github.com/fishcakez/sbroker 'Sojourn-time based active queue management library'
	'workex' https://github.com/sasa1977/workex 'Backpressure and flow control in EVM processes'
-- Algorithms and Data structures
	'array' https://github.com/takscape/elixir-array 'An Elixir wrapper library for Erlang's array'
	'aruspex' https://github.com/dkendal/aruspex 'Aruspex is a configurable constraint solver, written purely in Elixir'
	'bimap' https://github.com/mkaput/elixir-bimap 'Pure Elixir implementation of [bidirectional maps](https://en.wikipedia.org/wiki/Bidirectional_map) and multimaps'
	'bitmap' https://github.com/hashd/bitmap-elixir 'Pure Elixir implementation of [bitmaps](https://en.wikipedia.org/wiki/Bitmap)'
	'blocking_queue' https://github.com/joekain/BlockingQueue 'BlockingQueue is a simple queue implemented as a GenServer. It has a fixed maximum length established when it is created'
	'bloomex' https://github.com/gmcabrita/bloomex 'A pure Elixir implementation of Scalable Bloom Filters'
	'clope' https://github.com/ayrat555/clope 'Elixir implementation of [CLOPE](http://www.inf.ufrgs.br/~alvares/CMP259DCBD/clope.pdf): A Fast and Effective Clustering Algorithm for Transactional Data'
	'combination' https://github.com/seantanly/elixir-combination 'Elixir library to generate combinations and permutations from Enumerable collection'
	'count_buffer' https://github.com/camshaft/count_buffer 'Buffer a large set of counters and flush periodically'
	'cuckoo' https://github.com/gmcabrita/cuckoo 'A pure Elixir implementation of [Cuckoo Filters](https://www.cs.cmu.edu/%7Edga/papers/cuckoo-conext2014.pdf)'
	'cuid' https://github.com/duailibe/cuid 'Collision-resistant ids optimized for horizontal scaling and sequential lookup performance, written in Elixir'
	'data_morph' https://hex.pm/packages/data_morph 'Create Elixir structs from data'
	'dataframe' https://github.com/JordiPolo/dataframe 'Package providing functionality similar to Python's Pandas or R's data.frame()'
	'datastructures' https://github.com/meh/elixir-datastructures 'A collection of protocols, implementations and wrappers to work with data structures'
	'def_memo' https://github.com/os6sense/DefMemo 'A memoization macro (defmemo) for elixir using a genserver backing store'
	'dlist' https://github.com/stocks29/dlist 'Deque implementations in Elixir'
	'eastar' https://github.com/herenowcoder/eastar 'A* graph pathfinding in pure Elixir'
	'ecto_materialized_path' https://github.com/asiniy/ecto_materialized_path 'Tree structure, hierarchy and ancestry for the ecto models'
	'ecto_state_machine' https://github.com/asiniy/ecto_state_machine 'Finite state machine pattern implemented on Elixir and  adopted for Ecto'
	'elistrix' https://github.com/tobz/elistrix 'A latency / fault tolerance library to help isolate your applications from an uncertain world of slow or failed services'
	'emel' https://github.com/mrdimosthenis/emel 'A simple and functional machine learning library written in elixir'
	'erlang-algorithms' https://github.com/aggelgian/erlang-algorithms 'Implementations of popular data structures and algorithms'
	'exconstructor' https://github.com/appcues/exconstructor 'An Elixir library for generating struct constructors that handle external data with ease'
	'exfsm' https://github.com/awetzel/exfsm 'Simple elixir library to define a static FSM'
	'exkad' https://github.com/rozap/exkad 'A [kademlia](https://en.wikipedia.org/wiki/Kademlia) implementation in Elixir'
	'exmatrix' https://github.com/a115/exmatrix 'ExMatrix is a small library for working with matrices, originally developed for testing matrix multiplication in parallel'
	'ezcryptex' https://github.com/stocks29/ezcryptex 'Thin layer on top of Cryptex'
	'fnv' https://github.com/asaaki/fnv.ex 'Pure Elixir implementation of Fowler–Noll–Vo hash functions'
	'fsm' https://github.com/sasa1977/fsm 'Finite state machine as a functional data structure'
	'fuse' https://github.com/jlouis/fuse 'This application implements a so-called circuit-breaker for Erlang'
	'gen_fsm' https://github.com/pavlos/gen_fsm 'A generic finite state-machine - Elixir wrapper around OTP's gen_fsm'
	'graphmath' https://github.com/crertel/graphmath 'An Elixir library for performing 2D and 3D mathematics'
	'hash_ring_ex' https://github.com/reset/hash-ring-ex 'A consistent hash-ring implementation for Elixir'
	'hypex' https://github.com/whitfin/hypex 'Fast Elixir implementation of HyperLogLog'
	'indifferent' https://github.com/vic/indifferent 'Indifferent access for Elixir maps/list/tuples with custom key conversion'
	'isaac' https://github.com/arianvp/elixir-isaac 'Isaac is an elixir module for ISAAC: a fast cryptographic random number generator'
	'jumper' https://github.com/whitfin/jumper 'Jump consistent hash implementation in Elixir (without NIFs)'
	'key2value' https://github.com/okeuday/key2value 'Erlang 2-way Set Associative Map'
	'lfsr' https://github.com/pma/lfsr 'Elixir implementation of a binary Galois Linear Feedback Shift Register'
	'loom' https://github.com/asonge/loom 'A CRDT library with δ-CRDT support'
	'luhn' https://github.com/ma2gedev/luhn_ex 'Luhn algorithm in Elixir'
	'lz4' https://github.com/szktty/erlang-lz4 'LZ4 bindings for Erlang for fast data compressing'
	'machinery' https://github.com/joaomdmoura/machinery 'A state machine library for structs in general, it integrates with Phoenix out of the box'
	'mason' https://github.com/spacepilots/mason 'Coerce maps into structs. This is helpful e.g. when you interface a REST API and want to create a struct from the response'
	'matrex' https://github.com/versilov/matrex 'A blazing fast matrix library for Elixir/Erlang with C implementation using CBLAS'
	'merkle_tree' https://github.com/yosriady/merkle_tree 'A Merkle hash tree implementation in Elixir'
	'minmaxlist' https://github.com/seantanly/elixir-minmaxlist 'Elixir library extending `Enum.min_by/2`, `Enum.max_by/2` and `Enum.min_max_by/2` to return a list of results instead of just one'
	'mmath' https://github.com/dalmatinerdb/mmath 'A library for performing math on number 'arrays' in binaries'
	'monad' https://github.com/rmies/monad 'Haskell inspired monads in Elixir stylish syntax'
	'monadex' https://github.com/rob-brown/MonadEx 'Upgrade your Elixir pipelines with monads'
	'murmur' https://github.com/gmcabrita/murmur 'A pure Elixir implementation of the non-cryptographic hash Murmur3'
	'natural_sort' https://github.com/DanCouper/natural_sort 'Elixir natural sort implementation for lists of strings'
	'navigation_tree' https://github.com/gutschilla/elixir-navigation-tree 'A navigation tree representation with helpers to generate HTML out of it'
	'parallel_stream' https://github.com/beatrichartz/parallel_stream 'A parallel stream implementation for Elixir'
	'paratize' https://github.com/seantanly/elixir-paratize 'Elixir library providing some handy parallel processing (execution) facilities that support configuring number of workers and timeout'
	'parex' https://github.com/StevenJL/parex 'Parallel Execute (Parex) is an Elixir module for executing multiple (slow) processes in parallel'
	'qex' https://github.com/princemaple/elixir-queue 'Wraps `:queue`, with improved API and `Inspect`, `Collectable` and `Enumerable` protocol implementations'
	'ratio' https://github.com/Qqwy/elixir-rational 'Adds Rational Numbers and allows them to be used in common arithmatic operations. Also supports conversion between Floats and Rational Numbers'
	'red_black_tree' https://github.com/SenecaSystems/red_black_tree 'Red-Black tree implementation in Elixir'
	'remodel' https://github.com/stavro/remodel 'An Elixir presenter package used to transform map structures'
	'rendezvous' https://github.com/timdeputter/Rendezvous 'Implementation of the Rendezvous or Highest Random Weight (HRW) hashing algorithm in Elixir'
	'rock' https://github.com/ayrat555/rock 'Elixir implementation of ROCK: A Robust Clustering Algorithm for Categorical Attributes'
	'sfmt' https://github.com/jj1bdx/sfmt-erlang/ 'SIMD-oriented Fast Mersenne Twister (SFMT) for Erlang'
	'simhash' https://github.com/UniversalAvenue/simhash-ex 'Simhash implementation using Siphash and N-grams'
	'sleeplocks' https://github.com/whitfin/sleeplocks 'BEAM friendly spinlocks for Elixir/Erlang'
	'sorted_set' https://github.com/SenecaSystems/sorted_set 'Sorted Sets for Elixir'
	'spacesaving' https://github.com/rozap/spacesaving 'stream count distinct element estimation using the "space saving" algorithm'
	'structurez' https://github.com/hamiltop/structurez 'A playground for data structures in Elixir'
	'supermemo' https://github.com/edubkendo/supermemo 'An Elixir implementation of the [Supermemo 2 algorithm](https://www.supermemo.com/english/ol/sm2.htm)'
	'tfidf' https://github.com/OCannings/tf-idf 'An Elixir implementation of term frequency–inverse document frequency'
	'the_fuzz' https://github.com/smashedtoatoms/the_fuzz 'Fuzzy string-matching algorithm implementations'
	'tinymt' https://github.com/jj1bdx/tinymt-erlang/ 'Tiny Mersenne Twister (TinyMT) for Erlang'
	'trie' https://github.com/okeuday/trie 'Erlang Trie Implementation'
	'witchcraft' https://github.com/expede/witchcraft 'Common algebraic structures and functions for Elixir'
	'zipper_tree' https://github.com/Dkendal/zipper_tree 'Variadic arity tree with a zipper for Elixir'
-- Applications
	'bpe' https://github.com/spawnproc/bpe 'Business Process Engine in Erlang'
	'CaptainFact' https://github.com/CaptainFact/captain-fact-api 'A collaborative, real-time video fact-checking platform'
	'Consolex' https://github.com/sivsushruth/consolex 'Consolex is a tool that allows you to attach a web based console to any mix project'
	'dragonfly_server' https://github.com/cloud8421/dragonfly-server 'Elixir app to serve Dragonfly images'
	'ExChat' https://github.com/tony612/exchat 'A Slack-like app by Elixir, Phoenix & React(redux)'
	'Exon' https://github.com/tchoutri/Exon 'A “mess manager” developed in Elixir and provides a simple API to manage & document your stuff'
	'ExShop' https://github.com/authentic-pixels/ex-shop 'Digital goods shop & blog created using Phoenix framework'
	'Hydra' https://github.com/doomspork/hydra 'A multi-headed beast: API gateway, request cache, and data transformations'
	'majremind' https://bitbucket.org/Anwen/majremind 'A self-maintained database of your updated server which tells you which one needs to be updated'
	'medex' https://github.com/xerions/medex 'Medical Examination - application for register health check callbacks and represent their state via HTTP'
	'medusa_server' https://github.com/IcaliaLabs/medusa_server 'A simple cowboy web server written in Elixir to stack images'
	'n2o' https://github.com/synrc/n2o 'WebSocket Application Server'
	'Nvjorn' https://github.com/tchoutri/Nvjorn 'A multi-protocol network services monitor written in Elixir using Poolboy'
	'Phoenix Battleship' https://github.com/bigardone/phoenix-battleship 'The Good Old game built with Elixir, Phoenix Framework, React and Redux'
	'Phoenix Toggl' https://github.com/bigardone/phoenix-toggl 'Toggl tribute done in Elixir, Phoenix Framework, React and Redux'
	'Phoenix Trello' https://github.com/bigardone/phoenix-trello 'Trello tribute done in Elixir, Phoenix Framework, React and Redux'
	'poxa' https://github.com/edgurgel/poxa 'Open Pusher implementation, compatible with Pusher libraries'
	'Queerlink' https://github.com/Queertoo/Queerlink 'A simple yet efficient URL shortening service written in Elixir'
	'RemoteRetro' https://github.com/stride-nyc/remote_retro 'A real-time application for conducting Agile retrospectives at [remoteretro.org](https://remoteretro.org) written in Elixir/Phoenix/React'
	'Sprint Poker' https://github.com/elpassion/sprint-poker 'Online estimation tool for Agile teams, written using Elixir Lang, Phoenix Framework and React'
	'Stabby Flies' https://meaty-spiffy-hermitcrab.gigalixirapp.com 'A multiplayer fighting game built with Elixir, Phoenix and Pixi'
	'Startup Job' https://github.com/tsurupin/job_search 'An umbrella project to search startup jobs scraped from websites written in Elixir/Phoenix and React/Redux'
	'tty2048' https://github.com/lexmag/tty2048 'Terminal-based 2048 game written in Elixir'
	'uai_shot' https://github.com/sergioaugrod/uai_shot 'A multiplayer ship game built with Elixir, Phoenix Framework and Phaser'
-- Artificial Intelligence
	'Exnn' https://github.com/zampino/exnn 'Evolutive Neural Networks framework à la G.Sher written in Elixir'
	'Neat-Ex' https://gitlab.com/onnoowl/Neat-Ex 'An Elixir implementation of the NEAT algorithm'
	'simple_bayes' https://github.com/fredwu/simple_bayes 'A Simple Bayes / Naive Bayes implementation in Elixir'
-- Audio and Sounds
	'erlaudio' https://github.com/asonge/erlaudio 'Erlang PortAudio bindings'
	'firmata' https://github.com/entone/firmata 'This package implements the Firmata protocol'
	'synthex' https://github.com/bitgamma/synthex 'A signal synthesis library'
-- Authentication
	'aeacus' https://github.com/zmoshansky/aeacus 'A simple configurable identity/password authentication module (Compatible with Ecto/Phoenix)'
	'apache_passwd_md5' https://github.com/kevinmontuori/Apache.PasswdMD5 'Apache/APR Style Password Hashing'
	'aws_auth' https://github.com/bryanjos/aws_auth 'AWS Signature Version 4 Signing Library for Elixir'
	'basic_auth' https://github.com/CultivateHQ/basic_auth 'Elixir Plug to easily add HTTP basic authentication to an app'
	'coherence' https://github.com/smpallen99/coherence 'Coherence is a full featured, configurable authentication system for Phoenix'
	'doorman' https://github.com/BlakeWilliams/doorman 'Tools to make Elixir authentication simple and flexible'
	'github_oauth' https://github.com/lidashuang/github_oauth 'A simple github oauth library'
	'goth' https://github.com/peburrows/goth 'OAuth 2.0 library for server to server applications via Google Cloud APIs'
	'guardian' https://github.com/ueberauth/guardian 'An authentication framework for use with Elixir applications'
	'htpasswd' https://github.com/kevinmontuori/Apache.htpasswd 'Apache htpasswd file reader/writer in Elixir'
	'mojoauth' https://github.com/mojolingo/mojo-auth.ex 'MojoAuth implementation in Elixir'
	'oauth2' https://github.com/scrogson/oauth2 'An OAuth 2.0 client library for Elixir'
	'oauth2_facebook' https://github.com/chrislaskey/oauth2_facebook 'A Facebook OAuth2 Provider for Elixir'
	'oauth2_github' https://github.com/chrislaskey/oauth2_github 'A GitHub OAuth2 Provider for Elixir'
	'oauth2cli' https://github.com/mgamini/oauth2cli-elixir 'Simple OAuth2 client written for Elixir'
	'oauth2ex' https://github.com/parroty/oauth2ex 'Another OAuth 2.0 client library for Elixir'
	'oauther' https://github.com/lexmag/oauther 'An OAuth 1.0 implementation for Elixir'
	'passwordless_auth' https://github.com/madebymany/passwordless_auth 'Simple passwordless login or 2-factor / multi-factor authentication for Elixir'
	'phauxth' https://github.com/riverrun/phauxth 'Authentication library for Phoenix 1.3 and other Plug-based apps'
	'phoenix_client_ssl' https://github.com/jshmrtn/phoenix-client-ssl 'Client SSL Authentication Plugs for Phoenix and other Plug-based apps'
	'samly' https://github.com/handnot2/samly 'SAML SP SSO made easy ([Doc](https://hexdocs.pm/samly/readme.html))'
	'sesamex' https://github.com/khusnetdinov/sesamex 'Another simple and flexible authentication solution in 5 minutes!'
	'shield' https://github.com/mustafaturan/shield 'An OAuth 2.0 provider library and implementation for Phoenix Framework'
	'sigaws' https://github.com/handnot2/sigaws 'AWS Signature V4 signing and verification library ([Doc](https://hexdocs.pm/sigaws/Sigaws.html))'
	'ueberauth' https://github.com/ueberauth/ueberauth 'An Elixir Authentication System for Plug-based Web Applications'
	'ueberauth_auth0' https://hex.pm/packages/ueberauth_auth0 'An Ueberauth strategy for using Auth0 to authenticate your users'
	'ueberauth_cas' https://github.com/marceldegraaf/ueberauth_cas 'Central Authentication Service strategy for Überauth'
	'ueberauth_facebook' https://github.com/ueberauth/ueberauth_Facebook 'Facebook OAuth2 Strategy for Überauth'
	'ueberauth_foursquare' https://github.com/borodiychuk/ueberauth_foursquare 'Foursquare OAuth2 Strategy for Überauth'
	'ueberauth_github' https://github.com/ueberauth/ueberauth_github 'A GitHub strategy for Überauth'
	'ueberauth_google' https://github.com/ueberauth/ueberauth_google 'A Google strategy for Überauth'
	'ueberauth_identity' https://github.com/ueberauth/ueberauth_identity 'A simple username/password strategy for Überauth'
	'ueberauth_line' https://github.com/alexfilatov/ueberauth_line 'LINE Strategy for Überauth'
	'ueberauth_microsoft' https://github.com/swelham/ueberauth_microsoft 'A Microsoft strategy for Überauth'
	'ueberauth_slack' https://github.com/ueberauth/ueberauth_slack 'A Slack strategy for Überauth'
	'ueberauth_twitter' https://github.com/ueberauth/ueberauth_twitter 'Twitter Strategy for Überauth'
	'ueberauth_vk' https://github.com/sobolevn/ueberauth_vk '[vk.com](https://vk.com) Strategy for Überauth'
	'ueberauth_weibo' https://github.com/he9qi/ueberauth_weibo '[Weibo](https://weibo.com) OAuth2 Strategy for Überauth'
-- Authorization
	'authorize' https://github.com/jfrolich/authorize 'Rule based authorization, for advanced authorization rules'
	'bodyguard' https://github.com/schrockwell/bodyguard 'A flexible authorization library for Phoenix applications'
	'canada' https://github.com/jarednorman/canada 'A simple authorization library that provides a friendly interface using declarative permission rules'
	'canary' https://github.com/cpjk/canary 'An authorization library for Elixir applications that restricts what resources the current user is allowed to access'
	'speakeasy' https://github.com/coryodaniel/speakeasy 'Middleware based authentication and authorization for Absinthe GraphQL powered by Bodyguard'
	'terminator' https://github.com/MilosMosovsky/terminator 'Database based authorization (ACL), with custom DSL rules for requiring needed permissions'
-- Behaviours and Interfaces
	'connection' https://github.com/fishcakez/connection 'Connection behaviour for connection processes. The API is superset of the GenServer API'
	'gen_state_machine' https://github.com/antipax/gen_state_machine 'Elixir wrapper for gen_statem'
	'stockastic' https://github.com/shanewilton/stockastic 'Simple Elixir wrapper for the Stockfighter API'
-- Benchmarking
	'benchee' https://github.com/PragTob/benchee 'Easy and extensible benchmarking in Elixir'
	'benchfella' https://github.com/alco/benchfella 'Benchmarking tool for Elixir'
	'bmark' https://github.com/joekain/bmark 'A benchmarking tool for Elixir'
-- Bittorrent
	'bento' https://github.com/folz/bento 'An incredibly fast, correct, pure-Elixir Bencoding library'
	'tracker_request' https://github.com/alehander42/tracker_request 'Dealing with bittorrent tracker requests and responses'
	'wire' https://github.com/alehander42/wire 'Encode and decode bittorrent peer wire protocol messages with Elixir'
-- BSON
	'BSONMap' https://github.com/Nebo15/bsoneach 'Elixir package that applies a function to each document in a BSON file and has a low memory consumption'
	'cyanide' https://github.com/ispirata/cyanide 'An Elixir BSON encoding/decoding library'
-- Build Tools
	'active' https://github.com/synrc/active 'Recompilation and Reloading on FileSystem changes'
	'coffee_rotor' https://github.com/HashNuke/coffee_rotor 'Rotor plugin to compile CoffeeScript files'
	'dismake' https://github.com/jarednorman/dismake 'Mix compiler running make'
	'etude' https://github.com/exstruct/etude 'Parallel computation coordination compiler for Erlang/Elixir'
	'ExMake' https://github.com/lycus/exmake 'A modern, scriptable, dependency-based build tool loosely based on Make principles'
	'Exscript' https://github.com/liveforeverx/exscript 'Elixir escript library'
	'mad' https://github.com/synrc/mad 'Small and Fast Rebar Replacement'
	'pc' https://github.com/blt/port_compiler 'A rebar3 port compiler'
	'reaxt' https://github.com/awetzel/reaxt 'React template into your Elixir application for server rendering'
	'rebar3_abnfc_plugin' https://github.com/surik/rebar3_abnfc_plugin 'Rebar3 abnfc compiler'
	'rebar3_asn1_compiler' https://github.com/pyykkis/rebar3_asn1_compiler 'Plugin for compiling ASN.1 modules with Rebar3'
	'rebar3_auto' https://github.com/vans163/rebar3_auto 'Rebar3 plugin to auto compile and reload on file change'
	'rebar3_diameter_compiler' https://github.com/carlosedp/rebar3_diameter_compiler 'Compile diameter .dia files in rebar3 projects'
	'rebar3_eqc' https://github.com/kellymclaughlin/rebar3-eqc-plugin 'A rebar3 plugin to enable the execution of Erlang QuickCheck properties'
	'rebar3_exunit' https://github.com/processone/rebar3_exunit 'A plugin to run Elixir ExUnit tests from rebar3 build tool'
	'rebar3_idl_compiler' https://github.com/sebastiw/rebar3_idl_compiler 'This is a plugin for compiling Erlang IDL files using Rebar3'
	'rebar3_live' https://github.com/pvmart/rebar3_live 'Rebar3 live plugin'
	'rebar3_neotoma_plugin' https://github.com/zamotivator/rebar3_neotoma_plugin 'Rebar3 neotoma (Parser Expression Grammar) compiler'
	'rebar3_protobuffs' https://github.com/benoitc/rebar3_protobuffs 'rebar3 protobuffs provider using protobuffs from Basho'
	'rebar3_run' https://github.com/tsloughter/rebar3_run 'Run a release with one simple command'
	'rebar3_yang_plugin' https://github.com/surik/rebar3_yang_plugin 'Rebar3 yang compiler'
	'reltool_util' https://github.com/okeuday/reltool_util 'Erlang reltool utility functionality application'
	'relx' https://github.com/erlware/relx 'A release assembler for Erlang'
	'remix' https://github.com/AgilionApps/remix 'Automatic recompilation of Mix code on file change'
	'rotor' https://github.com/HashNuke/rotor 'Super-simple build system for Elixir'
	'sass_elixir' https://github.com/zamith/sass_elixir 'A sass plugin for Elixir projects'
-- Caching
	'cachex' https://github.com/whitfin/cachex 'A powerful caching library for Elixir with a wide featureset'
	'con_cache' https://github.com/sasa1977/con_cache 'ConCache is an ETS based key/value storage'
	'elixir_locker' https://github.com/tsharju/elixir_locker 'Locker is an Elixir wrapper for the locker Erlang library that provides some useful libraries that should make using locker a bit easier'
	'gen_spoxy' https://github.com/SpotIM/gen_spoxy 'Caching made fun'
	'jc' https://github.com/jr0senblum/jc 'In-memory, distributable cache with pub/sub, JSON-query and consistency support'
	'locker' https://github.com/wooga/locker 'Atomic distributed "check and set" for short-lived keys'
	'lru_cache' https://github.com/arago/lru_cache 'Simple LRU Cache, implemented with ets'
	'memoize' https://github.com/melpon/memoize 'A memoization macro that easily cache function'
	'nebulex' https://github.com/cabol/nebulex 'A fast, flexible and extensible distributed and local caching library for Elixir'
	'stash' https://github.com/whitfin/stash 'A straightforward, fast, and user-friendly key/value store'
-- Chatting
	'alice' https://github.com/alice-bot/alice 'A Slack bot framework for Elixir'
	'chatty' https://github.com/alco/chatty 'A basic IRC client that is most useful for writing a bot'
	'cog' https://github.com/operable/cog 'Cog is an open chatops platform that gives you a secure, collaborative command line right in your chat window'
	'ExIrc' https://github.com/bitwalker/exirc 'IRC client adapter for Elixir projects'
	'ExMustang' https://github.com/techgaun/ex_mustang 'A simple, clueless slackbot and collection of responders'
	'Guri' https://github.com/elvio/guri 'Automate tasks using chat messages'
	'hedwig' https://github.com/hedwig-im/hedwig 'XMPP Client/Bot Framework for Elixir'
	'hipchat_elixir' https://github.com/ymtszw/hipchat_elixir 'HipChat client library for Elixir, based on httpc'
	'kaguya' https://github.com/Luminarys/Kaguya 'A small, powerful, and modular IRC bot'
	'slacker' https://github.com/koudelka/slacker 'A bot library for the Slack chat service'
	'yocingo' https://github.com/Yawolf/yocingo 'Create your own Telegram Bot'
-- Cloud Infrastructure and Management
	'aws' https://github.com/jkakar/aws-elixir 'AWS clients for Elixir'
	'Bonny' https://github.com/coryodaniel/bonny 'Kubernetes Operator Development Framework'
	'Cloudi' http://cloudi.org/ 'CloudI is for back-end server processing tasks that require soft-realtime transaction'
	'discovery' https://github.com/undeadlabs/discovery 'An OTP application for auto-discovering services with Consul'
	'erlcloud' https://github.com/erlcloud/erlcloud 'Cloud Computing library for Erlang (Amazon EC2, S3, SQS, SimpleDB, Mechanical Turk, ELB)'
	'ex_aws' https://github.com/CargoSense/ex_aws 'AWS client, supporting Dynamo, Kinesis, Lambda, SQS, and S3'
	'ex_riak_cs' https://github.com/ayrat555/ex_riak_cs 'Riak CS API client'
	'fleet_api' https://github.com/jordan0day/fleet-api 'A simple wrapper for the Fleet (CoreOS) API. Can be used with etcd tokens or via direct node URLs'
	'Gandi' https://github.com/Ahamtech/elixir-Gandi 'Gandi Wrapper for Leaseweb infrastructure'
	'IElixir' https://github.com/pprzetacznik/IElixir 'Jupyter's kernel for Elixir programming language'
	'Kazan' https://github.com/obmarg/kazan 'Kubernetes client for Elixir, generated from the k8s open API specifications'
	'Kubex' https://github.com/ingerslevio/kubex 'Kubernetes client and integration for Elixir, written in pure Elixir'
	'Leaseweb' https://github.com/Ahamtech/elixir-leaseweb 'Elixir Wrapper for Leaseweb infrastructure'
	'libcluster' https://github.com/bitwalker/libcluster 'Automatic cluster formation/healing for Elixir applications'
	'nodefinder' https://github.com/okeuday/nodefinder 'Strategies for automatic node discovery in Erlang'
	'nomad' https://github.com/sashaafm/nomad 'Create cloud portable Elixir and Phoenix apps. Write once, use everywhere'
	'sidejob' https://github.com/basho/sidejob 'Parallel worker and capacity limiting library for Erlang'
	'sidetask' https://github.com/PSPDFKit-labs/sidetask 'SideTask is an alternative to Task.Supervisor using Basho's sidejob library with parallelism and capacity limiting'
	'skycluster' https://github.com/Nebo15/skycluster 'Automatic Erlang cluster formation, messaging and management for Elixir/Erlang applications. Integrated with Kubernetes'
-- Code Analysis
	'belvedere' https://github.com/nirvana/belvedere 'An example of CircleCI integration with Elixir'
	'coverex' https://github.com/alfert/coverex 'Coverage Reports for Elixir'
	'credo' https://github.com/rrrene/credo 'A static code analysis tool with a focus on code consistency and teaching Elixir'
	'dialyxir' https://github.com/jeremyjh/dialyxir 'Mix tasks to simplify use of Dialyzer in Elixir projects'
	'dogma' https://github.com/lpil/dogma 'A code style linter for Elixir, powered by shame'
	'excoveralls' https://github.com/parroty/excoveralls 'Coverage report tool for Elixir with coveralls.io integration'
	'exprof' https://github.com/parroty/exprof 'A simple code profiler for Elixir, using eprof'
-- Command Line Applications
	'anubis' https://github.com/bennyhallett/anubis 'Command-Line application framework for Elixir'
	'ex_cli' https://github.com/tuvistavie/ex_cli 'User friendly CLI apps for Elixir'
	'ex_prompt' https://github.com/behind-design/ex_prompt 'Helper package to add interactivity to your command line applications as easy as possible'
	'firex' https://github.com/msoedov/firex 'Firex is a library for automatically generating command line interfaces (CLIs) from an elixir module'
	'getopt' https://github.com/jcomellas/getopt 'Command-line options parser for Erlang'
	'loki' https://github.com/khusnetdinov/loki 'Library for creating interactive command-line application'
	'meld' https://github.com/Lac/meld 'Create global binaries from mix tasks'
	'optimus' https://github.com/savonarola/optimus 'Command-line option parser for Elixir inspired by [clap.rs](https://clap.rs/)'
	'phoenix-cli' https://phoenix-cli.github.io/ 'Command-line interface for Phoenix Framework like Rails commands'
	'progress_bar' https://github.com/henrik/progress_bar 'Command-line progress bars and spinners'
	'ratatouille' https://github.com/ndreynolds/ratatouille 'A TUI (terminal UI) kit for Elixir'
	'scribe' https://github.com/codedge-llc/scribe 'Pretty-print tables of Elixir structs and maps. Inspired by hirb'
	'table_rex' https://github.com/djm/table_rex 'Generate configurable ASCII style tables for display'
	'tabula' https://github.com/aerosol/tabula 'Pretty print list of Ecto query results / maps in ascii tables (GitHub Markdown/OrgMode)'
-- Configuration
	'confex' https://github.com/Nebo15/confex 'Helper module that provides a nice way to read environment configuration at runtime'
	'configparser_ex' https://github.com/easco/configparser_ex 'A simple Elixir parser for the same kind of files that Python's configparser library handles'
	'conform' https://github.com/bitwalker/conform 'Easy release configuration for Elixir apps'
	'dotenv' https://github.com/avdi/dotenv_elixir 'A port of dotenv to Elixir'
	'ex_conf' https://github.com/phoenixframework/ex_conf 'Simple Elixir Configuration Management'
	'figaro' https://github.com/trestrantham/ex_figaro 'Simple Elixir project configuration'
	'figaro_elixir' https://github.com/KamilLelonek/figaro-elixir 'Environmental variables manager for Elixir'
	'sweetconfig' https://github.com/d0rc/sweetconfig 'Read YAML configuration files from any point at your app'
	'weave' https://github.com/GT8Online/weave 'JIT configuration loader that works with Kubernetes and Docker Swarm'
-- Cryptography
	'aescmac' https://github.com/kleinernik/elixir-aes-cmac 'AES CMAC ([RFC 4493](https://tools.ietf.org/html/rfc4493)) in Elixir'
	'cipher' https://github.com/rubencaro/cipher 'Elixir crypto library to encrypt/decrypt arbitrary binaries'
	'cloak' https://github.com/danielberkompas/cloak 'Cloak makes it easy to use encryption with Ecto'
	'comeonin' https://github.com/riverrun/comeonin 'Password hashing (argon2, bcrypt, pbkdf2_sha512) library for Elixir'
	'crypto_rsassa_pss' https://github.com/potatosalad/erlang-crypto_rsassa_pss 'RSASSA-PSS Public Key Cryptographic Signature Algorithm for Erlang'
	'elixir_tea' https://github.com/keichan34/elixir_tea 'TEA implementation in Elixir'
	'ex_bcrypt' https://github.com/manelli/ex_bcrypt 'Elixir wrapper for the OpenBSD bcrypt password hashing algorithm'
	'ex_crypto' https://github.com/ntrepid8/ex_crypto 'Elixir wrapper for Erlang `crypto` and `public_key` modules. Provides sensible defaults for many crypto functions to make them easier to use'
	'exgpg' https://github.com/rozap/exgpg 'Use gpg from Elixir'
	'ntru_elixir' https://github.com/alisinabh/ntru_elixir 'Elixir wrapper for libntru. A post quantum cryptography system'
	'one_time_pass_ecto' https://github.com/riverrun/one_time_pass_ecto 'One-time password library for Elixir'
	'pot' https://github.com/yuce/pot 'Erlang library for generating one time passwords compatible with Google Authenticator'
	'rsa' https://github.com/trapped/elixir-rsa '`public_key` cryptography wrapper for Elixir'
	'rsa_ex' https://github.com/anoskov/rsa-ex 'Library for working with RSA keys'
	'siphash-elixir' https://github.com/whitfin/siphash-elixir 'Elixir implementation of the SipHash hash family'
	'tea_crypto' https://github.com/keichan34/tea_crypto_erl 'Tiny Encryption Algorithm implementation'
-- CSV
	'cesso' https://github.com/meh/cesso 'CSV handling library for Elixir'
	'csv' https://github.com/beatrichartz/csv 'CSV Decoding and Encoding for Elixir'
	'csvlixir' https://github.com/jimm/csvlixir 'A CSV reading/writing application for Elixir'
	'ex_csv' https://github.com/CargoSense/ex_csv 'CSV for Elixir'
	'nimble_csv' https://github.com/plataformatec/nimble_csv 'A simple and fast CSV parsing and dumping library for Elixir'
-- Date and Time
	'block_timer' https://github.com/adamkittelson/block_timer 'Macros to use :timer.apply_after and :timer.apply_interval with a block'
	'calendar' https://github.com/lau/calendar 'Calendar is a date and time library for Elixir'
	'chronos' https://github.com/nurugger07/chronos 'An Elixir date/time library'
	'cocktail' https://github.com/peek-travel/cocktail 'Elixir date recurrence library based on iCalendar events'
	'cronex' https://github.com/jbernardo95/cronex 'Cron like system you can mount in your supervision tree'
	'crontab' https://github.com/jshmrtn/crontab 'A Cron Expressions Parser, Composer & Date Candidate Finder'
	'ex_ical' https://github.com/fazibear/ex_ical 'ICalendar parser'
	'filtrex' https://github.com/rcdilorenzo/filtrex 'A library for performing and validating complex SQL-like filters from a client (e.g. smart filters)'
	'good_times' https://github.com/DevL/good_times 'Expressive and easy to use datetime functions'
	'jalaali' https://github.com/jalaali/elixir-jalaali 'Jalaali calendar implementation for Elixir'
	'milliseconds' https://github.com/davebryson/elixir_milliseconds 'Simple library to work with milliseconds in Elixir'
	'moment' https://github.com/atabary/moment 'Parse, validate, manipulate, and display dates in Elixir'
	'quantum' https://github.com/c-rack/quantum-elixir 'Cron-like job scheduler for Elixir applications'
	'repeatex' https://github.com/rcdilorenzo/repeatex 'Natural language parsing for repeating dates'
	'tiktak' https://github.com/ConduitMobileRND/tiktak 'Fast and lightweight web scheduler written in Elixir'
	'timelier' https://github.com/ausimian/timelier 'A cron-style scheduler for Elixir'
	'timex' https://github.com/bitwalker/timex 'Easy to use Date and Time modules for Elixir'
	'timex_interval' https://github.com/atabary/timex-interval 'A date/time interval library for Elixir projects, based on Timex'
	'tzdata' https://github.com/lau/tzdata 'The timezone database in Elixir'
-- Debugging
	'beaker' https://github.com/hahuang65/beaker 'Statistics and Metrics library for Elixir'
	'booter' https://github.com/eraserewind/booter 'Boot an Elixir application, step by step'
	'dbg' https://github.com/fishcakez/dbg 'Distributed tracing for Elixir'
	'eflame' https://github.com/proger/eflame 'Flame Graph profiler for Erlang'
	'eh' https://github.com/Frost/eh 'A tool to look up Elixir documentation from the command line'
	'eper' https://github.com/massemanet/eper 'Erlang performance and debugging tools'
	'ether' https://github.com/maarek/ether 'Ether provides functionality to hook Elixir into the Erlang debugger'
	'ex_debug_toolbar' https://github.com/kagux/ex_debug_toolbar 'A toolbar for Phoenix projects to interactively debug code and display useful information about requests: logs, timelines, database queries etc'
	'exrun' https://github.com/liveforeverx/exrun 'Distributed tracing for Elixir with rate limiting and simple macro-based interface'
	'git_hooks' https://github.com/qgadrian/elixir_git_hooks 'Add git hooks to Elixir projects'
	'observer_cli' https://github.com/zhongwencool/observer_cli 'Visualize Elixir & Erlang nodes on the command line, it aims to helpe developers debug production systems'
	'quaff' https://github.com/qhool/quaff 'The Debug module provides a simple helper interface for running Elixir code in the erlang graphical debugger'
	'rexbug' https://github.com/nietaki/rexbug 'An Elixir wrapper for the `redbug` production-friendly Erlang tracing debugger'
	'visualixir' https://github.com/koudelka/visualixir 'A process visualizer for remote BEAM nodes'
-- Deployment
	'akd' https://github.com/annkissam/akd 'Capistrano like, Configurable, and easy to set up Elixir Deployment Automation Framework'
	'ansible-elixir-stack' https://github.com/HashNuke/ansible-elixir-stack '1-command setup & deploys to servers, with first-class support for Phoenix apps'
	'bootleg' https://github.com/labzero/bootleg 'Simple deployment and server automation for Elixir'
	'bottler' https://github.com/rubencaro/bottler 'Bottler is a collection of tools that aims to help you generate releases, ship them to your servers, install them there, and get them live on production'
	'edeliver' https://github.com/boldpoker/edeliver 'Deployment for Elixir and Erlang'
	'elixir-on-docker' https://github.com/CrowdHailer/elixir-on-docker 'A project template to get started developing clustered Elixir applications for cloud environments'
	'exdm' https://github.com/joeyates/exdm 'Deploy Elixir applications via mix tasks'
	'exreleasy' https://github.com/miros/exreleasy 'Dead simple and Mix friendly tool for releasing Elixir applications'
	'gatling' https://github.com/hashrocket/gatling 'Collection of mix tasks to automatically create a exrm release from git and launch/upgrade it on your server'
	'Gigalixir' https://www.gigalixir.com 'A fully-featured PaaS designed for Elixir. Supports clustering, hot upgrades, and remote console/observer. Free to try without a credit card'
	'heroku-buildpack-elixir' https://github.com/HashNuke/heroku-buildpack-elixir 'Heroku buildpack to deploy Elixir apps to Heroku'
	'Nanobox' https://github.com/nanobox-io/nanobox 'A micro-PaaS (μPaaS) for creating consistent, isolated, development environments deployable anywhere https://nanobox.io'
-- Documentation
	'blue_bird' https://github.com/KittyHeaven/blue_bird 'BlueBird is a library written in the Elixir programming language for the Phoenix framework. It lets you generate API documentation in the API Blueprint format from annotations in controllers and automated tests'
	'bureaucrat' https://github.com/api-hogs/bureaucrat 'Generate Phoenix API documentation from tests'
	'ex_doc' https://github.com/elixir-lang/ex_doc 'ExDoc is a tool to generate documentation for your Elixir projects'
	'ex_doc_dash' https://github.com/JonGretar/ExDocDash 'Formatter for ExDoc to generate docset documentation for use in Dash.app'
	'hexdocset' https://github.com/yesmeck/hexdocset 'Convert hex doc to Dash.app's docset format'
	'inch-ci' http://inch-ci.org/ 'Documentation badges for Ruby & Elixir'
	'maru_swagger' https://github.com/falood/maru_swagger 'Add swagger compliant documentation to your maru API'
	'phoenix_api_docs' https://github.com/smoku/phoenix_api_docs 'Generate API Blueprint documentation from controllers and tests in the Phoenix framework'
	'phoenix_swagger' https://github.com/xerions/phoenix_swagger 'Provides swagger integration to the Phoenix framework'
-- Domain-specific language
	'Absinthe Graphql' https://github.com/absinthe-graphql/absinthe 'Fully featured GraphQL library'
	'JSON-LD.ex' https://github.com/marcelotto/jsonld-ex 'An implementation of the [JSON-LD](http://www.w3.org/TR/json-ld/) standard for [RDF.ex](https://github.com/marcelotto/rdf-ex)'
	'RDF.ex' https://github.com/marcelotto/rdf-ex 'An implementation of the [RDF](https://www.w3.org/TR/rdf11-primer/) data model in Elixir'
	'SPARQL.ex' https://github.com/marcelotto/sparql-ex 'An implementation of the [SPARQL](http://www.w3.org/TR/sparql11-overview/) standards in Elixir'
-- ECMAScript
	'elixirscript' https://github.com/elixirscript/elixirscript/ 'A transcompiler from Elixir to Javascript'
	'estree' https://github.com/bryanjos/elixir-estree 'A implementation of the SpiderMonkey Parser API in Elixir'
	'phoenix_gon' https://github.com/khusnetdinov/phoenix_gon 'Allow you to pass Phoenix environment or controller variables to JavaScript without problems'
	'phoenix_routes_js' https://github.com/khusnetdinov/phoenix_routes_js 'Phoenix routes helpers in JavaScript code and browser console'
-- Email
	'bamboo' https://github.com/thoughtbot/bamboo 'Composable, testable and adapter based email library. Out of the box support for rendering with Phoenix and a plug for previewing sent emails in dev'
	'burnex' https://github.com/Betree/burnex 'Burner email (temporary address) detector'
	'echo' https://github.com/zmoshansky/echo 'A meta-notification system; Echo checks notification preferences & dispatches notifications'
	'ex_postmark' https://github.com/KamilLelonek/ex_postmark 'Postmark adapter for sending template emails in Elixir'
	'gen_smtp' https://github.com/Vagabond/gen_smtp 'A generic Erlang SMTP server and client that can be extended via callback modules'
	'gmail' https://github.com/craigp/elixir-gmail 'A simple Gmail REST API client for Elixir'
	'mail' https://github.com/DockYard/elixir-mail 'An RFC2822 implementation in Elixir, built for composability'
	'mailer' https://github.com/antp/mailer 'A simple SMTP mailer'
	'mailibex' https://github.com/awetzel/mailibex 'Library containing Email-related implementations in Elixir: dkim, spf, dmark, mimemail, smtp'
	'mailman' https://github.com/kamilc/mailman 'Mailman provides a clean way of defining mailers in your Elixir applications'
	'pop3mail' https://hex.pm/packages/pop3mail 'Pop3 client to download email (including attachments) from the inbox via the commandline or Elixir API'
	'ravenx' https://github.com/acutario/ravenx 'Notification dispatch library for Elixir applications'
	'smoothie' https://github.com/jfrolich/smoothie 'Smoothie inline styles of your email templates, and generates a plain text version from the HTML'
	'swoosh' https://github.com/swoosh/swoosh 'Compose, deliver and test your Emails easily in Elixir with adapters for SMTP, Sendgrid, Mandrill, Mailgun, Postmark and Phoenix integration with mailbox preview'
-- Embedded Systems
	'nerves' http://nerves-project.org 'A framework for writing embedded software in Elixir'
-- Encoding and Compression
	'ex_rlp' https://github.com/exthereum/ex_rlp 'Elixir implementation of Ethereum's RLP (Recursive Length Prefix) encoding'
	'huffman' https://github.com/SenecaSystems/huffman 'Huffman encoding and decoding in Elixir'
-- Errors and Exception Handling
	'exceptional' https://github.com/expede/exceptional 'Helpers for happy-path programming & exception handling'
	'happy' https://github.com/vic/happy 'Happy path programming, alternative to elixir `with` form'
	'OK' https://github.com/CrowdHailer/OK 'Elegant error handling with result monads, featuring a simple & powerful `with` construct and a happy path pipe operator'
	'sentry-elixir' https://github.com/getsentry/sentry-elixir 'The Official Elixir client for [Sentry](https://sentry.io/)'
-- Eventhandling
	'cizen' https://gitlab.com/cizen/cizen 'Build highly concurrent, monitorable, and extensible applications with a collection of sagas'
	'event_bus' https://github.com/mustafaturan/event_bus 'Simple event bus implementation with topic filtering and built-in event store and event watcher'
	'goldrush' https://github.com/DeadZen/goldrush 'Small, Fast event processing and monitoring for Erlang/OTP applications'
	'reaxive' https://github.com/alfert/reaxive 'Reaxive is a reactive event handling library, inspired by [Elm](http://elm-lang.org) and Reactive Extensions'
	'wait_for_it' https://github.com/jvoegele/wait_for_it 'Provides convenient and easy-to-use facilities for synchronizing concurrent activities'
-- Examples and funny stuff
	'butler_cage' https://github.com/keathley/butler_cage 'A Butler plugin for showing silly photos of Nick Cage'
	'butler_tableflip' https://github.com/keathley/butler_tableflip 'Flipping tables with butler'
	'changelog.com' https://github.com/thechangelog/changelog.com 'CMS that runs changelog.com built with Phoenix 1.4'
	'dice' https://github.com/stocks29/dice 'Roll the dice, in Elixir'
	'elixir_koans' https://github.com/elixirkoans/elixir-koans '[Elixir koans](http://elixirkoans.io/) is a fun, easy way to get started with the elixir programming language'
	'ex_chain' https://github.com/eljojo/ex_chain 'Simple Markov Chain that generates funny tweets, built using Elixir'
	'ex_iss' https://github.com/cryptobird/ex_iss 'This package is for interfacing with the Open Notify API to information such as the ISS's current location, crew, and when it will pass over a location'
	'feedx' https://github.com/erneestoc/feedx 'Add social feed functionality to current applications. Exemplify OTP umbrella app, with 3 apps. Thin phoenix controllers'
	'harakiri' https://github.com/rubencaro/harakiri 'Help applications kill themselves'
	'hello_phoenix' https://github.com/bigardone/phoenix-react-redux-template 'Application template for SPAs with Phoenix, React and Redux'
	'hexpm' https://github.com/hexpm/hexpm 'Source code for the hex package manager site built with Phoenix 1.3'
	'kaisuu' https://github.com/SebastianSzturo/kaisuu 'Watch Japan's Kanji Usage on Twitter in Realtime'
	'koans' https://github.com/dojo-toulouse/elixir-koans 'Learn Elixir by using elixir-koans'
	'lolcat' https://github.com/restartr/ex-lolcat 'This is the clone of busyloop/lolcat. But it does not support animation and some features of the original'
	'magnetissimo' https://github.com/sergiotapia/magnetissimo 'Web application that indexes all popular torrent sites, and saves it to the local database'
	'oop' https://github.com/wojtekmach/oop 'OOP in Elixir'
	'phoenix-flux-react' https://github.com/fxg42/phoenix-flux-react 'An experiment with Phoenix Channels, GenEvents, React and Flux'
	'portal' https://github.com/josevalim/portal 'A shooting fault-tolerant doors for distributed portal data-transfer application in Elixir'
	'real world example app' https://github.com/gothinkster/elixir-phoenix-realworld-example-app 'Elixir / Phoenix implementation of [RealWorld.io](https://realworld.io/) backend specs - a Medium clone'
	'rollex' https://gitlab.com/olhado/rollex 'Elixir library using a Pratt Parser algorithm to calculate dice rolls'
	'rubix' https://github.com/YellowApple/Rubix 'A very simple (and barely-functioning) Ruby runner for Elixir'
	'stranger' https://github.com/cazrin/stranger 'Elixir Phoenix app to chat anonymously with a randomly chosen stranger'
	'tilex' https://github.com/hashrocket/tilex 'Source code for Hashrocket's TIL website built with Phoenix 1.3'
	'weather' https://github.com/tacticiankerala/elixir-weather 'A command line weather app built using Elixir'
-- Feature Flags and Toggles
	'flippant' https://github.com/sorentwo/flippant 'Feature flipping for the Elixir world'
	'fun_with_flags' https://github.com/tompave/fun_with_flags 'A feature toggle library using Redis or Ecto for persistence, an ETS cache for speed and PubSub for distributed cache busting. Comes with a management web UI for Phoenix and Plug'
	'molasses' https://github.com/securingsincity/molasses 'A feature toggle library using redis or SQL (using Ecto) as a backing service'
-- Feeds
	'atomex' https://github.com/Betree/atomex 'ATOM feed builder with a focus on standards compliance, security and extensibility'
	'feeder' https://github.com/michaelnisi/feeder 'Parse RSS and Atom feeds'
	'feeder_ex' https://github.com/manukall/feeder_ex 'RSS feed parser. Simple wrapper for feeder'
	'feedme' https://github.com/umurgdk/elixir-feedme 'RSS/Atom parser built on erlang's xmerl xml parser'
-- Files and Directories
	'arc' https://github.com/stavro/arc 'Flexible file upload and attachment library for Elixir'
	'Belt' https://bitbucket.org/pentacent/belt/ 'Extensible file upload library with support for SFTP, S3 and Filesystem storage'
	'cassius' https://github.com/jquadrin/cassius 'Monitor Linux file system events'
	'dir_walker' https://github.com/pragdave/dir_walker 'DirWalker lazily traverses one or more directory trees, depth first, returning successive file names'
	'elixgrep' https://github.com/bbense/elixgrep 'A framework for doing Hadoop style Map/Reduce operations on collections of files'
	'ex_guard' https://github.com/slashmili/ex_guard 'ExGuard is a mix command to handle events on file system modifications'
	'ex_minimatch' https://github.com/gniquil/ex_minimatch 'Globbing paths without walking the tree!'
	'exfile' https://github.com/keichan34/exfile 'File upload handling, persistence, and processing in Elixir and Plug'
	'exfswatch' https://github.com/falood/exfswatch 'A file change watcher wrapper based on __fs__'
	'eye_drops' https://github.com/rkotze/eye_drops 'Configurable mix task to watch file changes and run the corresponding command'
	'format_parser.ex' https://github.com/ahtung/format_parser.ex 'Elixir library to figure out the type and the format of a file'
	'fs' https://github.com/synrc/fs 'Erlang FileSystem Listener'
	'fwatch' https://github.com/ryo33/fwatch-ex 'A callback-based file watcher based on __fs__'
	'librex' https://github.com/ricn/librex 'Elixir library to convert office documents to other formats using LibreOffice'
	'Radpath' https://github.com/lowks/Radpath 'Path library for Elixir, inspired by Python's Enhpath'
	'sentix' https://github.com/whitfin/sentix 'A cross-platform file watcher for Elixir based on fswatch'
	'sizeable' https://github.com/arvidkahl/sizeable 'An Elixir library to make file sizes human-readable'
	'zarex' https://github.com/ricn/zarex 'Filename sanitization for Elixir'
-- Formulars
	'forms' https://github.com/spawnproc/forms 'Erlang Business Documents Generator'
-- Framework Components
	'absinthe_plug' https://github.com/absinthe-graphql/absinthe_plug 'Plug support for Absinthe'
	'addict' https://github.com/trenpixster/addict 'User authentication for Phoenix Framework'
	'airbrake_plug' https://github.com/romul/airbrake_plug 'Report errors in your Plug stack or whatever to Airbrake'
	'ashes' https://github.com/nickgartmann/ashes 'A code generation tool for the Phoenix web framework'
	'better_params' https://github.com/sheharyarn/better_params 'Elixir Plug for cleaner request params in web apps'
	'blaguth' https://github.com/lexmag/blaguth 'Basic Access Authentication in Plug applications'
	'commanded' https://github.com/slashdotdash/commanded 'Command handling middleware for Command Query Responsibility Segregation (CQRS) applications'
	'cors_plug' https://github.com/mschae/cors_plug 'An Elixir plug that adds CORS headers to requests and responds to preflight requests (OPTIONS)'
	'corsica' https://github.com/whatyouhide/corsica 'Elixir library for dealing with CORS requests'
	'crudex' https://github.com/bitgamma/crudex 'CRUD utilities for Phoenix and Ecto'
	'dayron' https://github.com/inaka/Dayron 'A repository _similar_ to `Ecto.Repo` that works with REST API requests instead of a database'
	'ex_admin' https://github.com/smpallen99/ex_admin 'ExAdmin is an auto administration package for Elixir and the Phoenix Framework'
	'exdjango' https://github.com/nicksanders/exdjango 'A few elixir libraries for working with django'
	'exrecaptcha' https://github.com/adanselm/exrecaptcha 'Simple reCaptcha display/verify code for Elixir applications'
	'filterable' https://github.com/omohokcoj/filterable 'Simple query params filtering for Phoenix framework inspired by Rails has_scope'
	'graphql_parser' https://github.com/graphql-elixir/graphql_parser 'An Elixir binding for [libgraphqlparser](https://github.com/graphql/libgraphqlparser)'
	'http_router' https://github.com/sugar-framework/elixir-http-router 'HTTP Router with various macros to assist in developing your application and organizing your code'
	'kerosene' https://github.com/elixirdrops/kerosene 'Pagination for Ecto and Phoenix'
	'mellon' https://github.com/sajmoon/mellon 'An authentication module for Plug applications'
	'multiverse' https://github.com/Nebo15/multiverse 'Plug that allows to add version compatibility layers via API Request/Response Gateways'
	'params' https://github.com/vic/params 'Use Ecto to enforce/validate parameters structure, akin to Rails' strong parameters'
	'passport' https://github.com/opendrops/passport 'Passport provides authentication for Phoenix applications'
	'phoenix_ecto' https://github.com/phoenixframework/phoenix_ecto 'Phoenix and Ecto integration'
	'phoenix_haml' https://github.com/chrismccord/phoenix_haml 'Phoenix Template Engine for Haml'
	'phoenix_html' https://github.com/phoenixframework/phoenix_html 'Phoenix.HTML functions for working with HTML strings and templates'
	'phoenix_html_sanitizer' https://github.com/elixirstatus/phoenix_html_sanitizer 'HTML Sanitizer integration for Phoenix'
	'phoenix_html_simplified_helpers' https://github.com/ikeikeikeike/phoenix_html_simplified_helpers 'Some helpers for phoenix html (truncate, time_ago_in_words, number_with_delimiter)'
	'phoenix_linguist' https://github.com/jxs/phoenix_linguist 'A project that integrates Phoenix with Linguist, providing a plug and view helpers'
	'phoenix_live_reload' https://github.com/phoenixframework/phoenix_live_reload 'Provides live-reload functionality for Phoenix'
	'phoenix_pubsub_postgres' https://github.com/opendrops/phoenix-pubsub-postgres 'Postgresql PubSub adapter for Phoenix apps'
	'phoenix_pubsub_rabbitmq' https://github.com/pma/phoenix_pubsub_rabbitmq 'RabbitMQ adapter for Phoenix's PubSub layer'
	'phoenix_pubsub_redis' https://github.com/phoenixframework/phoenix_pubsub_redis 'The Redis PubSub adapter for the Phoenix framework'
	'phoenix_pubsub_vernemq' https://github.com/larshesel/phoenix_pubsub_vernemq 'The VerneMQ MQTT pubsub adapter for the Phoenix framework'
	'phoenix_slime' https://github.com/slime-lang/phoenix_slime 'Slim template support for Phoenix'
	'phoenix_token_auth' https://github.com/manukall/phoenix_token_auth 'Token authentication solution for Phoenix. Useful for APIs or single page apps'
	'plug' https://github.com/elixir-lang/plug 'A specification and conveniences for composable modules in between web applications'
	'plug_accesslog' https://github.com/mneudert/plug_accesslog 'Plug for writing access logs'
	'plug_and_play' https://github.com/henrik/plug_and_play 'Set up a Plug application with less boilerplate'
	'plug_auth' https://github.com/bitgamma/plug_auth 'Collection of authentication-related plugs'
	'plug_canonical_host' https://github.com/remiprev/plug_canonical_host 'Plug to ensure all requests are served from a single canonical host'
	'plug_checkup' https://github.com/ggpasqualino/plug_checkup 'Plug for adding simple health checks to your app'
	'plug_cloudflare' https://github.com/c-rack/plug_cloudflare 'Inspired by mod_cloudflare, this Elixir plug parses Cloudflares CF-Connecting-IP HTTP request header into Plug.Conn's remote_ip field'
	'plug_forward_peer' https://github.com/awetzel/plug_forwarded_peer 'Very simple plug which reads X-Forwarded-For or Forwarded header according to RFC7239 and fill conn.remote_ip with the root client ip'
	'plug_fprof' https://github.com/obmarg/plug_fprof 'A Plug that adds fprof tracing to requests, to allow for easy profiling'
	'plug_graphql' https://github.com/graphql-elixir/plug_graphql 'Phoenix Plug integration for [GraphQL Elixir](http://graphql-elixir.org/)'
	'plug_heartbeat' https://github.com/whatyouhide/plug_heartbeat 'A plug for responding to heartbeat requests'
	'plug_jwt' https://github.com/bryanjos/plug_jwt 'Plug for JWT authentication'
	'plug_password' https://github.com/azranel/plug_password 'Plug for adding simple cookie-based authentication'
	'plug_rails_cookie_session_store' https://github.com/cconstantin/plug_rails_cookie_session_store 'Rails compatible Plug session store'
	'plug_redirect_https' https://github.com/stocks29/plug_redirect_https 'Plug to redirect http requests to https requests behind a reverse proxy'
	'plug_require_header' https://github.com/DevL/plug_require_header 'Require and extract HTTP headers and handle missing ones'
	'plug_response_header' https://github.com/c-rack/plug_response_header 'easy manipulation of HTTP response headers'
	'plug_ribbon' https://github.com/stnly/plug_ribbon 'Injects a ribbon to your web application in the development environment'
	'plug_secex' https://github.com/techgaun/plug_secex 'Plug that adds various HTTP Headers to make Phoenix/Elixir app more secure'
	'plug_session_memcached' https://github.com/gutschilla/plug-session-memcached 'A very simple memcached session store for Elixir's plug'
	'plug_sigaws' https://github.com/handnot2/plug_sigaws 'AWS Signature V4 authentication protection for Phoenix/Plug Routes ([Docs](https://hexdocs.pm/plug_sigaws/PlugSigaws.html))'
	'plug_statsd' https://github.com/jeffweiss/plug_statsd 'A plug for automatically sending timing and count metrics to statsd'
	'plugs' https://github.com/sugar-framework/plugs 'Collection of Plug middleware for web applications'
	'plugsnag' https://github.com/jarednorman/plugsnag 'Bugsnag notifier for Elixir's plug'
	'raygun' https://github.com/cobenian/raygun 'Capture bugs and send them to Raygun'
	'react_phoenix' https://github.com/geolessel/react-phoenix 'Render React.js components in Phoenix views focusing on easy installation and Brunch compatibility'
	'resin' https://github.com/Frost/resin 'Resin is a plug that will add a configurable delay to every request that's passing through it, unless run in production'
	'revision_plate_ex' https://github.com/KazuCocoa/revision_plate_ex 'Plug application and middleware that serves endpoint returns application's REVISION'
	'rummage_ecto' https://github.com/Excipients/rummage_ecto 'A configurable framework to search, sort and paginate Ecto Queries'
	'rummage_phoenix' https://github.com/Excipients/rummage_phoenix 'A support framework for searching, sorting and paginating models in Phoenix, with HTML support'
	'scaffold' https://github.com/gausby/scaffold 'A mix task for creating new projects based on templates fetched from a Git-repo'
	'scrivener' https://github.com/drewolson/scrivener 'Paginate your Ecto queries'
	'scrivener_headers' https://github.com/doomspork/scrivener_headers 'Helpers for paginating API responses with Scrivener and HTTP headers'
	'scrivener_html' https://github.com/mgwidmann/scrivener_html 'Helpers built to work with Scrivener's page struct to easily build HTML output for various CSS frameworks'
	'sentinel' https://github.com/britton-jb/sentinel 'An authentication framework for Phoenix extending guardian with routing and other basic functionality'
	'torch' https://github.com/infinitered/torch 'Torch is a rapid admin generator for Phoenix apps. It uses generators rather than DSLs to ensure that the code remains maintainable'
	'trailing_format_plug' https://github.com/mschae/trailing_format_plug 'An Elixir plug to support legacy APIs that use a rails-like trailing format'
	'turn_the_page' https://hex.pm/packages/turn_the_page 'Fast, simple and lightweight pagination system for your Elixir application'
	'webassembly' https://github.com/herenowcoder/webassembly 'Web DSL for Elixir'
	'weebo' https://github.com/stevenschobert/weebo 'An XML-RPC parser/formatter for Elixir, with full support for datatype mapping'
-- Frameworks
	'exelli' https://github.com/pigmej/exelli 'An Elli Elixir wrapper with some sugar syntax goodies'
	'kitto' https://github.com/kittoframework/kitto 'A framework for interactive dashboards'
	'phoenix' https://github.com/phoenixframework/phoenix 'Elixir Web Framework targeting full-featured, fault tolerant applications with realtime functionality'
	'placid' https://github.com/slogsdon/placid 'A REST toolkit for building highly-scalable and fault-tolerant HTTP APIs with Elixir'
	'rackla' https://github.com/AntonFagerberg/rackla 'API Gateways in Elixir'
	'relax' https://github.com/AgilionApps/relax 'Simple Elixir implementation of a [jsonapi.org](http://jsonapi.org) server'
	'rest' https://github.com/synrc/rest 'Micro-REST framework with typed JSON'
	'sugar' https://github.com/sugar-framework/sugar 'Modular web framework for Elixir'
	'trot' https://github.com/hexedpackets/trot 'An Elixir web micro-framework'
-- Games
	'entice' https://github.com/entice/entice 'A distributed Entity-Component-System framework, providing its own example MMORPG server'
	'mines' https://github.com/kevlar1818/mines 'A minesweeper clone in the terminal'
-- Geolocation
	'distance_api_matrix' https://github.com/C404/distance-matrix-api 'Provide distance and heading calculations via Google distance matrix api'
	'geo' https://github.com/bryanjos/geo 'A collection of GIS functions for Elixir'
	'geocalc' https://github.com/yltsrc/geocalc 'Calculate distance, bearing and more between latitude/longitude points'
	'geocoder' https://github.com/knrz/geocoder 'A simple, efficient geocoder/reverse geocoder with a built-in cache'
	'geohash' https://github.com/polmuz/elixir-geohash 'Geohash encode/decode library'
	'geohax' https://github.com/evuez/geohax 'Geohash encoding and decoding with neighbors finder'
	'geoip' https://github.com/navinpeiris/geoip 'Find geolocation for a given IP, hostname or `Plug.Conn`'
	'geolix' https://github.com/mneudert/geolix 'MaxMind GeoIP2 database reader/decoder'
	'geonames' https://github.com/pareeohnos/geonames-elixir 'A simple Elixir wrapper around the GeoNames API'
	'ip2location' https://github.com/nazipov/ip2location-elixir 'An Elixir library for IP2Location database'
	'ipgeobase' https://github.com/sergey-chechaev/elixir_ipgeobase 'Find Russian and Ukraine city by IP address and find country for other country'
	'proj' https://github.com/CandyGumdrop/proj 'Elixir coordinate conversion library using OSGeo's PROJ.4'
	'segseg' https://github.com/pkinney/segseg_ex 'Segment-segment intersection classifier and calculator'
	'topo' https://github.com/pkinney/topo 'A Geometry library for Elixir that calculates spatial relationships between two geometries'
-- GUI
	'scenic' https://github.com/boydm/scenic 'Portable 2D UI framework'
-- Hardware
	'elixir_ale' https://github.com/fhunleth/elixir_ale 'Elixir access to hardware I/O interfaces such as GPIO, I2C, and SPI'
	'nerves' https://github.com/nerves-project/nerves 'Framework for building firmware for platforms like Raspberry Pi and BeagleBone Black'
-- HTML
	'exquery' https://github.com/rozap/exquery 'A library for parsing HTML and querying elements within'
	'floki' https://github.com/philss/floki 'A simple HTML parser that enables searching using CSS like selectors'
	'html_sanitize_ex' https://github.com/rrrene/html_sanitize_ex 'HTML sanitizer for Elixir'
	'modest_ex' https://github.com/f34nk/modest_ex 'A library to do pipeable transformations on html strings with CSS selectors, e.g. find(), prepend(), append(), replace() etc'
	'myhtmlex' https://github.com/Overbryd/myhtmlex 'Elixir/Erlang bindings for lexborisov's myhtml'
	'readability' https://github.com/keepcosmos/readability 'Readability is for extracting and curating articles'
	'texas' https://gitlab.com/dgmcguire/texas 'Texas is a powerful abstraction over updating your clients using server-side rendering and server-side Virtual DOM diff/patching'
	'tidy_ex' https://github.com/f34nk/tidy_ex 'Elixir binding to the granddaddy of HTML tools [http://www.html-tidy.org](http://www.html-tidy.org)'
-- HTTP
	'Ace' https://github.com/CrowdHailer/Ace 'HTTP web server and client, supports http1 and http2'
	'bolt' https://github.com/SebastianSzturo/bolt 'Simple and fast http proxy'
	'cauldron' https://github.com/meh/cauldron 'An HTTP/SPDY server as a library'
	'Crawler' https://github.com/fredwu/crawler 'A high performance web crawler in Elixir'
	'elli' https://github.com/knutin/elli 'Elli is a webserver you can run inside your Erlang application to expose an HTTP API'
	'etag_plug' https://github.com/Zeeker/etag_plug 'A simple to use shallow ETag plug'
	'explode' https://github.com/pkinney/explode 'An easy utility for responding with standard HTTP/JSON error payloads in Plug- and Phoenix-based applications'
	'exvcr' https://github.com/parroty/exvcr 'HTTP request/response recording library for Elixir, inspired by VCR'
	'fuzzyurl' https://github.com/gamache/fuzzyurl.ex 'An Elixir library for parsing, constructing, and wildcard-matching URLs. Also available for [Ruby](https://github.com/gamache/fuzzyurl.rb) and [JavaScript](https://github.com/gamache/fuzzyurl.js)'
	'gun' https://github.com/ninenines/gun 'HTTP/1.1, HTTP/2 and Websocket client for Erlang/OTP'
	'hackney' https://github.com/benoitc/hackney 'Simple HTTP client written in Erlang'
	'http' https://github.com/slogsdon/http 'HTTP server for Elixir'
	'http_digex' https://github.com/techgaun/http_digex 'A module to create basic digest HTTP auth header'
	'http_proxy' https://github.com/KazuCocoa/http_proxy 'Multi port HTTP Proxy'
	'httpoison' https://github.com/edgurgel/httpoison 'Yet Another HTTP client for Elixir powered by hackney'
	'httpotion' https://github.com/myfreeweb/httpotion 'Fancy HTTP client for Elixir, based on ibrowse'
	'ivar' https://github.com/swelham/ivar 'A lightweight wrapper around HTTPoison that provides a fluent and composable way to build http requests'
	'lhttpc' https://github.com/talko/lhttpc 'A lightweight HTTP/1.1 client implemented in Erlang'
	'mnemonic_slugs' https://github.com/devshane/mnemonic_slugs 'A memorable, mnemonic slug generator in Elixir'
	'mochiweb' https://github.com/mochi/mochiweb 'MochiWeb is an Erlang library for building lightweight HTTP servers'
	'neuron' https://github.com/uesteibar/neuron 'A GraphQL client for Elixir'
	'plug_wait1' https://github.com/wait1/plug_wait1 'Plug adapter for the wait1 protocol'
	'raxx' https://github.com/CrowdHailer/raxx 'Interface for HTTP webservers, frameworks and clients'
	'river' https://github.com/peburrows/river 'An HTTP/2 client that is lightweight and lightning fast'
	'scrape' https://github.com/Anonyfox/elixir-scrape 'Scrape any website, article or RSS/Atom Feed with ease'
	'sparql_client' https://github.com/marcelotto/sparql_client 'A [SPARQL protocol](https://www.w3.org/TR/sparql11-protocol/) client for Elixir'
	'spell' https://github.com/MyMedsAndMe/spell 'Spell is a [Web Application Messaging Protocol](http://wamp-proto.org/) (WAMP) client implementation in Elixir'
	'tesla' https://github.com/teamon/tesla 'HTTP client library, with support for middleware and multiple adapters'
	'Tube' https://github.com/narrowtux/Tube 'Pure Elixir WebSocket client library'
	'uri_query' https://github.com/shhavel/uri_query 'URI encode nested GET parameters and array values in Elixir'
	'uri_template' https://github.com/pezra/ex-uri-template 'RFC6570 compliant URI template processor for Elixir'
	'web_socket' https://github.com/slogsdon/plug-web-socket 'An exploration into a stand-alone library for Plug applications to easily adopt WebSockets'
	'webdriver' https://github.com/stuart/elixir-webdriver 'This is an implementation of the WebDriver protocol client. It currently supports PhantomJS, FireFox, ChromeDriver and remote webdriver servers (e.g. Selenium)'
	'yuri' https://github.com/kemonomachi/yuri 'Simple struct for representing URIs'
-- Images
	'alchemic_avatar' https://github.com/zhangsoledad/alchemic_avatar 'Elixir library for generating letter avatar from string'
	'artifact' https://github.com/doomspork/artifact 'File upload and on-the-fly processing for Elixir'
	'bump' https://github.com/evanfarrar/ex_bump 'A BMP file writer in pure Elixir'
	'chunky_svg' https://github.com/mmmries/chunky_svg ' A library for drawing things with SVG'
	'cloudex' https://github.com/smeevil/cloudex 'Cloudex is an Elixir library that can upload image files or urls to Cloudinary'
	'eikon' https://github.com/tchoutri/Eikon 'An Elixir library providing a read-only interface for image files'
	'elixir_exif' https://github.com/sschneider1207/ElixirExif 'Parse exif tags and thumbnail data from jpeg files'
	'ex_image_info' https://github.com/rNoz/ex_image_info 'An Elixir library to parse images (binaries) and get the dimensions, detected mime-type and overall validity for a set of image formats'
	'exexif' https://github.com/pragdave/exexif 'Pure Elixir library to extract TIFF and EFIX metadata from jpeg files'
	'exfavicon' https://github.com/ikeikeikeike/exfavicon 'An Elixir library for discovering favicons'
	'identicon' https://github.com/rbishop/identicon 'An Elixir library for generating 5x5 identicons'
	'image64' https://hex.pm/packages/image64 'A tool for working with base64 encoded images'
	'imagineer' https://github.com/SenecaSystems/imagineer 'Image parsing in Elixir'
	'imgex' https://github.com/ianwalter/imgex 'Unofficial client library for generating imgix URLs in Elixir'
	'mogrify' https://github.com/route/mogrify 'An Elixir wrapper for ImageMagick command line'
	'png' https://github.com/yuce/png 'A pure Erlang library for creating PNG images. It can currently create 8 and 16 bit RGB, RGB with alpha, indexed, grayscale and grayscale with alpha images'
	'thumbnex' https://github.com/talklittle/thumbnex 'Create thumbnails from images and video screenshots'
-- Instrumenting / Monitoring
	'appsignal-elixir' https://github.com/appsignal/appsignal-elixir/ 'Collects error and performance data from your Elixir applications and sends it to [AppSignal](https://appsignal.com/)'
	'elixometer' https://github.com/pinterest/elixometer 'A light Elixir wrapper around exometer'
	'erlang-metrics' https://github.com/benoitc/erlang-metrics 'A generic interface to different metrics systems in Erlang'
	'exometer' https://github.com/Feuerlabs/exometer 'Basic measurement objects and probe behavior in Erlang'
	'folsom_ddb' https://github.com/dalmatinerdb/folsom_ddb 'DalmatinerDB backend to store folsom metrics'
	'graphitex' https://github.com/msoedov/graphitex 'Graphite/Carbon client for Elixir'
	'instream' https://github.com/mneudert/instream 'InfluxDB driver for Elixir'
	'instrumental' https://github.com/undeadlabs/instrumental-ex 'An Elixir client for [Instrumental](https://instrumentalapp.com/)'
	'newrelic.ex' https://github.com/romul/newrelic.ex 'Collects metrics from your Elixir/Phoenix application and sends them to [NewRelic](https://newrelic.com/)'
	'prometheus' https://github.com/deadtrickster/prometheus.erl '[Prometheus.io](https://prometheus.io) monitoring system and time series database client in Erlang'
	'prometheus-ecto' https://github.com/deadtrickster/prometheus-ecto 'Ecto instrumenter for prometheus.ex'
	'prometheus-phoenix' https://github.com/deadtrickster/prometheus-phoenix 'Phoenix instrumenter for prometheus.ex'
	'prometheus-plugs' https://github.com/deadtrickster/prometheus-plugs 'Plugs instrumenters/exporter for prometheus.ex'
	'prometheus.ex' https://github.com/deadtrickster/prometheus.ex 'Elixir-friendly [Prometheus.io](https://prometheus.io) monitoring system and time series database client'
	'prometheus_process_collector' https://github.com/deadtrickster/prometheus_process_collector 'Prometheus collector which exports the current state of process metrics including cpu, memory, file descriptor usage and native threads count as well as the process start and up times'
	'spandex' https://github.com/spandex-project/spandex 'Platform agnostic tracing library originally developed for Datadog APM'
	'telemetry' https://github.com/beam-telemetry/telemetry 'Dynamic dispatching library for metrics and instrumentations'
-- JSON
	'exjson' https://github.com/guedes/exjson 'JSON parser and generator in Elixir'
	'ja_serializer' https://github.com/AgilionApps/ja_serializer 'JSONAPI.org Serialization in Elixir'
	'jason' https://github.com/michalmuskala/jason 'A blazing fast JSON parser and generator in pure Elixir'
	'jazz' https://github.com/meh/jazz 'Yet another library to handle JSON in Elixir'
	'joken' https://github.com/bryanjos/joken 'Encodes and decodes JSON Web Tokens'
	'jose' https://github.com/potatosalad/erlang-jose 'JSON Object Signing and Encryption (JOSE) for Erlang and Elixir'
	'json' https://github.com/cblage/elixir-json 'Native JSON library for Elixir'
	'json_pointer' https://github.com/xavier/json_pointer 'Implementation of RFC 6901 which defines a string syntax for identifying a specific value within a JSON document'
	'json_stream_encoder' https://github.com/TreyE/json_stream_encoder 'JsonStreamEncoder is a streaming encoder for streaming JSON to an IOish thing in Elixir'
	'json_web_token_ex' https://github.com/garyf/json_web_token_ex 'An Elixir implementation of the JSON Web Token (JWT) Standards Track (RFC 7519)'
	'jsonapi' https://github.com/jeregrine/jsonapi 'A project that will render your data models into [JSONAPI Documents](http://jsonapi.org/format/)'
	'jsx' https://github.com/talentdeficit/jsx 'An Erlang application for consuming, producing, and manipulating json'
	'jsxn' https://github.com/talentdeficit/jsxn 'jsx but with maps'
	'jwalk' https://github.com/jr0senblum/jwalk 'Helper module for working with Erlang representations of JSON'
	'jwtex' https://github.com/mschae/jwtex 'A library to encode and decode [JWT tokens](http://jwt.io/)'
	'poison' https://github.com/devinus/poison 'Poison is a new JSON library for Elixir focusing on wicked-fast speed without sacrificing simplicity, completeness, or correctness'
	'tiny' https://github.com/whitfin/tiny 'Tiny, fast and fully compliant JSON parser for Elixir'
	'world_json' https://github.com/camshaft/world_json_ex 'topojson country and state/province collections for elixir/erlang'
-- Languages
	'Elchemy' https://github.com/wende/elchemy 'Compiler allowing to translate Elm programming language code to Elixir'
	'lighthouse_scheme' https://github.com/jwhiteman/lighthouse-scheme 'A small Lisp-like language and interactive REPL, built in Elixir'
	'Monkey' https://github.com/fabrik42/writing_an_interpreter_in_elixir 'Elixir implementation of an interpreter and REPL for the js-like Monkey programming language'
-- Lexical analysis
	'ex_abnf' https://github.com/marcelog/ex_abnf 'Parser for ABNF Grammars in Elixir'
	'lex_luthor' https://github.com/jamesotron/lex_luthor 'LexLuthor is a Lexer in Elixir which uses macros to generate a reusable lexers'
-- Logging
	'bunyan' https://github.com/bunyan-logger/bunyan 'Bunyan: An Elixir Logger'
	'exlager' https://github.com/khia/exlager 'Elixir binding for lager'
	'exsentry' https://github.com/appcues/exsentry 'Error logging to [Sentry](https://getsentry.com/)'
	'gelf_logger' https://github.com/jschniper/gelf_logger 'A Logger backend that will generate Graylog Extended Log Format (GELF) messages'
	'honeybadger' https://github.com/honeybadger-io/honeybadger-elixir 'Error logging to [Honeybadger](https://www.honeybadger.io/)'
	'json_logger' https://github.com/LeeroyDing/json_logger 'JSON Logger is a logger backend that outputs elixir logs in JSON format'
	'lager' https://github.com/basho/lager 'A logging framework for Erlang/OTP by basho.com'
	'lager_logger' https://github.com/PSPDFKit-labs/lager_logger 'A lager backend that forwards all log messages to Elixir's Logger'
	'logfmt' https://github.com/jclem/logfmt-elixir 'Logfmt is a module for encoding and decoding logfmt-style log lines'
	'logger_logstash_backend' https://github.com/marcelog/logger_logstash_backend 'A backend for the Elixir Logger that will send logs to the Logstash UDP input'
	'logglix' https://github.com/pragmaticivan/logglix 'A logger backend for posting errors to Loggly'
	'logster' https://github.com/navinpeiris/logster 'Easily parsable, one-line logging for Phoenix and Plug applications, inspired by Lograge'
	'metrix' https://github.com/rwdaigle/metrix 'Log custom app metrics to stdout for use by Librato and other downstream processors'
	'mstore' https://github.com/dalmatinerdb/mstore 'MStore is a experimental metric store build in erlang, the primary functions are open, new, get and put'
	'quiet_logger' https://github.com/Driftrock/quiet_logger/pull/1 'A simple plug to suppress health check logging (e.g.: when using Kubernetes)'
	'rogger' https://github.com/duartejc/rogger 'Elixir logger to publish log messages in RabbitMQ'
	'rollbax' https://github.com/elixir-addicts/rollbax 'Exception tracking and logging to [Rollbar](https://rollbar.com/)'
	'slack_logger_backend' https://github.com/craigp/slack_logger_backend 'A logger backend for posting errors to Slack'
	'syslog' https://github.com/Vagabond/erlang-syslog 'Erlang port driver for interacting with syslog via syslog(3)'
	'timber' https://github.com/timberio/timber-elixir 'Structured logging platform; turns raw text logs into rich structured events'
	'youtrack_logger_backend' https://github.com/unifysell/youtrack_logger_backend 'A logger backend that will post messages to [YouTrack](https://www.jetbrains.com/youtrack/) (an issue tracker made by JetBrains)'
-- Macros
	'anaphora' https://github.com/sviridov/anaphora-elixir 'Anaphora is the anaphoric macro collection for Elixir. An anaphoric macro is one that deliberately captures a variable (typically it) from forms supplied to the macro'
	'apix' https://github.com/liveforeverx/apix 'Simple convention and DSL for transformation of elixir functions to an API for later documentation and or validation'
	'backports' https://github.com/leifg/backports 'Use new functions in Elixir 1.1 and 1.2'
	'eventsourced' https://github.com/slashdotdash/eventsourced 'Build functional, event-sourced domain models'
	'expat' https://github.com/vic/expat 'Reusable, composable patterns across Elixir libraries'
	'guardsafe' https://github.com/DevL/guardsafe 'Macros expanding into code that can be safely used in guard clauses'
	'kwfuns' https://github.com/RobertDober/lab42_defkw 'Macros to create functions with syntax based keyword parameters with default values'
	'lineo' https://github.com/camshaft/lineo 'parse transform for accurate line numbers'
	'mdef' https://github.com/pragdave/mdef 'Easily define multiple function heads in Elixir'
	'named_args' https://github.com/mgwidmann/named_args 'Allows named arg style arguments in Elixir'
	'ok_jose' https://github.com/vic/ok_jose 'Pipe elixir functions that match `{:ok,_}`, `{:error,_}` tuples or custom patterns'
	'opus' https://github.com/zorbash/opus 'A framework for pluggable business logic components'
	'pattern_tap' https://github.com/mgwidmann/elixir-pattern_tap 'Macro for tapping into a pattern match while using the pipe operator'
	'pipe_here' https://github.com/vic/pipe_here 'Easily pipe values into any argument position'
	'pipe_to' https://github.com/taiansu/pipe_to 'The enhanced pipe operator which can specify the target position'
	'pipes' https://github.com/batate/elixir-pipes 'Macros for more flexible composition with the Elixir Pipe operator'
	'pit' https://github.com/vic/pit 'Transform values as they flow inside a pipe'
	'rebind' https://github.com/camshaft/rebind 'rebind parse transform for Erlang'
	'rulex' https://github.com/awetzel/rulex 'Simple rule handler using Elixir pattern matching'
	'shorter_maps' https://github.com/meyercm/shorter_maps '~M sigil for map shorthand. `~M{id name} ~> %{id: id, name: name}`'
	'unsafe' https://github.com/whitfin/unsafe 'Generate easy unsafe (!) bindings for Elixir functions'
-- Markdown
	'cmark' https://github.com/asaaki/cmark.ex 'Elixir NIF for CommonMark (in C), a parser following the CommonMark spec'
	'discount' https://github.com/asaaki/discount.ex 'Elixir NIF for discount, a Markdown parser'
	'earmark' https://github.com/pragdave/earmark 'Markdown parser for Elixir'
	'Markdown' https://github.com/devinus/markdown 'Implemented entirely as a NIF binding to the Hoedown library'
	'Pandex' https://github.com/filterkaapi/pandex 'Lightweight Elixir wrapper for Pandoc. Converts Markdown, CommonMark, HTML, Latex, HTML, HTML5, opendocument, rtf, texttile, asciidoc to each other'
-- Miscellaneous
	'address_us' https://github.com/smashedtoatoms/address_us 'Library for parsing US Addresses into their individual parts'
	'Apex' https://github.com/bjro/apex 'Awesome Print for Elixir'
	'AtomVM' https://github.com/bettio/AtomVM 'AtomVM allows to run Elixir/Erlang code on embedded devices such as ESP32 and STM32 microcontrollers'
	'bupe' https://github.com/milmazz/bupe 'EPUB Generator and Parser'
	'charm' https://github.com/tomgco/elixir-charm 'Use ANSI terminal characters to write colors and cursor positions'
	'codec-beam' https://github.com/hkgumbs/codec-beam 'Generate Erlang VM byte code from Haskell'
	'Countries' https://github.com/SebastianSzturo/countries 'Countries is a collection of all sorts of useful information for every country in the ISO 3166 standard'
	'countriex' https://github.com/navinpeiris/countriex 'A pure elixir country data provider containing various information for every country in ISO 3166'
	'dye' https://github.com/Kabie/dye 'A library for dyeing your terminal output'
	'dynamic_compile' https://github.com/okeuday/dynamic_compile 'Compile and load Erlang modules from string input'
	'ecto_autoslug_field' https://github.com/sobolevn/ecto_autoslug_field 'Automatically creates slugs for your Ecto models'
	'egaugex' https://github.com/Brightergy/egaugex 'Client to fetch and parse realtime data from egauge devices'
	'elixir-browser' https://github.com/tuvistavie/elixir-browser 'Browser detection for Elixir'
	'erlang_term' https://github.com/okeuday/erlang_term 'Provide the in-memory size of Erlang terms, ignoring where these are stored'
	'ex2ms' https://github.com/ericmj/ex2ms 'Translates Elixir functions to match specifications for use with `ets`'
	'ex_phone_number' https://github.com/socialpaymentsbv/ex_phone_number 'Format, normalize, and validate phone numbers'
	'ex_rated' https://github.com/grempe/ex_rated 'Simple and flexible rate-limiting for API's or anything'
	'exfcm' https://github.com/Hajto/ExFCM 'Simple wrapper for posting Firebase Cloud Messages'
	'exldap' https://github.com/jmerriweather/exldap 'A module for working with LDAP from Elixir'
	'exlibris' https://github.com/pragdave/exlibris 'A collection of random library functions'
	'expool' https://github.com/whitfin/expool 'A small process pooling library for parallel tasks in Elixir'
	'exprint' https://github.com/parroty/exprintf 'A printf / sprintf library for Elixir, works as a wrapper for :io.format'
	'exquisite' https://github.com/meh/exquisite 'LINQ-like match_spec generation for Elixir'
	'exsync' https://github.com/falood/exsync 'Yet another Elixir reloader'
	'funnel' https://github.com/chatgris/funnel 'Streaming Elixir API built upon ElasticSearch's percolation'
	'gen_task' https://github.com/Nebo15/gen_task 'Generic Task behavior that helps to encapsulate worker errors and recover from them in classic GenStage's'
	'gimei_ex' https://github.com/ma2gedev/gimei_ex 'Elixir port of gimei library'
	'growl' https://github.com/zachallett/growl 'Simple wrapper for growl, the notification system for OSX'
	'hammer' https://github.com/ExHammer/hammer 'A rate-limiter with pluggable storage backends, including Redis'
	'html_entities' https://github.com/martinsvalin/html_entities 'Elixir module for decoding HTML entities in a string'
	'huex' https://github.com/xavier/huex 'Elixir client for Philips Hue connected light bulbs'
	'japan_municipality_key' https://github.com/hykw/japan_municipality_key 'Elixir Library for Japan municipality key converting'
	'keys1value' https://github.com/okeuday/keys1value 'Erlang set associative map for key lists'
	'licensir' https://github.com/unnawut/licensir 'A mix task that lists the license(s) of all installed packages in your project'
	'mixgraph' https://github.com/sivsushruth/mixgraph 'An interactive dependency plotter for your Hex Package'
	'mixstar' https://github.com/ma2gedev/mix-star 'MixStar starred GitHub repository that depends on your project'
	'netrc' https://github.com/ma2gedev/netrcex 'Reads netrc files implemented in Elixir'
	'notifier' https://hex.pm/packages/notifier 'A pluggable architecture for desktop notifications'
	'onetime' https://github.com/ryo33/onetime-elixir 'An onetime key-value store for Elixir'
	'pact' https://github.com/BlakeWilliams/pact 'Better dependency injection in Elixir for cleaner code and testing'
	'phone' https://github.com/fcevado/phone 'A parser to get useful info from telephone numbers'
	'porcelain' https://github.com/alco/porcelain 'Porcelain implements a saner approach to launching and communicating with external OS processes from Elixir'
	'presentex' https://github.com/Cobenian/Presentex 'Elixir to HTML/JavaScript based presentation framework'
	'ratekeeper' https://github.com/whitered/ratekeeper 'Rate limiter and rate-limited actions scheduler'
	'ratx' https://github.com/liveforeverx/ratx 'Rate limiter and overload protection for erlang application'
	'reprise' https://github.com/herenowcoder/reprise 'Simplified module reloader for Elixir'
	'spawndir' https://github.com/jtmoulia/spawndir 'Spawns processes from the file system'
	'spotify_ex' https://github.com/jsncmgs1/spotify_ex 'An Elixir wrapper for the Spotify Web API'
	'std_json_io' https://github.com/hassox/std_json_io 'Application for managing and communicating with IO servers via JSON'
	'url_unroller' https://github.com/semanticart/url_unroller 'Simple URL unroller (un-shortener) in Elixir'
	'vessel' https://github.com/whitfin/vessel 'Elixir MapReduce interfaces with Hadoop Streaming integration'
-- Native Implemented Functions
	'hsnif' https://github.com/urbanserj/hsnif 'Tool that allows to write Erlang NIF libraries in Haskell'
	'nifty' https://github.com/rossjones/nifty 'Helper script for setting up the boilerplate required when writing a NIF'
	'Rustler' https://github.com/hansihe/Rustler 'Library for writing NIFs for Erlang or Elixir safely in Rust. No segfaults'
-- Natural Language Processing (NLP)
	'gibran' https://github.com/abitdodgy/gibran 'Gibran is an Elixir port of [WordsCounted](https://github.com/abitdodgy/words_counted), a natural language processor that extracts useful statistics from text'
	'Paasaa' https://github.com/minibikini/paasaa 'Natural language detection for Elixir'
	'Petrovich' https://github.com/petrovich/petrovich_elixir 'Elixir library to inflect Russian first, last, and middle names'
	'Woolly' https://github.com/pjhampton/woolly 'Woolly is an ambitious Text Mining and Natural Language Processing API for Elixir'
-- Networking
	'asn' https://github.com/ephe-meral/asn 'Can be used to map from IP to AS to ASN'
	'chatter' https://github.com/dbeck/chatter_ex 'Secure message broadcasting based on a mixture of UDP multicast and TCP'
	'download' https://github.com/asiniy/download 'Download files from the internet easily'
	'eio' https://github.com/falood/eio 'Elixir server of engine.io'
	'ExPcap' https://github.com/cobenian/expcap 'PCAP parser written in Elixir'
	'FlyingDdns' https://gitlab.com/timopallach/FlyingDdns 'A dyndns server written in elixir'
	'mac' https://github.com/ephe-meral/mac 'Can be used to find a vendor of a MAC given in hexadecimal string (according to IEEE)'
	'pool' https://github.com/slogsdon/pool 'Socket acceptor pool for Elixir'
	'reagent' https://github.com/meh/reagent 'reagent is a socket acceptor pool for Elixir'
	'sockerl' https://github.com/Pouriya-Jahanbakhsh/sockerl 'Sockerl is an advanced Erlang/Elixir socket library for TCP protocols and provides fast, useful and easy-to-use API for implementing servers, clients and client connection pools'
	'socket' https://github.com/meh/elixir-socket 'Socket wrapping for Elixir'
	'sshex' https://github.com/rubencaro/sshex 'Simple SSH helpers for Elixir'
	'sshkit' https://github.com/bitcrowd/sshkit.ex 'An Elixir toolkit for performing tasks on one or more servers, built on top of Erlang’s SSH application'
	'torex' https://github.com/alexfilatov/torex 'Simple Tor connection library'
	'tunnerl' https://github.com/surik/tunnerl 'SOCKS4 and SOCKS5 proxy server'
	'wifi' https://github.com/gausby/wifi 'Various utility functions for working with the local Wifi network in Elixir'
	'wpa_supplicant' https://github.com/fhunleth/wpa_supplicant.ex 'Elixir interface to the wpa_supplicant'
-- Office
	'excellent' https://github.com/leifg/excellent 'An OpenXL (Excel 2000) Parser for Elixir'
	'xlsxir' https://github.com/kennellroxco/xlsxir 'Xlsx file parser with support for ISO 8601 date formats. Data is extracted to an Erlang Term Storage (ETS) table and is accessed through various functions'
-- ORM and Datamapping
	'amnesia' https://github.com/meh/amnesia 'Mnesia wrapper for Elixir'
	'arbor' https://github.com/coryodaniel/arbor 'Ecto adjacency list and tree traversal'
	'arc_ecto' https://github.com/stavro/arc_ecto 'Arc.Ecto provides an integration with Arc and Ecto'
	'atlas' https://github.com/chrismccord/atlas 'Object Relational Mapper for Elixir'
	'barrel_ex' https://github.com/jxub/barrel_ex.git '[Barrel-db](https://barrel-db.org/) distributed document-oriented database REST client in Elixir'
	'Bolt.Sips' https://github.com/florinpatrascu/bolt_sips 'Neo4j driver for Elixir using the Bolt protocol'
	'boltun' https://github.com/bitgamma/boltun 'Transforms notifications from the Postgres LISTEN/NOTIFY mechanism into callback execution'
	'caylir' https://github.com/mneudert/caylir 'Cayley driver for Elixir'
	'comeonin_ecto_password' https://github.com/vic/comeonin_ecto_password 'Ecto custom type for storing encrypted password using Comeonin'
	'couchdb_connector' https://github.com/locolupo/couchdb_connector 'A connector for CouchDB, the Erlang-based, JSON document database'
	'craterl' https://github.com/crate/craterl 'Erlang client for crate'
	'database_url' https://github.com/s-m-i-t-a/database_url 'Parse database URL and return keyword list for use with Ecto'
	'datomex' https://github.com/edubkendo/datomex 'Elixir driver for the Datomic REST API'
	'ddb_client' https://github.com/dalmatinerdb/ddb_client 'DalmatinerDB client'
	'defql' https://github.com/fazibear/defql 'Create elixir functions with SQL as a body'
	'dexts' https://github.com/meh/dexts 'Disk Elixir Terms Storage, dest wrapper'
	'diver' https://github.com/novabyte/diver 'A HBase driver for Erlang/Elixir using Jinterface and the Asynchbase Java client to query the database'
	'dproto' https://github.com/dalmatinerdb/dproto 'Protocols for DalmatinerDB'
	'dqe' https://github.com/dalmatinerdb/dqe 'DalmatinerDB query engine'
	'ecto' https://github.com/elixir-ecto/ecto 'A database wrapper and language integrated query for Elixir'
	'ecto_cassandra' https://github.com/cafebazaar/ecto-cassandra 'Cassandra DB Adapter for Ecto'
	'ecto_enum' https://github.com/gjaldon/ecto_enum 'Ecto extension to support enums in models'
	'ecto_facade' https://github.com/azranel/ecto_facade 'Ecto facade that allows to separate writes and reads to different databases'
	'ecto_factory' https://hex.pm/packages/ecto_factory 'Easily generate structs based on your ecto schemas'
	'ecto_fixtures' https://github.com/DockYard/ecto_fixtures 'Fixtures for Elixir apps using Ecto'
	'ecto_lazy_float' https://github.com/joshdholtz/ecto-lazy-float 'Ecto.LazyFloat - An Ecto.Float that accepts binary and integers'
	'ecto_migrate' https://github.com/xerions/ecto_migrate 'Ecto auto migration library. It allows to generate and run migrations for initial and update migrations'
	'ecto_mnesia' https://github.com/Nebo15/ecto_mnesia 'Ecto adapter for Mnesia Erlang term database'
	'ecto_ordered' https://github.com/zovafit/ecto-ordered 'Ecto extension for ordered models'
	'ecto_paging' https://github.com/Nebo15/ecto_paging 'Cursor-based pagination for Ecto'
	'ecto_rut' https://github.com/sheharyarn/ecto_rut 'Simple and Powerful Ecto Shortcuts to simplify and speed up development'
	'ecto_shortcuts' https://github.com/MishaConway/ecto_shortcuts 'Shortcuts for common operations in ecto'
	'ecto_shortuuid' https://github.com/gpedic/ecto_shortuuid 'Ecto type which adds support for [ShortUUIDs](https://github.com/gpedic/ex_shortuuid)'
	'ecto_validation_case' https://github.com/danielberkompas/ecto_validation_case 'Simplify your Ecto model validation tests. Loosely inspired by shoulda matchers, but simpler'
	'ectophile' https://github.com/gjaldon/ectophile 'Ecto extension to instantly support file uploads in models'
	'elastic' https://github.com/radar/elastic 'A thin-veneer over HTTPotion to help you talk to Elastic Search'
	'elastix' https://github.com/werbitzky/elastix 'A simple Elastic REST client written in Elixir'
	'eredis' https://github.com/wooga/eredis 'Erlang Redis client'
	'erlastic_search' https://github.com/tsloughter/erlastic_search 'An Erlang app for communicating with Elastic Search's rest interface'
	'esqlite' https://github.com/mmzeeman/esqlite 'Erlang NIF for sqlite'
	'eternal' https://github.com/whitfin/eternal 'Keep your ETS tables alive forever, safely and easily'
	'ets_map' https://github.com/antipax/ets_map 'An Elixir package that provides a Map-like interface (Map/Access/Enumerable/Collectable) backed by an ETS table'
	'eventstore' https://github.com/slashdotdash/eventstore 'A CQRS EventStore using Postgres for persistence, written in Elixir'
	'ex_bitcask' https://github.com/JonGretar/ExBitcask 'Elixir wrapper of Basho's Bitcask Key/Value store'
	'ex_sider' https://github.com/ephe-meral/ex_sider 'Elixir Map/List/Set interfaces for Redis data structures (uses Redix, but that is configurable)'
	'exleveldb' https://github.com/skovsgaard/exleveldb 'Elixir wrapper around Basho's eleveldb module for LevelDB'
	'exnumerator' https://github.com/KamilLelonek/exnumerator 'Elixir enumerable type definition in a simple way to be used with any database'
	'exredis' https://github.com/artemeff/exredis 'Redis client for Elixir'
	'exseed' https://github.com/seaneshbaugh/exseed 'An Elixir library that provides a simple DSL for seeding databases through Ecto'
	'exsolr' https://github.com/dcarneiro/exsolr 'A Solr wrapper written in Elixir'
	'extreme' https://github.com/exponentially/extreme 'An Elixir library using [Eventstore](https://geteventstore.com) for persistence of events generated by aggregates (CQRS)'
	'exts' https://github.com/meh/exts 'Elixir Terms Storage, ets wrapper'
	'github_ecto' https://github.com/wojtekmach/github_ecto 'Ecto adapter for GitHub API'
	'gremlex' https://github.com/Revmaker/gremlex 'Apache Tinkerpop Gremlin Elixir Client'
	'hstore' https://github.com/senecasystems/hstore 'Hstore support for Postgrex'
	'inquisitor' https://github.com/dockyard/inquisitor 'Composable query builder for Ecto'
	'isn' https://github.com/Frost/isn 'Ecto types for the postgreSQL isn extension'
	'kalecto' https://github.com/lau/calecto 'Glue between Kalends and Ecto for saving dates, times and datetimes'
	'kst' https://github.com/synrc/kvs 'Erlang Abstract Term Database'
	'level' https://github.com/gausby/level 'Level for Elixir implements various helper functions and data types for working with Googles Level data store'
	'mariaex' https://github.com/xerions/mariaex 'MariaDB/MySQL driver for Elixir'
	'memento' https://github.com/sheharyarn/memento 'Simple Mnesia Interface in Elixir'
	'moebius' https://github.com/robconery/moebius 'A functional query tool for Elixir and PostgreSQL'
	'mongo' https://github.com/checkiz/elixir-mongo 'MongoDB driver for Elixir'
	'mongodb' https://github.com/ericmj/mongodb 'MongoDB driver for Elixir'
	'mongodb_ecto' https://github.com/michalmuskala/mongodb_ecto 'MongoDB adapter for Ecto'
	'mysql' https://github.com/mysql-otp/mysql-otp 'MySQL/OTP – MySQL driver for Erlang/OTP'
	'mysqlex' https://github.com/tjheeta/mysqlex 'An Ecto-compatible wrapper around the mysql-otp library'
	'neo4j_sips' https://github.com/florinpatrascu/neo4j_sips 'Neo4j driver for Elixir'
	'neo4j_sips_models' https://github.com/florinpatrascu/neo4j_sips_models 'Minimalistic Model support for the Neo4j.Sips Elixir driver'
	'paper_trail' https://github.com/izelnakri/paper_trail 'Ecto plugin for tracking and recording all the changes in your database'
	'postgrex' https://github.com/elixir-ecto/postgrex 'PostgreSQL driver for Elixir'
	'red' https://github.com/rodrigues/red 'Persist relationships between objects in Redis, in a graph-like way'
	'rediscl' https://github.com/akdilsiz/elixir-rediscl 'A minimal redis client with connection pooling and pipe query builder'
	'redix' https://github.com/whatyouhide/redix 'Superfast, pipelined, resilient Redis driver for Elixir'
	'redo' https://github.com/heroku/redo 'Heroku's pipelining redis client for erlang'
	'rethinkdb' https://github.com/hamiltop/rethinkdb-elixir 'Rethinkdb client in pure Elixir using JSON protocol'
	'riak' https://github.com/drewkerrigan/riak-elixir-client 'A Riak client written in Elixir'
	'riak_ecto' https://github.com/pma/riak_ecto 'Riak adapter for Ecto'
	'shards' https://github.com/cabol/shards 'Transparent and out-of-box Sharding support for Erlang/Elixir ETS tables'
	'sql_dust' https://github.com/bettyblocks/sql_dust 'Generate (complex) SQL queries using magical Elixir SQL dust'
	'sqlite_ecto' https://github.com/jazzyb/sqlite_ecto 'SQLite3 adapter for Ecto'
	'sqlitex' https://github.com/mmmries/sqlitex 'An Elixir wrapper around esqlite. Allows access to sqlite3 databases'
	'ssdb_elixir' https://github.com/lidashuang/ssdb-elixir 'ssdb client for Elixir, with focus on performance'
	'tds' https://github.com/livehelpnow/tds 'MSSQL / TDS Database driver for Elixir'
	'tds_ecto' https://github.com/livehelpnow/tds_ecto 'MSSQL / TDS Adapter for Ecto'
	'timex_ecto' https://github.com/bitwalker/timex_ecto 'An adapter for using Timex DateTimes with Ecto'
	'tirexs' https://github.com/Zatvobor/tirexs 'An Elixir flavored DSL for building JSON based requests to Elasticsearch engine'
	'triplex' https://github.com/ateliware/triplex 'Database multitenancy with postgres schemas for Elixir applications'
	'triton' https://github.com/blitzstudios/triton 'Pure Elixir Cassandra ORM built on top of Xandra'
	'udpflux' https://github.com/timbuchwaldt/udpflux 'An opinionated InfluxDB UDP only client'
	'xandra' https://github.com/lexhide/xandra 'Cassandra driver built natively in Elixir and focused on speed, simplicity, and robustness'
	'yar' https://github.com/dantswain/yar 'Yet another Redis client for Elixir'
-- OTP
	'core' https://github.com/fishcakez/core 'Library for selective receive OTP processes'
	'erlexec' https://github.com/saleyn/erlexec 'Execute and control OS processes from Erlang/OTP'
	'immortal' https://github.com/danielberkompas/immortal 'Immortal is a small collection of helper modules intended to make it easier to build a fault-tolerant OTP application'
	'libex_config' https://github.com/reset/libex-config 'Helpers for accessing OTP application configuration'
-- Package Management
	'Hex' https://hex.pm/ 'A package manager for the Erlang ecosystem'
	'rebar3_hex' https://github.com/hexpm/rebar3_hex 'Hex.pm plugin for rebar3'
-- PDF
	'gutenex' https://github.com/SenecaSystems/gutenex 'Native PDF generation for Elixir'
	'pdf2htmlex' https://github.com/ricn/pdf2htmlex 'Convert PDF docs to beautiful HTML files without losing text or format'
	'pdf_generator' https://github.com/gutschilla/elixir-pdf-generator 'A simple wrapper for wkhtmltopdf (HTML to PDF) for use in Elixir projects'
-- Protocols
	'elixir_radius' https://github.com/bearice/elixir-radius 'RADIUS Protocol on Elixir'
	'ex_hl7' https://github.com/jcomellas/ex_hl7 'Health Level 7 (HL7) is a protocol designed to model and transfer health-related data electronically'
	'ex_marshal' https://github.com/gaynetdinov/ex_marshal 'Ruby Marshal format implemented in Elixir'
	'exprotobuf' https://github.com/bitwalker/exprotobuf 'Protocol Buffers in Elixir, made easy'
	'grpc-elixir' https://github.com/tony612/grpc-elixir 'The Elixir implementation of gRPC'
	'message_pack' https://github.com/mururu/msgpack-elixir 'MessagePack Implementation for Elixir'
	'msgpax' https://github.com/lexmag/msgpax 'MessagePack (de)serializer implementation for Elixir'
	'protox' https://github.com/ahamez/protox 'Elixir implementation for Protocol Buffers'
	'riffed' https://github.com/pinterest/riffed 'Provides idiomatic Elixir bindings for Apache Thrift'
	'Sippet' https://github.com/balena/elixir-sippet 'An Elixir library designed to be used as SIP protocol middleware'
	'SMPPEX' https://github.com/savonarola/smppex 'SMPP 3.4 protocol and framework implementation in Elixir'
-- Queue
	'adap' https://github.com/awetzel/adap 'Create a data stream across your information systems to query, augment and transform data according to Elixir matching rules'
	'amqp' https://github.com/pma/amqp 'Simple Elixir wrapper for the Erlang RabbitMQ client, based on Langohr'
	'conduit' https://github.com/conduitframework/conduit 'A framework for working with message queues, with adapters for SQS and AMQP, and plugs for reusable messaging patterns'
	'cspex' https://github.com/costaraphael/cspex 'Simple, OTP compliant, Elixir implementation of CSP channels'
	'dbus' https://github.com/aforward/sadbus 'A dumb message bus for sharing data between microservices decoupled using Redis'
	'ecto_job' https://github.com/mbuhot/ecto_job 'A transactional job queue built with Ecto, PostgreSQL and GenStage'
	'elixir_nsq' https://github.com/wistia/elixir_nsq 'NSQ client library for Elixir'
	'elixir_talk' https://github.com/jsvisa/elixir_talk 'An Elixir client for beanstalkd'
	'enm' https://github.com/basho/enm 'enm is an Erlang port driver that wraps the nanomsg C library'
	'exdisque' https://github.com/mosic/exdisque 'Elixir client for [Disque](https://github.com/antirez/disque), an in-memory, distributed job queue'
	'exq' https://github.com/akira/exq 'Job processing library for Elixir - compatible with Resque/Sidekiq'
	'exrabbit' https://github.com/d0rc/exrabbit 'RabbitMQ bindings and DSL for Elixir'
	'gen_rmq' https://github.com/meltwater/gen_rmq 'Set of behaviours meant to be used to create RabbitMQ consumers and publishers'
	'heapq' https://github.com/takscape/elixir-heapq 'A Heap-based Priority Queue Implementation in Elixir'
	'honeydew' https://github.com/koudelka/honeydew 'Honeydew is a worker pool library for Elixir'
	'hulaaki' https://github.com/suvash/hulaaki 'An MQTT 3.1.1 client library written in Elixir'
	'kafka_consumer' https://github.com/anoskov/kafka-consumer 'Consumer for Kafka using kafka_ex'
	'kafka_ex' https://github.com/kafkaex/kafka_ex 'Kafka client library for Elixir'
	'mqs' https://github.com/synrc/mqs 'RabbitMQ client library, routing keys, RPC over MQ and other stuff'
	'opq' https://github.com/fredwu/opq 'A simple, in-memory queue with worker pooling and rate limiting in Elixir'
	'pqueue' https://github.com/okeuday/pqueue 'Erlang Priority Queue Implementation'
	'que' https://github.com/sheharyarn/que 'Simple Background Job Processing with Mnesia'
	'queuex' https://github.com/falood/queuex 'Priority Queue with multiple backends'
	'RBMQ' https://github.com/Nebo15/rbmq 'Simple API for spawning RabbitMQ Producers and Consumers'
	'Rihanna' https://github.com/samphilipd/rihanna 'High performance postgres-backed job queue for Elixir'
	'stream_weaver' https://hex.pm/packages/stream_weaver 'Library for working with streams'
	'task_bunny' https://github.com/shinyscorpion/task_bunny 'background processing application written in Elixir and uses RabbitMQ as a messaging backend'
	'toniq' https://github.com/joakimk/toniq 'Simple and reliable background job library for Elixir'
	'verk' https://github.com/edgurgel/verk 'Verk is a job processing system backed by Redis. It uses the same job definition of Sidekiq/Resque'
	'work_queue' https://github.com/pragdave/work_queue 'Simple implementation of the hungry-consumer model in Elixir'
-- Release Management
	'changex' https://github.com/Gazler/changex 'Automated changelog generation from GIT logs'
	'distillery' https://github.com/bitwalker/distillery 'A pure Elixir implementation of release packaging functionality for the Erlang VM'
	'eliver' https://github.com/glasnoster/eliver 'Interactive semantic versioning for Elixir packages'
	'exrm' https://github.com/bitwalker/exrm 'Automatically generate a release for your Elixir project'
	'exrm_deb' https://github.com/johnhamelink/exrm_deb 'Create a deb for your Elixir release with ease'
	'exrm_heroku' https://github.com/epsanchezma/exrm-heroku 'Publish your Elixir releases to Heroku with ease'
	'exrm_rpm' https://github.com/smpallen99/exrm-rpm 'Create a RPM for your Elixir release with ease'
	'mix_docker' https://github.com/Recruitee/mix_docker 'Put your Elixir app production release inside minimal docker image'
	'relex' https://github.com/yrashk/relex 'Erlang/Elixir Release Assembler'
	'renew' https://github.com/Nebo15/renew 'Mix task to create mix projects that builds into Docker containers'
-- REST and API
	'accent' https://github.com/sticksnleaves/accent 'Plug for handling the conversion of JSON API keys to different cases'
	'detergent' https://github.com/devinus/detergent 'An emulsifying Erlang SOAP library'
	'detergentex' https://github.com/r-icarus/detergentex 'Elixir binding to Detergent erlang library used to call WSDL/SOAP Services'
	'maru' https://github.com/falood/maru 'Elixir copy of grape for creating REST-like APIs'
	'mazurka' https://github.com/exstruct/mazurka 'hypermedia api toolkit'
	'plug_rest' https://github.com/christopheradams/plug_rest 'REST behaviour and Plug router for hypermedia web applications'
	'signaturex' https://github.com/edgurgel/signaturex 'Simple key/secret based authentication for APIs'
	'urna' https://github.com/meh/urna 'Urna is a simple DSL around cauldron to implement REST services'
	'versionary' https://github.com/sticksnleaves/versionary 'API versioning for Elixir Plug and Phoenix'
-- Search
	'elasticsearch' https://github.com/infinitered/elasticsearch-elixir 'A simple, no-nonsense Elasticsearch library for Elixir'
	'giza_sphinxsearch' https://github.com/Tyler-pierce/giza_sphinxsearch 'Client for Sphinx Search compatible with Manticore'
-- Security
	'pwned' https://github.com/thiamsantos/pwned 'Check if your password has been pwned'
	'safetybox' https://github.com/aforward/safetybox 'Security oriented helper functions for Elixir'
	'sobelow' https://github.com/nccgroup/sobelow 'Security-focused static analysis for the Phoenix Framework'
	'ssl_verify_fun' https://github.com/deadtrickster/ssl_verify_fun.erl 'Collection of ssl verification functions for Erlang'
-- SMS
	'exsms' https://hex.pm/packages/exsms 'A Elixir library for sending transactional SMS - supoprts Sendinblue, mailjet ,msg91 and textlocal'
-- Static Page Generation
	'blogit' https://github.com/meddle0x53/blogit 'An OTP application for generating blogs from git repositories containing markdown files'
	'coil' https://github.com/badosu/coil 'Minimalistic static content engine'
	'glayu' https://github.com/pablomartinezalvarez/glayu 'A static site generator for mid-sized sites'
** (RuntimeError) Line does not match format: '[medusa](https://github.com/Vesuvium/medusa) - A static site generator with support for Pug' Is there a dot at the end?
    check.exs:32: Awesome.parse_line/1
    check.exs:224: Awesome.validate_list_item/1
    check.exs:213: anonymous fn/2 in Awesome.check_list/1
    (elixir) lib/enum.ex:1755: Enum."-reduce/3-lists^foldl/2-0-"/3
    check.exs:213: Awesome.check_list/1
    check.exs:192: Awesome.iterate_content/1
    check.exs:117: Awesome.test_file/1

travis_time:end:0c38a48f:start=1553979702073578573,finish=1553979720320838272,duration=18247259699[0K[31;1mThe command "mix run check.exs" exited with 1.[0m



Done. Your build exited with 1.
