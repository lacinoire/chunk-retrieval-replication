<?xml version="1.0" encoding="utf-8" ?>
<AnalysisProgramOfRegionAnalysisSessionString xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <SaveName>BuildFailureReason/Java/ReactiveX@RxJava</SaveName>
  <LearningData>
    <InputPaths>
      <string>Java/ReactiveX@RxJava/failed/561008032.log</string>
      <string>Java/ReactiveX@RxJava/failed/561016934.log</string>
      <string>Java/ReactiveX@RxJava/failed/562514757.log</string>
      <string>Java/ReactiveX@RxJava/failed/563267830.log</string>
      <string>Java/ReactiveX@RxJava/failed/564360281.log</string>
      <string>Java/ReactiveX@RxJava/failed/564360351.log</string>
      <string>Java/ReactiveX@RxJava/failed/565360975.log</string>
      <string>Java/ReactiveX@RxJava/failed/565366738.log</string>
      <string>Java/ReactiveX@RxJava/failed/565371172.log</string>
      <string>Java/ReactiveX@RxJava/failed/565378954.log</string>
    </InputPaths>
    <Examples>
      <ExampleDataOfString>
        <InputPath>Java/ReactiveX@RxJava/failed/561008032.log</InputPath>
        <Keywords>FAILED, Error, </Keywords>
        <Category>0</Category>
        <Output>io.reactivex.internal.operators.observable.ObservableRefCountTest > publishNoLeak FAILED
    java.lang.AssertionError: 13,928,704 -> 113,907,376
        at org.junit.Assert.fail(Assert.java:88)
        at org.junit.Assert.assertTrue(Assert.java:41)
        at io.reactivex.internal.operators.observable.ObservableRefCountTest.publishNoLeak(ObservableRefCountTest.java:731)</Output>
      </ExampleDataOfString>
      <ExampleDataOfString>
        <InputPath>Java/ReactiveX@RxJava/failed/561016934.log</InputPath>
        <Keywords>FAILED, Error, </Keywords>
        <Category>0</Category>
        <Output>io.reactivex.internal.operators.observable.ObservableRefCountTest > publishNoLeak FAILED
    java.lang.AssertionError: 12,973,696 -> 112,950,472
        at org.junit.Assert.fail(Assert.java:88)
        at org.junit.Assert.assertTrue(Assert.java:41)
        at io.reactivex.internal.operators.observable.ObservableRefCountTest.publishNoLeak(ObservableRefCountTest.java:733)</Output>
      </ExampleDataOfString>
      <ExampleDataOfString>
        <InputPath>Java/ReactiveX@RxJava/failed/562514757.log</InputPath>
        <Keywords>FAILED, Error, </Keywords>
        <Category>0</Category>
        <Output>io.reactivex.internal.operators.flowable.FlowableRefCountTest > publishNoLeak FAILED
    java.lang.AssertionError: 20,471,656 -> 116,032,736
        at org.junit.Assert.fail(Assert.java:88)
        at org.junit.Assert.assertTrue(Assert.java:41)
        at io.reactivex.internal.operators.flowable.FlowableRefCountTest.publishNoLeak(FlowableRefCountTest.java:761)</Output>
      </ExampleDataOfString>
      <ExampleDataOfString>
        <InputPath>Java/ReactiveX@RxJava/failed/563267830.log</InputPath>
        <Keywords>FAILED, Error, </Keywords>
        <Category>0</Category>
        <Output>io.reactivex.internal.operators.flowable.FlowableRefCountTest > publishNoLeak FAILED
    java.lang.AssertionError: 19,199,656 -> 115,794,992
        at org.junit.Assert.fail(Assert.java:88)
        at org.junit.Assert.assertTrue(Assert.java:41)
        at io.reactivex.internal.operators.flowable.FlowableRefCountTest.publishNoLeak(FlowableRefCountTest.java:761)</Output>
      </ExampleDataOfString>
      <ExampleDataOfString>
        <InputPath>Java/ReactiveX@RxJava/failed/564360281.log</InputPath>
        <Keywords>FAILED, Error, </Keywords>
        <Category>0</Category>
        <Output>io.reactivex.observers.SerializedObserverTest > notificationDelay FAILED
    java.lang.AssertionError: expected same:&lt;Thread[pool-16-thread-1,5,FailOnTimeoutGroup]> was not:&lt;Thread[pool-17-thread-1,5,FailOnTimeoutGroup]>
        at org.junit.Assert.fail(Assert.java:88)
        at org.junit.Assert.failNotSame(Assert.java:828)
        at org.junit.Assert.assertSame(Assert.java:771)
        at org.junit.Assert.assertSame(Assert.java:782)
        at io.reactivex.observers.SerializedObserverTest.notificationDelay(SerializedObserverTest.java:320)</Output>
      </ExampleDataOfString>
      <ExampleDataOfString>
        <InputPath>Java/ReactiveX@RxJava/failed/564360351.log</InputPath>
        <Keywords>FAILED, Error, </Keywords>
        <Category>0</Category>
        <Output>io.reactivex.observers.SerializedObserverTest > notificationDelay FAILED
    java.lang.AssertionError: expected same:&lt;Thread[pool-16-thread-1,5,FailOnTimeoutGroup]> was not:&lt;Thread[pool-17-thread-1,5,FailOnTimeoutGroup]>
        at org.junit.Assert.fail(Assert.java:88)
        at org.junit.Assert.failNotSame(Assert.java:828)
        at org.junit.Assert.assertSame(Assert.java:771)
        at org.junit.Assert.assertSame(Assert.java:782)
        at io.reactivex.observers.SerializedObserverTest.notificationDelay(SerializedObserverTest.java:320)</Output>
      </ExampleDataOfString>
      <ExampleDataOfString>
        <InputPath>Java/ReactiveX@RxJava/failed/565360975.log</InputPath>
        <Keywords>FAILED, Error, </Keywords>
        <Category>0</Category>
        <Output>io.reactivex.internal.operators.observable.ObservableRefCountAltTest > publishNoLeak FAILED
    java.lang.AssertionError: 9,283,448 -> 109,750,368
        at org.junit.Assert.fail(Assert.java:88)
        at org.junit.Assert.assertTrue(Assert.java:41)
        at io.reactivex.internal.operators.observable.ObservableRefCountAltTest.publishNoLeak(ObservableRefCountAltTest.java:725)</Output>
      </ExampleDataOfString>
      <ExampleDataOfString>
        <InputPath>Java/ReactiveX@RxJava/failed/565366738.log</InputPath>
        <Keywords>FAILED, Error, </Keywords>
        <Category>0</Category>
        <Output>io.reactivex.internal.operators.observable.ObservableRefCountAltTest > publishNoLeak FAILED
    java.lang.AssertionError: 9,680,016 -> 109,192,144
        at org.junit.Assert.fail(Assert.java:88)
        at org.junit.Assert.assertTrue(Assert.java:41)
        at io.reactivex.internal.operators.observable.ObservableRefCountAltTest.publishNoLeak(ObservableRefCountAltTest.java:725)</Output>
      </ExampleDataOfString>
      <ExampleDataOfString>
        <InputPath>Java/ReactiveX@RxJava/failed/565371172.log</InputPath>
        <Keywords>FAILED, Error, </Keywords>
        <Category>0</Category>
        <Output>io.reactivex.internal.operators.observable.ObservableRefCountAltTest > publishNoLeak FAILED
    java.lang.AssertionError: 9,782,280 -> 109,128,528
        at org.junit.Assert.fail(Assert.java:88)
        at org.junit.Assert.assertTrue(Assert.java:41)
        at io.reactivex.internal.operators.observable.ObservableRefCountAltTest.publishNoLeak(ObservableRefCountAltTest.java:725)</Output>
      </ExampleDataOfString>
      <ExampleDataOfString>
        <InputPath>Java/ReactiveX@RxJava/failed/565378954.log</InputPath>
        <Keywords>FAILED, Error, </Keywords>
        <Category>0</Category>
        <Output>o.reactivex.validators.TooManyEmptyNewLines > tooManyEmptyNewLines2 FAILED
    java.lang.AssertionError: The following code pattern was found: \R\R\R
    FlowableTakeUntilPredicateTest.java#L33
    Found 1 instances
        at io.reactivex.validators.TooManyEmptyNewLines.findPattern(TooManyEmptyNewLines.java:131)
        at io.reactivex.validators.TooManyEmptyNewLines.tooManyEmptyNewLines2(TooManyEmptyNewLines.java:30)</Output>
      </ExampleDataOfString>
    </Examples>
  </LearningData>
  <LogKind>
    <Language>java</Language>
    <BuildTool>android</BuildTool>
  </LogKind>
  <Target>BuildFailureReason</Target>
</AnalysisProgramOfRegionAnalysisSessionString>