<?xml version="1.0" encoding="utf-8" ?>
<AnalysisProgramOfRegionAnalysisSessionString xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <SaveName>BuildFailureReason/Elixir/elixir-lang@elixir</SaveName>
  <LearningData>
    <InputPaths>
      <string>Elixir/elixir-lang@elixir/failed/569217362.log</string>
      <string>Elixir/elixir-lang@elixir/failed/570287145.log</string>
      <string>Elixir/elixir-lang@elixir/failed/570288186.log</string>
      <string>Elixir/elixir-lang@elixir/failed/571777147.log</string>
      <string>Elixir/elixir-lang@elixir/failed/571935145.log</string>
      <string>Elixir/elixir-lang@elixir/failed/572202401.log</string>
      <string>Elixir/elixir-lang@elixir/failed/572202566.log</string>
      <string>Elixir/elixir-lang@elixir/failed/574387148.log</string>
      <string>Elixir/elixir-lang@elixir/failed/574602754.log</string>
      <string>Elixir/elixir-lang@elixir/failed/574613709.log</string>
    </InputPaths>
    <Examples>
      <ExampleDataOfString>
        <InputPath>Elixir/elixir-lang@elixir/failed/569217362.log</InputPath>
        <Keywords>error, Error, 1)</Keywords>
        <Category>0</Category>
        <Output>1) test raises error message about correct usage (Mix.Tasks.IexTest)
     [1m[30mtest/mix/tasks/iex_test.exs:6[0m
     [31m** (ArgumentError) argument error[0m
     [36mstacktrace:[0m
       (stdlib 3.9) :ets.next(:ac_tab, {:application_master, :runtime_tools})
       (stdlib 3.9) ets.erl:775: :ets.do_filter/5
       test/test_helper.exs:52: anonymous fn/0 in MixTest.Case.__ex_unit_setup_0/1
       (ex_unit 1.10.0-dev) lib/ex_unit/on_exit_handler.ex:142: ExUnit.OnExitHandler.exec_callback/1
       (ex_unit 1.10.0-dev) lib/ex_unit/on_exit_handler.ex:128: ExUnit.OnExitHandler.on_exit_runner_loop/0</Output>
      </ExampleDataOfString>
      <ExampleDataOfString>
        <InputPath>Elixir/elixir-lang@elixir/failed/570287145.log</InputPath>
        <Keywords>Error, 1), </Keywords>
        <Category>0</Category>
        <Output>1) test assert received when different message (ExUnit.AssertionsTest)
     [1m[30mtest/ex_unit/assertions_test.exs:396[0m
     [31m** (MatchError) no match of right hand side value: {:hello, [{:message, :not_expected, :at_all}]}[0m
     [36mcode: [0m[{:message, :not_expected, :at_all}] = error.mailbox
     [36mstacktrace:[0m
       test/ex_unit/assertions_test.exs:408: (test)</Output>
      </ExampleDataOfString>
      <ExampleDataOfString>
        <InputPath>Elixir/elixir-lang@elixir/failed/570288186.log</InputPath>
        <Keywords>Error, 1), </Keywords>
        <Category>0</Category>
        <Output>1) test assert received with multiple unique pinned variables (ExUnit.AssertionsTest)
     [1m[30mtest/ex_unit/assertions_test.exs:363[0m
     [31m** (MatchError) no match of right hand side value: {{:{}, [line: 369], [:status, {:^, [line: 369], [{:status, [line: 369], nil}]}, {:^, [line: 369], [{:other_status, [line: 369], nil}]}]}, [{:status, :invalid, :invalid}]}[0m
     [36mcode: [0m[{:status, :invalid, :invalid}] = error.mailbox
     [36mstacktrace:[0m
       test/ex_unit/assertions_test.exs:380: (test)</Output>
      </ExampleDataOfString>
      <ExampleDataOfString>
        <InputPath>Elixir/elixir-lang@elixir/failed/571777147.log</InputPath>
        <Keywords>failed, 1), failure</Keywords>
        <Category>0</Category>
        <Output>1) test implements (almost) all functions in Map (KeywordTest)
     [1m[30mtest/elixir/keyword_test.exs:23[0m
     [31mAssertion with == failed[0m
     [36mcode:  [0massert Map.__info__(:functions) -- Keyword.__info__(:functions) == [from_struct: 1]
     [36mleft:  [0m[[31mfilter: 2[0m, from_struct: 1]
     [36mright: [0m[from_struct: 1]
     [36mstacktrace:[0m
       test/elixir/keyword_test.exs:24: (test)</Output>
      </ExampleDataOfString>
      <ExampleDataOfString>
        <InputPath>Elixir/elixir-lang@elixir/failed/571935145.log</InputPath>
        <Keywords>failed, 1), failure</Keywords>
        <Category>0</Category>
        <Output>1) test implements (almost) all functions in Map (KeywordTest)
     [1m[30mtest/elixir/keyword_test.exs:23[0m
     [31mAssertion with == failed[0m
     [36mcode:  [0massert Map.__info__(:functions) -- Keyword.__info__(:functions) == [from_struct: 1]
     [36mleft:  [0m[[31mfilter: 2[0m, from_struct: 1]
     [36mright: [0m[from_struct: 1]
     [36mstacktrace:[0m
       test/elixir/keyword_test.exs:24: (test)</Output>
      </ExampleDataOfString>
      <ExampleDataOfString>
        <InputPath>Elixir/elixir-lang@elixir/failed/572202401.log</InputPath>
        <Keywords>Error, failed, </Keywords>
        <Category>1</Category>
        <Output>** (CompileError) (for doctest at) lib/list.ex:102: undefined function i/1
    (elixir 1.10.0-dev) src/elixir_locals.erl:108: :elixir_locals."-ensure_no_undefined_local/3-lc$^0/1-0-"/2
    (elixir 1.10.0-dev) src/elixir_locals.erl:109: anonymous fn/3 in :elixir_locals.ensure_no_undefined_local/3</Output>
      </ExampleDataOfString>
      <ExampleDataOfString>
        <InputPath>Elixir/elixir-lang@elixir/failed/572202566.log</InputPath>
        <Keywords>Error, failed, </Keywords>
        <Category>1</Category>
        <Output>** (CompileError) (for doctest at) lib/list.ex:102: undefined function i/1
    (elixir 1.10.0-dev) src/elixir_locals.erl:108: :elixir_locals."-ensure_no_undefined_local/3-lc$^0/1-0-"/2
    (elixir 1.10.0-dev) src/elixir_locals.erl:109: anonymous fn/3 in :elixir_locals.ensure_no_undefined_local/3</Output>
      </ExampleDataOfString>
      <ExampleDataOfString>
        <InputPath>Elixir/elixir-lang@elixir/failed/574387148.log</InputPath>
        <Keywords>failed, 1), failure</Keywords>
        <Category>0</Category>
        <Output>1) test consolidation extracts implementations with binary (Protocol.ConsolidationTest)
     [1m[30mtest/elixir/protocol/consolidation_test.exs:158[0m
     [31mAssertion with in failed[0m
     [36mcode:  [0massert List in protos
     [36mleft:  [0m[31mList[0m
     [36mright: [0m[32m[][0m
     [36mstacktrace:[0m
       test/elixir/protocol/consolidation_test.exs:160: (test)</Output>
      </ExampleDataOfString>
      <ExampleDataOfString>
        <InputPath>Elixir/elixir-lang@elixir/failed/574602754.log</InputPath>
        <Keywords>failed, Error, </Keywords>
        <Category>2</Category>
        <Output>** (Mix) mix format failed due to --check-formatted.
The following files were not formatted:

  * lib/elixir/test/elixir/module/types/infer_test.exs</Output>
      </ExampleDataOfString>
      <ExampleDataOfString>
        <InputPath>Elixir/elixir-lang@elixir/failed/574613709.log</InputPath>
        <Keywords>failed, 1), failure</Keywords>
        <Category>0</Category>
        <Output>1) test pry no sessions (IEx.ServerTest)
     [1m[30mtest/iex/server_test.exs:21[0m
     [31mAssertion with == failed[0m
     [36mcode:  [0massert IEx.pry() == {:error, :no_iex}
     [36mleft:  [0m{:error, [31m:refused[0m}
     [36mright: [0m{:error, [32m:no_iex[0m}
     [36mstacktrace:[0m
       (ex_unit 1.10.0-dev) lib/ex_unit/capture_io.ex:159: ExUnit.CaptureIO.do_capture_io/2
       (ex_unit 1.10.0-dev) lib/ex_unit/capture_io.ex:128: ExUnit.CaptureIO.do_capture_io/3
       test/iex/server_test.exs:22: (test)</Output>
      </ExampleDataOfString>
    </Examples>
  </LearningData>
  <LogKind>
    <Language>java</Language>
    <BuildTool>android</BuildTool>
  </LogKind>
  <Target>BuildFailureReason</Target>
</AnalysisProgramOfRegionAnalysisSessionString>